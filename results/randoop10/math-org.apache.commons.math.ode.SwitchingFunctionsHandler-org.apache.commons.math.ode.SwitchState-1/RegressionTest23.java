import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest23 {

    public static boolean debug = false;

    @Test
    public void test11501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11501");
        java.lang.Object[] objArray5 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray5);
        java.lang.Throwable[] throwableArray7 = integratorException6.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray7);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException25);
        java.lang.String str27 = functionEvaluationException26.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray17);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray44, (java.lang.Throwable) derivativeException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) derivativeException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) derivativeException62);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str27, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test11502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11502");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException16);
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test11503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11503");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
        double[] doubleArray15 = null;
        switchingFunctionsHandler0.stepAccepted((double) '#', doubleArray15);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean19 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler18.add(switchingFunction20, 97.0d, (double) 10L, (int) (byte) 10);
        boolean boolean25 = switchingFunctionsHandler18.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray31 = new double[] { (-1.0f), 1.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) (byte) 10, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler27.isEmpty();
        boolean boolean34 = switchingFunctionsHandler27.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray40 = new double[] { (-1.0f), 1.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) (byte) 10, doubleArray40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler36.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler36.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray53 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler47.stepAccepted((double) (short) 0, doubleArray53);
        switchingFunctionsHandler36.stepAccepted((double) (-1.0f), doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double double59 = switchingFunctionsHandler57.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray65 = new double[] { (-1.0f), 1.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) (byte) 10, doubleArray65);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler61.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray74 = new double[] { (-1.0f), 1.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) (byte) 10, doubleArray74);
        double[] doubleArray81 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean82 = switchingFunctionsHandler70.reset((double) (-1), doubleArray81);
        switchingFunctionsHandler61.stepAccepted(0.0d, doubleArray81);
        switchingFunctionsHandler57.stepAccepted((double) (-1L), doubleArray81);
        boolean boolean85 = switchingFunctionsHandler36.reset((double) 2, doubleArray81);
        boolean boolean86 = switchingFunctionsHandler27.reset(32.0d, doubleArray81);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler88 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray94 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler88.stepAccepted((double) (short) 0, doubleArray94);
        switchingFunctionsHandler27.stepAccepted((double) (byte) 100, doubleArray94);
        boolean boolean97 = switchingFunctionsHandler18.reset((double) (byte) 1, doubleArray94);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11504");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test11505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11505");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (short) 0, (double) 100L, (int) (byte) -1);
        double double22 = switchingFunctionsHandler0.getEventTime();
        boolean boolean23 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test11506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11506");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        java.lang.Throwable[] throwableArray25 = derivativeException24.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, (java.lang.Throwable) derivativeException24);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test11507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11507");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean13 = switchingFunctionsHandler12.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray19 = new double[] { (-1.0f), 1.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) (byte) 10, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean27 = switchingFunctionsHandler15.reset((double) (-1), doubleArray26);
        boolean boolean28 = switchingFunctionsHandler12.reset(97.0d, doubleArray26);
        double double29 = switchingFunctionsHandler12.getEventTime();
        double[] doubleArray31 = null;
        boolean boolean32 = switchingFunctionsHandler12.reset((double) 10.0f, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler12.add(switchingFunction33, (double) 0L, (double) (byte) 1, (-1));
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray43 = new double[] { (-1.0f), 1.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) (byte) 10, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler39.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler39.add(switchingFunction46, (double) 'a', 100.0d, 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray56 = new double[] { (-1.0f), 1.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) (byte) 10, doubleArray56);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator58 = null;
        boolean boolean59 = switchingFunctionsHandler52.evaluateStep(stepInterpolator58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler52.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray69 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler63.stepAccepted((double) (short) 0, doubleArray69);
        switchingFunctionsHandler52.stepAccepted((double) (-1.0f), doubleArray69);
        boolean boolean72 = switchingFunctionsHandler39.reset((double) (short) -1, doubleArray69);
        boolean boolean73 = switchingFunctionsHandler12.reset((double) (byte) -1, doubleArray69);
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray69);
        boolean boolean75 = switchingFunctionsHandler0.isEmpty();
        double double76 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test11508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11508");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 100L, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double double24 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray30 = new double[] { (-1.0f), 1.0d };
        boolean boolean31 = switchingFunctionsHandler26.reset((double) (byte) 10, doubleArray30);
        boolean boolean32 = switchingFunctionsHandler26.isEmpty();
        double[] doubleArray40 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler26.stepAccepted((double) (-1L), doubleArray40);
        boolean boolean42 = switchingFunctionsHandler22.reset((double) 100L, doubleArray40);
        boolean boolean43 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray49 = new double[] { (-1.0f), 1.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) (byte) 10, doubleArray49);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray56 = new double[] { (-1.0f), 1.0d };
        boolean boolean57 = switchingFunctionsHandler52.reset((double) (byte) 10, doubleArray56);
        double[] doubleArray63 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean64 = switchingFunctionsHandler52.reset((double) (-1), doubleArray63);
        switchingFunctionsHandler45.stepAccepted((double) (byte) -1, doubleArray63);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray73 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler67.stepAccepted((double) (short) 0, doubleArray73);
        boolean boolean75 = switchingFunctionsHandler45.reset((double) 10L, doubleArray73);
        boolean boolean76 = switchingFunctionsHandler0.reset((-1.0d), doubleArray73);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction77 = null;
        switchingFunctionsHandler0.add(switchingFunction77, (double) 3, (double) (byte) 10, (int) (byte) 10);
        double double82 = switchingFunctionsHandler0.getEventTime();
        boolean boolean83 = switchingFunctionsHandler0.stop();
        boolean boolean84 = switchingFunctionsHandler0.isEmpty();
        boolean boolean85 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test11509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11509");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test11510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11510");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ");
        java.lang.String str3 = functionEvaluationException2.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: " + "'", str3, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11511");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler4.add(switchingFunction20, 1.0d, 10.0d, (int) 'a');
        boolean boolean25 = switchingFunctionsHandler4.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler27.stepAccepted((double) (short) 0, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) 1L, doubleArray33);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator37 = null;
        boolean boolean38 = switchingFunctionsHandler0.evaluateStep(stepInterpolator37);
        boolean boolean39 = switchingFunctionsHandler0.isEmpty();
        double double40 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler0.evaluateStep(stepInterpolator41);
        boolean boolean43 = switchingFunctionsHandler0.stop();
        boolean boolean44 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler0.add(switchingFunction45, (double) 1L, (double) 1, (-1));
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = switchingFunctionsHandler0.evaluateStep(stepInterpolator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test11512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11512");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray15 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException17);
        java.lang.Object[] objArray24 = functionEvaluationException17.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray24);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "Evaluation failed for argument = {0}", objArray24);
        java.lang.Object[] objArray40 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray40, (java.lang.Throwable) convergenceException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ConvergenceException: ", objArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", objArray24, (java.lang.Throwable) integratorException49);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, (java.lang.Throwable) convergenceException62);
        java.lang.Object[] objArray64 = convergenceException62.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "Evaluation failed for argument = {0}", objArray64);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", objArray64);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", objArray24, (java.lang.Throwable) convergenceException67);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[97.0]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[10.0]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
    }

    @Test
    public void test11513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11513");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "Evaluation failed for argument = {0}");
        java.lang.String str5 = functionEvaluationException4.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(52.0d, (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) functionEvaluationException4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Evaluation failed for argument = {0}" + "'", str5, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test11514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11514");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { (-1.0f), 1.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray9);
        double[] doubleArray16 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean17 = switchingFunctionsHandler5.reset((double) (-1), doubleArray16);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.stop();
        boolean boolean20 = switchingFunctionsHandler0.stop();
        double double21 = switchingFunctionsHandler0.getEventTime();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test11515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11515");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray10 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException9);
        derivativeException5.addSuppressed((java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray13 = derivativeException5.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray18 = functionEvaluationException16.getSuppressed();
        java.lang.Throwable[] throwableArray19 = functionEvaluationException16.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) functionEvaluationException16);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray31);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("", strArray31);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray31);
        java.lang.Throwable[] throwableArray39 = integratorException38.getSuppressed();
        functionEvaluationException20.addSuppressed((java.lang.Throwable) integratorException38);
        double double41 = functionEvaluationException20.getArgument();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
    }

    @Test
    public void test11516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11516");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        java.lang.Object[] objArray31 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray31, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", objArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray49 = functionEvaluationException48.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException54);
        functionEvaluationException51.addSuppressed((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray49, (java.lang.Throwable) functionEvaluationException51);
        java.lang.Object[] objArray58 = functionEvaluationException51.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", objArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray58);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray58);
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray58);
        java.lang.Object[] objArray64 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray64);
        java.lang.Throwable[] throwableArray66 = integratorException65.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!", objArray58, (java.lang.Throwable) integratorException65);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray31, (java.lang.Throwable) integratorException65);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) integratorException70);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray13, (java.lang.Throwable) convergenceException71);
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[97.0]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test11517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11517");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException17);
        java.lang.String str19 = functionEvaluationException18.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray9);
        java.lang.Object[] objArray27 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray27, (java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException32);
        java.lang.Throwable[] throwableArray35 = derivativeException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 1", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException37);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str19, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test11518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11518");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray11);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray26);
        java.lang.String str31 = functionEvaluationException30.getPattern();
        java.lang.Throwable[] throwableArray32 = functionEvaluationException30.getSuppressed();
        double double33 = functionEvaluationException30.getArgument();
        java.lang.String str34 = functionEvaluationException30.getPattern();
        java.lang.Throwable[] throwableArray35 = functionEvaluationException30.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11, (java.lang.Throwable) functionEvaluationException36);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException52);
        java.lang.String str54 = functionEvaluationException53.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray44, (java.lang.Throwable) functionEvaluationException53);
        java.lang.Object[] objArray56 = functionEvaluationException53.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray56, (java.lang.Throwable) convergenceException61);
        java.lang.Throwable[] throwableArray63 = convergenceException61.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException61);
        java.lang.Throwable[] throwableArray65 = convergenceException61.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray11, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException61);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Evaluation failed for argument = 97" + "'", str31, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1.0d) + "'", double33 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Evaluation failed for argument = 97" + "'", str34, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str54, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test11519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11519");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray12);
        java.lang.String str24 = derivativeException23.getPattern();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Evaluation failed for argument = {0}" + "'", str24, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test11520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11520");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException26);
        java.lang.String str28 = convergenceException26.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Convergence failed" + "'", str28, "Convergence failed");
    }

    @Test
    public void test11521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11521");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray3 = functionEvaluationException2.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException2);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) integratorException4);
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test11522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11522");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray15 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException14);
        java.lang.String str17 = derivativeException16.getPattern();
        java.lang.String str18 = derivativeException16.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException24);
        derivativeException16.addSuppressed((java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Evaluation failed for argument = 97" + "'", str17, "Evaluation failed for argument = 97");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Evaluation failed for argument = 97" + "'", str18, "Evaluation failed for argument = 97");
    }

    @Test
    public void test11523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11523");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", throwable5);
        double double7 = functionEvaluationException6.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray21 = functionEvaluationException20.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException26);
        functionEvaluationException23.addSuppressed((java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray30 = functionEvaluationException23.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", objArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", objArray30);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray30);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) integratorException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) integratorException35);
        double double38 = functionEvaluationException37.getArgument();
        functionEvaluationException6.addSuppressed((java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Evaluation failed for argument = 2", (java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) functionEvaluationException6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.0d + "'", double7 == 2.0d);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[97.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
    }

    @Test
    public void test11524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11524");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray16);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray52 = functionEvaluationException51.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException51);
        derivativeException47.addSuppressed((java.lang.Throwable) functionEvaluationException51);
        java.lang.Throwable[] throwableArray55 = derivativeException47.getSuppressed();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray65);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray65);
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray65);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray65, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray55, (java.lang.Throwable) functionEvaluationException73);
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException75);
        java.lang.String str77 = functionEvaluationException75.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException80);
        java.lang.Throwable[] throwableArray82 = convergenceException80.getSuppressed();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: " + "'", str77, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test11525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11525");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException18);
        java.lang.Object[] objArray20 = integratorException19.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: ", objArray20, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) integratorException24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) integratorException27);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
    }

    @Test
    public void test11526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11526");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13);
        java.lang.String str26 = integratorException25.toString();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: " + "'", str26, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11527");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray13 = functionEvaluationException12.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException12);
        derivativeException8.addSuppressed((java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException18);
        java.lang.Object[] objArray20 = convergenceException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray39 = functionEvaluationException38.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException44);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) functionEvaluationException41);
        java.lang.Object[] objArray48 = functionEvaluationException41.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray48);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray48, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "Evaluation failed for argument = {0}", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException59);
        double double61 = functionEvaluationException59.getArgument();
        double double62 = functionEvaluationException59.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray48, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray20, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.FunctionEvaluationException: ", objArray20);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[97.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 97.0d + "'", double61 == 97.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 97.0d + "'", double62 == 97.0d);
    }

    @Test
    public void test11528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11528");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException19);
        java.lang.String str22 = convergenceException21.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray10, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test11529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11529");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, (double) 100.0f, (double) (-1L), 0);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test11530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11530");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { (-1.0f), 1.0d };
        boolean boolean12 = switchingFunctionsHandler7.reset((double) (byte) 10, doubleArray11);
        double[] doubleArray18 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean19 = switchingFunctionsHandler7.reset((double) (-1), doubleArray18);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray27 = new double[] { (-1.0f), 1.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) (byte) 10, doubleArray27);
        double[] doubleArray34 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean35 = switchingFunctionsHandler23.reset((double) (-1), doubleArray34);
        boolean boolean36 = switchingFunctionsHandler23.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { (-1.0f), 1.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) (byte) 10, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray52 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler38.stepAccepted((double) (-1L), doubleArray52);
        boolean boolean54 = switchingFunctionsHandler23.reset((-1.0d), doubleArray52);
        boolean boolean55 = switchingFunctionsHandler0.reset(0.0d, doubleArray52);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler0.evaluateStep(stepInterpolator56);
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        double double59 = switchingFunctionsHandler0.getEventTime();
        boolean boolean60 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray66 = new double[] { (-1.0f), 1.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) (byte) 10, doubleArray66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler62.evaluateStep(stepInterpolator68);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler62.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction72 = null;
        switchingFunctionsHandler62.add(switchingFunction72, (double) (short) 100, 0.0d, (int) (short) 1);
        double double77 = switchingFunctionsHandler62.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler79 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray85 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler79.stepAccepted((double) (short) 0, doubleArray85);
        boolean boolean87 = switchingFunctionsHandler62.reset((double) 0.0f, doubleArray85);
        boolean boolean88 = switchingFunctionsHandler0.reset((double) 100L, doubleArray85);
        boolean boolean89 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        switchingFunctionsHandler0.add(switchingFunction90, (double) (-1), (double) 0.0f, 3);
        boolean boolean95 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test11531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11531");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException2);
        java.lang.Throwable[] throwableArray4 = functionEvaluationException2.getSuppressed();
        java.lang.String str5 = functionEvaluationException2.getPattern();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2" + "'", str5, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
    }

    @Test
    public void test11532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11532");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException(throwable26);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray34);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray34);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray34);
        integratorException27.addSuppressed((java.lang.Throwable) integratorException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException38);
        double double41 = functionEvaluationException40.getArgument();
        java.lang.Object[] objArray42 = functionEvaluationException40.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException45);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1.0d) + "'", double41 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
    }

    @Test
    public void test11533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11533");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "", (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, (java.lang.Throwable) functionEvaluationException4);
        double double7 = functionEvaluationException6.getArgument();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test11534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11534");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "hi!", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray11);
        java.lang.Object[] objArray23 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray23);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException(throwable26);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException31);
        derivativeException27.addSuppressed((java.lang.Throwable) integratorException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray23, (java.lang.Throwable) integratorException35);
        java.lang.Object[] objArray38 = integratorException35.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray38, (java.lang.Throwable) derivativeException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray11, (java.lang.Throwable) derivativeException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(97.0d);
        double double48 = functionEvaluationException47.getArgument();
        derivativeException43.addSuppressed((java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException47);
        java.lang.Throwable[] throwableArray51 = functionEvaluationException47.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray51);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10.0]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 97.0d + "'", double48 == 97.0d);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test11535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11535");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Throwable) derivativeException10);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray13);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        java.lang.Object[] objArray16 = integratorException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray16);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException34);
        java.lang.String str36 = functionEvaluationException35.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray26, (java.lang.Throwable) functionEvaluationException35);
        java.lang.Object[] objArray38 = functionEvaluationException35.getArguments();
        java.lang.Object[] objArray45 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray45, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray45);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray57);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray57);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray45, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException67);
        java.lang.Throwable[] throwableArray69 = functionEvaluationException67.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException70);
        java.lang.String str72 = convergenceException70.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException70);
        convergenceException60.addSuppressed((java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray38, (java.lang.Throwable) derivativeException76);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", objArray16, (java.lang.Throwable) functionEvaluationException77);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str36, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[10.0]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test11536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11536");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException19);
        java.lang.String str21 = functionEvaluationException20.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray11, (java.lang.Throwable) functionEvaluationException20);
        java.lang.Object[] objArray23 = functionEvaluationException20.getArguments();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray30, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray30);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray30, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException52);
        java.lang.Throwable[] throwableArray54 = functionEvaluationException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException55);
        java.lang.String str57 = convergenceException55.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException55);
        convergenceException45.addSuppressed((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray23, (java.lang.Throwable) derivativeException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException64);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str21, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[10.0]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test11537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11537");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray13 = functionEvaluationException12.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Throwable[] throwableArray22 = functionEvaluationException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) convergenceException24);
        java.lang.Object[] objArray27 = convergenceException24.getArguments();
        java.lang.Throwable throwable31 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException(throwable31);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        derivativeException32.addSuppressed((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException40);
        java.lang.Object[] objArray42 = integratorException40.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray42);
        java.lang.Object[] objArray45 = convergenceException44.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException", objArray27, (java.lang.Throwable) convergenceException44);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray59);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray59);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray59);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray59);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray27, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", objArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException70);
        java.lang.Throwable[] throwableArray72 = derivativeException71.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[org.apache.commons.math.ConvergenceException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[org.apache.commons.math.ConvergenceException: hi!]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test11538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11538");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray8);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", throwable13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray8, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, (java.lang.Throwable) convergenceException14);
        java.lang.Object[] objArray18 = convergenceException14.getArguments();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray18, (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ");
        java.lang.Object[] objArray43 = convergenceException42.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 2, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", objArray18, (java.lang.Throwable) convergenceException42);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
    }

    @Test
    public void test11539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11539");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray7);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray7);
        java.lang.Throwable throwable13 = null;
        // The following exception was thrown during execution in test generation
        try {
            derivativeException12.addSuppressed(throwable13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test11540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11540");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray16);
        java.lang.Object[] objArray24 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray24);
        java.lang.Object[] objArray26 = integratorException25.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) integratorException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test11541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11541");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        java.lang.Throwable[] throwableArray5 = functionEvaluationException4.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test11542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11542");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray22 = new double[] { (-1.0f), 1.0d };
        boolean boolean23 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler18.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler18.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler18.getEventTime();
        boolean boolean29 = switchingFunctionsHandler18.isEmpty();
        boolean boolean30 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray38 = new double[] { (-1.0f), 1.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) (byte) 10, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean46 = switchingFunctionsHandler34.reset((double) (-1), doubleArray45);
        boolean boolean47 = switchingFunctionsHandler32.reset((double) 1L, doubleArray45);
        boolean boolean48 = switchingFunctionsHandler18.reset((-1.0d), doubleArray45);
        boolean boolean49 = switchingFunctionsHandler0.reset((double) 1, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray57 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler51.stepAccepted((double) (short) 0, doubleArray57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray64 = new double[] { (-1.0f), 1.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) (byte) 10, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray74 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler60.stepAccepted((double) (-1L), doubleArray74);
        switchingFunctionsHandler51.stepAccepted((double) (byte) 10, doubleArray74);
        boolean boolean77 = switchingFunctionsHandler0.reset(32.0d, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler0.isEmpty();
        double double79 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator80 = null;
        boolean boolean81 = switchingFunctionsHandler0.evaluateStep(stepInterpolator80);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11543");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test11544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11544");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray15);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray30 = functionEvaluationException29.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException29);
        derivativeException25.addSuppressed((java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray15, (java.lang.Throwable) integratorException33);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray15);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException("", strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray51);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ode.IntegratorException integratorException70 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray66);
        java.lang.Throwable[] throwableArray71 = integratorException70.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) integratorException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "", (java.lang.Object[]) strArray51, (java.lang.Throwable) integratorException70);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray51);
        java.lang.Throwable throwable75 = null;
        org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray51, throwable75);
        java.lang.Object[] objArray77 = convergenceException76.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException76);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!]");
    }

    @Test
    public void test11545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11545");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray15);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) derivativeException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException44);
        double double46 = functionEvaluationException44.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 2, (java.lang.Throwable) functionEvaluationException44);
        functionEvaluationException35.addSuppressed((java.lang.Throwable) functionEvaluationException44);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray63);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray63);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException82);
        java.lang.String str84 = functionEvaluationException83.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray74, (java.lang.Throwable) functionEvaluationException83);
        org.apache.commons.math.ode.IntegratorException integratorException86 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray74);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray63, (java.lang.Throwable) integratorException86);
        java.lang.Throwable throwable89 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException(throwable89);
        java.lang.Object[] objArray91 = derivativeException90.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) derivativeException90);
        org.apache.commons.math.ode.IntegratorException integratorException93 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException90);
        java.lang.String str94 = integratorException93.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray63, (java.lang.Throwable) integratorException93);
        org.apache.commons.math.ode.DerivativeException derivativeException96 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray63);
        org.apache.commons.math.ode.IntegratorException integratorException97 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray63);
        functionEvaluationException44.addSuppressed((java.lang.Throwable) integratorException97);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 97.0d + "'", double46 == 97.0d);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str84, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test11546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11546");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException(throwable8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) functionEvaluationException15);
    }

    @Test
    public void test11547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11547");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", strArray16);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray42 = derivativeException40.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException40);
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16, throwable44);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
    }

    @Test
    public void test11548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11548");
        java.lang.Object[] objArray2 = null;
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray6 = convergenceException5.getSuppressed();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, (java.lang.Throwable) functionEvaluationException14);
        convergenceException5.addSuppressed((java.lang.Throwable) functionEvaluationException15);
        java.lang.Throwable[] throwableArray17 = convergenceException5.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(97.0d, (java.lang.Throwable) integratorException18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray2, (java.lang.Throwable) functionEvaluationException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test11549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11549");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 100.0f, 2.0d, 1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test11550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11550");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException(throwable4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException5);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException7);
    }

    @Test
    public void test11551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11551");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = hi!", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test11552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11552");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        boolean boolean17 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, 0.0d, 100.0d, (int) (short) 0);
        double double25 = switchingFunctionsHandler0.getEventTime();
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test11553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11553");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        double double4 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) (short) 0, (double) (short) 10, 3);
        boolean boolean10 = switchingFunctionsHandler0.stop();
        double double11 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { (-1.0f), 1.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler13.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler13.stop();
        double double22 = switchingFunctionsHandler13.getEventTime();
        double double23 = switchingFunctionsHandler13.getEventTime();
        boolean boolean24 = switchingFunctionsHandler13.isEmpty();
        double double25 = switchingFunctionsHandler13.getEventTime();
        double double26 = switchingFunctionsHandler13.getEventTime();
        double double27 = switchingFunctionsHandler13.getEventTime();
        boolean boolean28 = switchingFunctionsHandler13.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { (-1.0f), 1.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) (byte) 10, doubleArray34);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator36 = null;
        boolean boolean37 = switchingFunctionsHandler30.evaluateStep(stepInterpolator36);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler30.evaluateStep(stepInterpolator38);
        double double40 = switchingFunctionsHandler30.getEventTime();
        boolean boolean41 = switchingFunctionsHandler30.isEmpty();
        boolean boolean42 = switchingFunctionsHandler30.isEmpty();
        double double43 = switchingFunctionsHandler30.getEventTime();
        boolean boolean44 = switchingFunctionsHandler30.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double double48 = switchingFunctionsHandler46.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray54 = new double[] { (-1.0f), 1.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) (byte) 10, doubleArray54);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator56 = null;
        boolean boolean57 = switchingFunctionsHandler50.evaluateStep(stepInterpolator56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler59 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray63 = new double[] { (-1.0f), 1.0d };
        boolean boolean64 = switchingFunctionsHandler59.reset((double) (byte) 10, doubleArray63);
        double[] doubleArray70 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean71 = switchingFunctionsHandler59.reset((double) (-1), doubleArray70);
        switchingFunctionsHandler50.stepAccepted(0.0d, doubleArray70);
        switchingFunctionsHandler46.stepAccepted((double) (-1L), doubleArray70);
        switchingFunctionsHandler30.stepAccepted(97.0d, doubleArray70);
        switchingFunctionsHandler13.stepAccepted((double) (-1), doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test11554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11554");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray21);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray44);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray21, (java.lang.Throwable) derivativeException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException55);
        java.lang.String str60 = convergenceException59.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException59);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str60, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11555");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray9);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray24);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray24);
        java.lang.Object[] objArray31 = functionEvaluationException30.getArguments();
        convergenceException14.addSuppressed((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Throwable) convergenceException33);
        java.lang.String str35 = convergenceException33.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.commons.math.ConvergenceException: " + "'", str35, "org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test11556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11556");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        functionEvaluationException8.addSuppressed((java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException22);
        functionEvaluationException19.addSuppressed((java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException8.addSuppressed((java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Throwable) functionEvaluationException19);
        java.lang.Throwable[] throwableArray29 = functionEvaluationException28.getSuppressed();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) convergenceException42);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) derivativeException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) convergenceException56);
        java.lang.String str58 = convergenceException56.toString();
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: " + "'", str58, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test11557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11557");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11558");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) 10.0f, 97.0d, (int) (byte) 100);
        double double21 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 3, (double) 0, (int) ' ');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { (-1.0f), 1.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) (byte) 10, doubleArray34);
        double[] doubleArray41 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean42 = switchingFunctionsHandler30.reset((double) (-1), doubleArray41);
        boolean boolean43 = switchingFunctionsHandler28.reset((double) 1L, doubleArray41);
        boolean boolean44 = switchingFunctionsHandler28.isEmpty();
        double double45 = switchingFunctionsHandler28.getEventTime();
        double double46 = switchingFunctionsHandler28.getEventTime();
        boolean boolean47 = switchingFunctionsHandler28.stop();
        double double48 = switchingFunctionsHandler28.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler28.add(switchingFunction49, 1.0d, (double) (short) 100, (int) (byte) 100);
        boolean boolean54 = switchingFunctionsHandler28.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction55 = null;
        switchingFunctionsHandler28.add(switchingFunction55, 0.0d, (double) (byte) 1, 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray65 = new double[] { (-1.0f), 1.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) (byte) 10, doubleArray65);
        double double67 = switchingFunctionsHandler61.getEventTime();
        double double68 = switchingFunctionsHandler61.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double71 = switchingFunctionsHandler70.getEventTime();
        double double72 = switchingFunctionsHandler70.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler74 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray78 = new double[] { (-1.0f), 1.0d };
        boolean boolean79 = switchingFunctionsHandler74.reset((double) (byte) 10, doubleArray78);
        boolean boolean80 = switchingFunctionsHandler74.isEmpty();
        double[] doubleArray88 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler74.stepAccepted((double) (-1L), doubleArray88);
        boolean boolean90 = switchingFunctionsHandler70.reset((double) 100L, doubleArray88);
        boolean boolean91 = switchingFunctionsHandler61.reset(35.0d, doubleArray88);
        boolean boolean92 = switchingFunctionsHandler28.reset(52.0d, doubleArray88);
        boolean boolean93 = switchingFunctionsHandler0.reset((double) (-1.0f), doubleArray88);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction94 = null;
        switchingFunctionsHandler0.add(switchingFunction94, (-1.0d), (double) (byte) -1, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertTrue(Double.isNaN(double46));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test11559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11559");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        double double9 = functionEvaluationException7.getArgument();
        double double10 = functionEvaluationException7.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException7);
        java.lang.Object[] objArray12 = derivativeException11.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "hi!", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", objArray12);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 97.0d + "'", double9 == 97.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 97.0d + "'", double10 == 97.0d);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test11560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11560");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        boolean boolean4 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction5 = null;
        switchingFunctionsHandler0.add(switchingFunction5, (double) 10L, 10.0d, 2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { (-1.0f), 1.0d };
        boolean boolean16 = switchingFunctionsHandler11.reset((double) (byte) 10, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler11.isEmpty();
        double[] doubleArray25 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler11.stepAccepted((double) (-1L), doubleArray25);
        double double27 = switchingFunctionsHandler11.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler11.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray35 = new double[] { (-1.0f), 1.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) (byte) 10, doubleArray35);
        boolean boolean37 = switchingFunctionsHandler31.stop();
        boolean boolean38 = switchingFunctionsHandler31.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler40 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray46 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler40.stepAccepted((double) (short) 0, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler40.isEmpty();
        boolean boolean49 = switchingFunctionsHandler40.stop();
        double double50 = switchingFunctionsHandler40.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray59 = new double[] { (-1.0f), 1.0d };
        boolean boolean60 = switchingFunctionsHandler55.reset((double) (byte) 10, doubleArray59);
        double[] doubleArray66 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean67 = switchingFunctionsHandler55.reset((double) (-1), doubleArray66);
        boolean boolean68 = switchingFunctionsHandler52.reset(97.0d, doubleArray66);
        double double69 = switchingFunctionsHandler52.getEventTime();
        boolean boolean70 = switchingFunctionsHandler52.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray76 = new double[] { (-1.0f), 1.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) (byte) 10, doubleArray76);
        double[] doubleArray83 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean84 = switchingFunctionsHandler72.reset((double) (-1), doubleArray83);
        switchingFunctionsHandler52.stepAccepted((double) (byte) 0, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler40.reset((double) 100L, doubleArray83);
        switchingFunctionsHandler31.stepAccepted((double) 100, doubleArray83);
        switchingFunctionsHandler11.stepAccepted(32.0d, doubleArray83);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray83);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        switchingFunctionsHandler0.add(switchingFunction90, (double) 100.0f, (double) 10, (int) '4');
        boolean boolean95 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test11561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11561");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", strArray9);
        java.lang.Object[] objArray16 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray16, (java.lang.Throwable) convergenceException20);
        double double22 = functionEvaluationException21.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException21);
        double double24 = functionEvaluationException21.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException26);
        java.lang.Object[] objArray28 = convergenceException26.getArguments();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            convergenceException26.addSuppressed(throwable29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
    }

    @Test
    public void test11562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11562");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11563");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray10 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        functionEvaluationException12.addSuppressed((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) functionEvaluationException12);
        java.lang.Object[] objArray19 = functionEvaluationException12.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray19);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[97.0]");
    }

    @Test
    public void test11564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11564");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test11565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11565");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double double6 = switchingFunctionsHandler4.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray12 = new double[] { (-1.0f), 1.0d };
        boolean boolean13 = switchingFunctionsHandler8.reset((double) (byte) 10, doubleArray12);
        boolean boolean14 = switchingFunctionsHandler8.isEmpty();
        double[] doubleArray22 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler8.stepAccepted((double) (-1L), doubleArray22);
        boolean boolean24 = switchingFunctionsHandler4.reset((double) 100L, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler28.stepAccepted((double) (short) 0, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray41 = new double[] { (-1.0f), 1.0d };
        boolean boolean42 = switchingFunctionsHandler37.reset((double) (byte) 10, doubleArray41);
        boolean boolean43 = switchingFunctionsHandler37.isEmpty();
        double[] doubleArray51 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler37.stepAccepted((double) (-1L), doubleArray51);
        switchingFunctionsHandler28.stepAccepted((double) (byte) 10, doubleArray51);
        boolean boolean54 = switchingFunctionsHandler28.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray60 = new double[] { (-1.0f), 1.0d };
        boolean boolean61 = switchingFunctionsHandler56.reset((double) (byte) 10, doubleArray60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler56.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler56.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler56.add(switchingFunction66, (double) (short) 100, 0.0d, (int) (short) 1);
        double double71 = switchingFunctionsHandler56.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray79 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler73.stepAccepted((double) (short) 0, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler56.reset((double) 0.0f, doubleArray79);
        boolean boolean82 = switchingFunctionsHandler28.reset((double) (-1), doubleArray79);
        boolean boolean83 = switchingFunctionsHandler0.reset(35.0d, doubleArray79);
        boolean boolean84 = switchingFunctionsHandler0.isEmpty();
        double double85 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction86 = null;
        switchingFunctionsHandler0.add(switchingFunction86, (double) 10, 2.0d, (int) (byte) 10);
        double double91 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double91));
    }

    @Test
    public void test11566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11566");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ode.DerivativeException");
        double double3 = functionEvaluationException2.getArgument();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
    }

    @Test
    public void test11567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11567");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException19);
        java.lang.String str21 = functionEvaluationException20.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray11, (java.lang.Throwable) functionEvaluationException20);
        java.lang.Object[] objArray23 = functionEvaluationException20.getArguments();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray30, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray30);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray30, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException52);
        java.lang.Throwable[] throwableArray54 = functionEvaluationException52.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException55);
        java.lang.String str57 = convergenceException55.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException55);
        convergenceException45.addSuppressed((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray23, (java.lang.Throwable) derivativeException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) functionEvaluationException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException65);
        java.lang.Throwable[] throwableArray67 = functionEvaluationException65.getSuppressed();
        java.lang.Class<?> wildcardClass68 = throwableArray67.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str21, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[10.0]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test11568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11568");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray10);
        java.lang.String str15 = functionEvaluationException14.getPattern();
        java.lang.Throwable[] throwableArray16 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) functionEvaluationException14);
        java.lang.Throwable[] throwableArray18 = functionEvaluationException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException20);
        java.lang.Throwable[] throwableArray22 = convergenceException20.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) convergenceException20);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Evaluation failed for argument = 97" + "'", str15, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test11569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11569");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException5);
    }

    @Test
    public void test11570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11570");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", throwable1);
        java.lang.Class<?> wildcardClass3 = convergenceException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test11571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11571");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray9);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test11572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11572");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException15);
        java.lang.String str17 = functionEvaluationException16.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray7, (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray7);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray28 = functionEvaluationException27.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException27);
        derivativeException23.addSuppressed((java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray7, (java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        java.lang.Throwable[] throwableArray34 = derivativeException23.getSuppressed();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test11573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11573");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException4);
        java.lang.Object[] objArray6 = functionEvaluationException5.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException", objArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray6);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test11574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11574");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        java.lang.Throwable[] throwableArray20 = functionEvaluationException18.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray9, (java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        java.lang.Object[] objArray26 = derivativeException25.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: hi!", objArray26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException27);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test11575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11575");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException10);
        java.lang.String str12 = functionEvaluationException10.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(100.0d, (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Throwable) functionEvaluationException10);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException10.getSuppressed();
        double double18 = functionEvaluationException10.getArgument();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: " + "'", str12, "org.apache.commons.math.FunctionEvaluationException: ");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test11576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11576");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray12);
        java.lang.String str17 = functionEvaluationException16.getPattern();
        java.lang.Throwable[] throwableArray18 = functionEvaluationException16.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray18);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray18, throwable20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException30);
        functionEvaluationException27.addSuppressed((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException27);
        java.lang.String str34 = functionEvaluationException27.getPattern();
        java.lang.String str35 = functionEvaluationException27.getPattern();
        java.lang.Object[] objArray36 = functionEvaluationException27.getArguments();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray42, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException54);
        functionEvaluationException51.addSuppressed((java.lang.Throwable) convergenceException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray42, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "hi!", objArray36, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException63);
        java.lang.Throwable[] throwableArray65 = convergenceException63.getSuppressed();
        java.lang.Throwable[] throwableArray66 = convergenceException63.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException63);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Evaluation failed for argument = 97" + "'", str17, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Evaluation failed for argument = {0}" + "'", str34, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Evaluation failed for argument = {0}" + "'", str35, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[97.0]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test11577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11577");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray11);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray35);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("", strArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("", strArray58);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray58);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray35, (java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException67);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray11, (java.lang.Throwable) convergenceException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) convergenceException69);
        double double71 = functionEvaluationException70.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException70);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
    }

    @Test
    public void test11578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11578");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        functionEvaluationException3.addSuppressed((java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException3);
        java.lang.String str11 = functionEvaluationException10.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray26 = functionEvaluationException25.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException31);
        functionEvaluationException28.addSuppressed((java.lang.Throwable) convergenceException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) functionEvaluationException28);
        java.lang.Throwable throwable35 = null;
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException(throwable35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray26, throwable35);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException39);
        java.lang.Throwable[] throwableArray41 = convergenceException39.getSuppressed();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray52);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) derivativeException60);
        java.lang.Throwable throwable63 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException(throwable63);
        java.lang.Object[] objArray65 = derivativeException64.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) derivativeException64);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException64);
        java.lang.String str68 = integratorException67.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) integratorException67);
        integratorException14.addSuppressed((java.lang.Throwable) integratorException67);
        org.apache.commons.math.ode.DerivativeException derivativeException72 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException14);
        java.lang.Class<?> wildcardClass73 = integratorException14.getClass();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Evaluation failed for argument = 97" + "'", str11, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test11579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11579");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "hi!", objArray11);
        java.lang.Object[] objArray20 = functionEvaluationException19.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.FunctionEvaluationException: ", objArray20);
        java.lang.Object[] objArray22 = functionEvaluationException21.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException21);
        java.lang.Object[] objArray24 = convergenceException23.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = 0", objArray24);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10.0]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[10.0]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10.0]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test11580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11580");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (byte) -1, (double) 0.0f, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (-1.0d), (double) 100L, 1);
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray18 = new double[] { (-1.0f), 1.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) (byte) 10, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray25 = new double[] { (-1.0f), 1.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) (byte) 10, doubleArray25);
        double[] doubleArray32 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean33 = switchingFunctionsHandler21.reset((double) (-1), doubleArray32);
        switchingFunctionsHandler14.stepAccepted((double) (byte) -1, doubleArray32);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction35 = null;
        switchingFunctionsHandler14.add(switchingFunction35, (double) (-1), (double) (short) 1, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray45 = new double[] { (-1.0f), 1.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) (byte) 10, doubleArray45);
        double[] doubleArray52 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean53 = switchingFunctionsHandler41.reset((double) (-1), doubleArray52);
        boolean boolean54 = switchingFunctionsHandler41.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray60 = new double[] { (-1.0f), 1.0d };
        boolean boolean61 = switchingFunctionsHandler56.reset((double) (byte) 10, doubleArray60);
        boolean boolean62 = switchingFunctionsHandler56.isEmpty();
        double[] doubleArray70 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler56.stepAccepted((double) (-1L), doubleArray70);
        boolean boolean72 = switchingFunctionsHandler41.reset((-1.0d), doubleArray70);
        boolean boolean73 = switchingFunctionsHandler14.reset((double) 0, doubleArray70);
        boolean boolean74 = switchingFunctionsHandler0.reset((double) 1.0f, doubleArray70);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test11581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11581");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ");
    }

    @Test
    public void test11582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11582");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        double double10 = switchingFunctionsHandler0.getEventTime();
        double double11 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray22 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler16.stepAccepted((double) (short) 0, doubleArray22);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray29 = new double[] { (-1.0f), 1.0d };
        boolean boolean30 = switchingFunctionsHandler25.reset((double) (byte) 10, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler25.isEmpty();
        double[] doubleArray39 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler25.stepAccepted((double) (-1L), doubleArray39);
        switchingFunctionsHandler16.stepAccepted((double) (byte) 10, doubleArray39);
        boolean boolean42 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler44 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray48 = new double[] { (-1.0f), 1.0d };
        boolean boolean49 = switchingFunctionsHandler44.reset((double) (byte) 10, doubleArray48);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator50 = null;
        boolean boolean51 = switchingFunctionsHandler44.evaluateStep(stepInterpolator50);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler44.evaluateStep(stepInterpolator52);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler44.add(switchingFunction54, (double) (short) 100, 0.0d, (int) (short) 1);
        double double59 = switchingFunctionsHandler44.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray67 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler61.stepAccepted((double) (short) 0, doubleArray67);
        boolean boolean69 = switchingFunctionsHandler44.reset((double) 0.0f, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray75 = new double[] { (-1.0f), 1.0d };
        boolean boolean76 = switchingFunctionsHandler71.reset((double) (byte) 10, doubleArray75);
        boolean boolean77 = switchingFunctionsHandler44.reset((double) (-1L), doubleArray75);
        switchingFunctionsHandler16.stepAccepted((double) (byte) 0, doubleArray75);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test11583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11583");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "", (java.lang.Object[]) strArray9, (java.lang.Throwable) convergenceException20);
        java.lang.Object[] objArray31 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray31, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException36);
        java.lang.Object[] objArray39 = derivativeException38.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", objArray39);
        functionEvaluationException23.addSuppressed((java.lang.Throwable) convergenceException41);
        java.lang.Object[] objArray43 = convergenceException41.getArguments();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[10.0]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
    }

    @Test
    public void test11584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11584");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11585");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray19);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("", strArray42);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray42);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) derivativeException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException51);
        java.lang.Throwable[] throwableArray53 = convergenceException51.getSuppressed();
        java.lang.Throwable throwable55 = null;
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", throwable55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) convergenceException56);
        java.lang.Throwable throwable64 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException(throwable64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException65);
        java.lang.Throwable[] throwableArray67 = functionEvaluationException66.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException71);
        java.lang.Object[] objArray73 = functionEvaluationException71.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray67, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray67);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray53, (java.lang.Throwable) integratorException76);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[0.0]");
    }

    @Test
    public void test11586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11586");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray7 = integratorException6.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: ", objArray7, (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = functionEvaluationException9.getSuppressed();
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException(throwable14);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray22);
        integratorException15.addSuppressed((java.lang.Throwable) integratorException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException26);
        double double29 = functionEvaluationException28.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray31 = functionEvaluationException30.getArguments();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
    }

    @Test
    public void test11587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11587");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, 32.0d, 1.0d, (int) (short) -1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray16 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler10.stepAccepted((double) (short) 0, doubleArray16);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray23 = new double[] { (-1.0f), 1.0d };
        boolean boolean24 = switchingFunctionsHandler19.reset((double) (byte) 10, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler19.isEmpty();
        double[] doubleArray33 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler19.stepAccepted((double) (-1L), doubleArray33);
        switchingFunctionsHandler10.stepAccepted((double) (byte) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler10.stop();
        boolean boolean37 = switchingFunctionsHandler10.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator38 = null;
        boolean boolean39 = switchingFunctionsHandler10.evaluateStep(stepInterpolator38);
        boolean boolean40 = switchingFunctionsHandler10.isEmpty();
        boolean boolean41 = switchingFunctionsHandler10.isEmpty();
        double[] doubleArray47 = new double[] { 3, 100L, (byte) -1, 2 };
        boolean boolean48 = switchingFunctionsHandler10.reset(2.0d, doubleArray47);
        boolean boolean49 = switchingFunctionsHandler0.reset((double) 0L, doubleArray47);
        double[] doubleArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            switchingFunctionsHandler0.stepAccepted((double) (short) 100, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[3.0, 100.0, -1.0, 2.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11588");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: hi!");
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException1);
    }

    @Test
    public void test11589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11589");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray23);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray23, (java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException36);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) integratorException38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray32);
    }

    @Test
    public void test11590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11590");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", strArray16);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException40);
        java.lang.Object[] objArray42 = derivativeException40.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "hi!", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 0", (java.lang.Object[]) strArray16);
        double double45 = functionEvaluationException44.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException44);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
    }

    @Test
    public void test11591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11591");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        double double17 = switchingFunctionsHandler0.getEventTime();
        double double18 = switchingFunctionsHandler0.getEventTime();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double double28 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double double32 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray38 = new double[] { (-1.0f), 1.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) (byte) 10, doubleArray38);
        boolean boolean40 = switchingFunctionsHandler34.isEmpty();
        double[] doubleArray48 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler34.stepAccepted((double) (-1L), doubleArray48);
        boolean boolean50 = switchingFunctionsHandler30.reset((double) 100L, doubleArray48);
        switchingFunctionsHandler26.stepAccepted((double) (short) -1, doubleArray48);
        boolean boolean52 = switchingFunctionsHandler21.reset(1.0d, doubleArray48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean55 = switchingFunctionsHandler54.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray61 = new double[] { (-1.0f), 1.0d };
        boolean boolean62 = switchingFunctionsHandler57.reset((double) (byte) 10, doubleArray61);
        double[] doubleArray68 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean69 = switchingFunctionsHandler57.reset((double) (-1), doubleArray68);
        boolean boolean70 = switchingFunctionsHandler54.reset(97.0d, doubleArray68);
        switchingFunctionsHandler21.stepAccepted((double) (byte) 100, doubleArray68);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray68);
        boolean boolean73 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test11592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11592");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray13, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: hi!", strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray13, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ConvergenceException: Convergence failed", (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException49);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10.0]");
        org.junit.Assert.assertNotNull(strArray36);
    }

    @Test
    public void test11593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11593");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException4);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException4);
    }

    @Test
    public void test11594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11594");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray27 = functionEvaluationException26.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException32);
        functionEvaluationException29.addSuppressed((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) functionEvaluationException29);
        java.lang.Object[] objArray36 = functionEvaluationException29.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!", objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        java.lang.Object[] objArray42 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray42);
        java.lang.Throwable[] throwableArray44 = integratorException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("hi!", objArray36, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray9, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("", objArray9);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), (java.lang.Throwable) integratorException48);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[97.0]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test11595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11595");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray28 = functionEvaluationException27.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException27);
        derivativeException23.addSuppressed((java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray13, (java.lang.Throwable) integratorException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.lang.Object[] objArray35 = derivativeException34.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", objArray35);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
    }

    @Test
    public void test11596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11596");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ");
        java.lang.String str2 = convergenceException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: " + "'", str2, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11597");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray10);
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", throwable15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray10);
        java.lang.Object[] objArray24 = derivativeException23.getArguments();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!]");
    }

    @Test
    public void test11598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11598");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray8, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray8);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", objArray8);
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException(throwable18);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray26);
        integratorException19.addSuppressed((java.lang.Throwable) integratorException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray8, (java.lang.Throwable) integratorException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException39);
        java.lang.Throwable[] throwableArray41 = functionEvaluationException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException42);
        java.lang.String str44 = convergenceException42.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException42);
        integratorException30.addSuppressed((java.lang.Throwable) functionEvaluationException45);
        java.lang.Object[] objArray47 = functionEvaluationException45.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("", objArray47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray47);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
    }

    @Test
    public void test11599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11599");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray14);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray32 = functionEvaluationException31.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException31);
        derivativeException27.addSuppressed((java.lang.Throwable) functionEvaluationException31);
        java.lang.Throwable[] throwableArray35 = derivativeException27.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException36);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("", strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray52);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray52);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", strArray52);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray14, (java.lang.Throwable) derivativeException63);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test11600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11600");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException21);
        functionEvaluationException18.addSuppressed((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray9, (java.lang.Throwable) functionEvaluationException25);
        java.lang.Throwable[] throwableArray27 = functionEvaluationException25.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray30 = functionEvaluationException29.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException29);
        java.lang.String str32 = derivativeException31.getPattern();
        java.lang.String str33 = derivativeException31.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException39);
        derivativeException31.addSuppressed((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException40);
        java.lang.Throwable[] throwableArray44 = functionEvaluationException40.getSuppressed();
        java.lang.Throwable[] throwableArray45 = functionEvaluationException40.getSuppressed();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Evaluation failed for argument = 97" + "'", str32, "Evaluation failed for argument = 97");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Evaluation failed for argument = 97" + "'", str33, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test11601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11601");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray21, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray21);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("", strArray45);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray21, (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException58);
        java.lang.Throwable[] throwableArray60 = functionEvaluationException58.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException62);
        java.lang.String str64 = convergenceException63.getPattern();
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException(throwable65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException66);
        convergenceException63.addSuppressed((java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray21, (java.lang.Throwable) convergenceException63);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray80);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray80);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray80);
        org.apache.commons.math.ode.DerivativeException derivativeException85 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray80);
        org.apache.commons.math.ode.DerivativeException derivativeException86 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray80, (java.lang.Throwable) functionEvaluationException88);
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Throwable) convergenceException89);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray21, (java.lang.Throwable) convergenceException90);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray21);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str64, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test11602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11602");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray15 = integratorException14.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: ", objArray15, (java.lang.Throwable) functionEvaluationException17);
        java.lang.Throwable[] throwableArray19 = functionEvaluationException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException21);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException46);
        java.lang.Object[] objArray48 = convergenceException47.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException56);
        functionEvaluationException53.addSuppressed((java.lang.Throwable) convergenceException57);
        java.lang.Object[] objArray60 = new java.lang.Object[] { (byte) 1, functionEvaluationException53, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "", objArray48, (java.lang.Throwable) functionEvaluationException61);
        double double63 = functionEvaluationException62.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException62);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test11603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11603");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray9);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", throwable14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test11604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11604");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("", strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray38);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray15, (java.lang.Throwable) convergenceException48);
        java.lang.Throwable[] throwableArray51 = convergenceException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException52);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test11605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11605");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { (-1.0f), 1.0d };
        boolean boolean12 = switchingFunctionsHandler7.reset((double) (byte) 10, doubleArray11);
        double[] doubleArray18 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean19 = switchingFunctionsHandler7.reset((double) (-1), doubleArray18);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        double double22 = switchingFunctionsHandler0.getEventTime();
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction24 = null;
        switchingFunctionsHandler0.add(switchingFunction24, (double) (short) 10, (double) 10.0f, (int) '#');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { (-1.0f), 1.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) (byte) 10, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray44 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler30.stepAccepted((double) (-1L), doubleArray44);
        boolean boolean46 = switchingFunctionsHandler30.stop();
        double double47 = switchingFunctionsHandler30.getEventTime();
        boolean boolean48 = switchingFunctionsHandler30.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double51 = switchingFunctionsHandler50.getEventTime();
        boolean boolean52 = switchingFunctionsHandler50.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { (-1.0f), 1.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) (byte) 10, doubleArray58);
        double[] doubleArray65 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean66 = switchingFunctionsHandler54.reset((double) (-1), doubleArray65);
        switchingFunctionsHandler50.stepAccepted((double) (short) 10, doubleArray65);
        boolean boolean68 = switchingFunctionsHandler30.reset((double) '4', doubleArray65);
        boolean boolean69 = switchingFunctionsHandler0.reset((double) (short) 10, doubleArray65);
        boolean boolean70 = switchingFunctionsHandler0.stop();
        double double71 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = switchingFunctionsHandler0.evaluateStep(stepInterpolator72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test11606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11606");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        java.lang.Throwable[] throwableArray9 = functionEvaluationException8.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException17);
        java.lang.Throwable[] throwableArray19 = functionEvaluationException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) functionEvaluationException24);
        java.lang.Throwable[] throwableArray29 = functionEvaluationException24.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test11607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11607");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray14);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException(throwable25);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray33);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray33);
        integratorException26.addSuppressed((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray39 = integratorException26.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray14, (java.lang.Throwable) integratorException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) integratorException26);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray55);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException(1.0d);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray55, (java.lang.Throwable) functionEvaluationException62);
        java.lang.Object[] objArray74 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray74, (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray74);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "hi!", objArray74);
        double double83 = functionEvaluationException82.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray55, (java.lang.Throwable) functionEvaluationException82);
        java.lang.String str86 = functionEvaluationException85.getPattern();
        integratorException26.addSuppressed((java.lang.Throwable) functionEvaluationException85);
        java.lang.Class<?> wildcardClass88 = integratorException26.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[10.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!" + "'", str86, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test11608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11608");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray14 = integratorException12.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) integratorException12);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException12);
        java.lang.Object[] objArray17 = integratorException12.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(1.0d, (java.lang.Throwable) integratorException12);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test11609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11609");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test11610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11610");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ");
        java.lang.Object[] objArray5 = convergenceException4.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: ", objArray5);
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray14, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "hi!", objArray14);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "", objArray5, (java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException22);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10.0]");
    }

    @Test
    public void test11611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11611");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        double double17 = switchingFunctionsHandler0.getEventTime();
        double double18 = switchingFunctionsHandler0.getEventTime();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        boolean boolean20 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
        double double23 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test11612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11612");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException(throwable2);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.Throwable[] throwableArray6 = integratorException5.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException5);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test11613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11613");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double double7 = switchingFunctionsHandler5.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double double11 = switchingFunctionsHandler9.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { (-1.0f), 1.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray17);
        boolean boolean19 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray27 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler13.stepAccepted((double) (-1L), doubleArray27);
        boolean boolean29 = switchingFunctionsHandler9.reset((double) 100L, doubleArray27);
        switchingFunctionsHandler5.stepAccepted((double) (short) -1, doubleArray27);
        boolean boolean31 = switchingFunctionsHandler0.reset(1.0d, doubleArray27);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator32 = null;
        boolean boolean33 = switchingFunctionsHandler0.evaluateStep(stepInterpolator32);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray39 = new double[] { (-1.0f), 1.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) (byte) 10, doubleArray39);
        double[] doubleArray46 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean47 = switchingFunctionsHandler35.reset((double) (-1), doubleArray46);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler35.evaluateStep(stepInterpolator48);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray55 = new double[] { (-1.0f), 1.0d };
        boolean boolean56 = switchingFunctionsHandler51.reset((double) (byte) 10, doubleArray55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler51.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        boolean boolean60 = switchingFunctionsHandler51.evaluateStep(stepInterpolator59);
        double double61 = switchingFunctionsHandler51.getEventTime();
        boolean boolean62 = switchingFunctionsHandler51.isEmpty();
        boolean boolean63 = switchingFunctionsHandler51.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler67 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray71 = new double[] { (-1.0f), 1.0d };
        boolean boolean72 = switchingFunctionsHandler67.reset((double) (byte) 10, doubleArray71);
        double[] doubleArray78 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean79 = switchingFunctionsHandler67.reset((double) (-1), doubleArray78);
        boolean boolean80 = switchingFunctionsHandler65.reset((double) 1L, doubleArray78);
        boolean boolean81 = switchingFunctionsHandler51.reset((-1.0d), doubleArray78);
        switchingFunctionsHandler35.stepAccepted((double) (short) 10, doubleArray78);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray78);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        switchingFunctionsHandler0.add(switchingFunction84, (double) ' ', (double) (byte) -1, (int) (short) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = switchingFunctionsHandler0.evaluateStep(stepInterpolator89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test11614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11614");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.String str7 = functionEvaluationException6.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray9 = integratorException8.getArguments();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!" + "'", str7, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test11615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11615");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) functionEvaluationException20);
        java.lang.Throwable[] throwableArray22 = functionEvaluationException20.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray22);
        java.lang.Object[] objArray24 = functionEvaluationException23.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", objArray24);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test11616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11616");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray19);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray39, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        java.lang.Class<?> wildcardClass51 = strArray19.getClass();
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10.0]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test11617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11617");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) derivativeException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(32.0d, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) derivativeException14);
        functionEvaluationException7.addSuppressed((java.lang.Throwable) convergenceException15);
        java.lang.Class<?> wildcardClass17 = functionEvaluationException7.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test11618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11618");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Throwable) functionEvaluationException23);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test11619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11619");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException24);
        functionEvaluationException21.addSuppressed((java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException25);
        java.lang.String str28 = convergenceException27.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        java.lang.String str40 = functionEvaluationException39.getPattern();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str40, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11620");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray22);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray22, (java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException32);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray8, (java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", strArray8);
        java.lang.Object[] objArray40 = derivativeException39.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!]");
    }

    @Test
    public void test11621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11621");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray8 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException13);
        functionEvaluationException10.addSuppressed((java.lang.Throwable) convergenceException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) functionEvaluationException10);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray17);
        java.lang.Class<?> wildcardClass21 = functionEvaluationException20.getClass();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11622");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray6 = functionEvaluationException4.getArguments();
        java.lang.String str7 = functionEvaluationException4.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException4);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("", strArray20);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray28 = functionEvaluationException26.getArguments();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray44);
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException(throwable56);
        java.lang.Object[] objArray58 = derivativeException57.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray58);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray66);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("", objArray58, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray44, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray28, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException73);
        functionEvaluationException4.addSuppressed((java.lang.Throwable) convergenceException74);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[0.0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Evaluation failed for argument = {0}" + "'", str7, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(strArray66);
    }

    @Test
    public void test11623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11623");
        java.lang.Object[] objArray12 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray12, (java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", objArray12);
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ConvergenceException: ", objArray12, throwable21);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray34);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("", strArray34);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException42);
        java.lang.Throwable[] throwableArray44 = functionEvaluationException42.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray34, (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray34);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", strArray34);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray12, (java.lang.Throwable) derivativeException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', (java.lang.Throwable) convergenceException49);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[10.0]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test11624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11624");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException2);
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray11 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        functionEvaluationException13.addSuppressed((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException13);
        java.lang.Throwable[] throwableArray20 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException21);
        integratorException5.addSuppressed((java.lang.Throwable) convergenceException22);
        java.lang.Object[] objArray24 = integratorException5.getArguments();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test11625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11625");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 2", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test11626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11626");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray8, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray8, (java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("", objArray8);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0]");
    }

    @Test
    public void test11627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11627");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", throwable1);
    }

    @Test
    public void test11628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11628");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray26);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray26, (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException36);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray12, (java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test11629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11629");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray8, throwable11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test11630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11630");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException(throwable3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException4);
        java.lang.Throwable[] throwableArray6 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) functionEvaluationException5);
        double double8 = functionEvaluationException7.getArgument();
        java.lang.String str9 = functionEvaluationException7.getPattern();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test11631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11631");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { (-1.0f), 1.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray9);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator11 = null;
        boolean boolean12 = switchingFunctionsHandler5.evaluateStep(stepInterpolator11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler5.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler5.add(switchingFunction15, (double) (short) 100, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double22 = switchingFunctionsHandler21.getEventTime();
        double double23 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray29 = new double[] { (-1.0f), 1.0d };
        boolean boolean30 = switchingFunctionsHandler25.reset((double) (byte) 10, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler25.isEmpty();
        double[] doubleArray39 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler25.stepAccepted((double) (-1L), doubleArray39);
        boolean boolean41 = switchingFunctionsHandler21.reset((double) 100L, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double double45 = switchingFunctionsHandler43.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray51 = new double[] { (-1.0f), 1.0d };
        boolean boolean52 = switchingFunctionsHandler47.reset((double) (byte) 10, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler47.isEmpty();
        double[] doubleArray61 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler47.stepAccepted((double) (-1L), doubleArray61);
        boolean boolean63 = switchingFunctionsHandler43.reset((double) 100L, doubleArray61);
        boolean boolean64 = switchingFunctionsHandler21.reset((double) 100.0f, doubleArray61);
        boolean boolean65 = switchingFunctionsHandler5.reset((double) (byte) 100, doubleArray61);
        switchingFunctionsHandler0.stepAccepted((double) 100.0f, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray74 = new double[] { (-1.0f), 1.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) (byte) 10, doubleArray74);
        double[] doubleArray81 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean82 = switchingFunctionsHandler70.reset((double) (-1), doubleArray81);
        boolean boolean83 = switchingFunctionsHandler68.reset((double) 1L, doubleArray81);
        boolean boolean84 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray81);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator85 = null;
        boolean boolean86 = switchingFunctionsHandler0.evaluateStep(stepInterpolator85);
        boolean boolean87 = switchingFunctionsHandler0.isEmpty();
        double double88 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test11632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11632");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        double[] doubleArray14 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean15 = switchingFunctionsHandler3.reset((double) (-1), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset(97.0d, doubleArray14);
        double double17 = switchingFunctionsHandler0.getEventTime();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler20.stepAccepted((double) (short) 0, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { (-1.0f), 1.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) (byte) 10, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler29.isEmpty();
        double[] doubleArray43 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler29.stepAccepted((double) (-1L), doubleArray43);
        switchingFunctionsHandler20.stepAccepted((double) (byte) 10, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler20.stop();
        boolean boolean47 = switchingFunctionsHandler20.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray53 = new double[] { (-1.0f), 1.0d };
        boolean boolean54 = switchingFunctionsHandler49.reset((double) (byte) 10, doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler56 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray60 = new double[] { (-1.0f), 1.0d };
        boolean boolean61 = switchingFunctionsHandler56.reset((double) (byte) 10, doubleArray60);
        double[] doubleArray67 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean68 = switchingFunctionsHandler56.reset((double) (-1), doubleArray67);
        switchingFunctionsHandler49.stepAccepted((double) (byte) -1, doubleArray67);
        boolean boolean70 = switchingFunctionsHandler20.reset((double) (-1L), doubleArray67);
        switchingFunctionsHandler0.stepAccepted(1.0d, doubleArray67);
        boolean boolean72 = switchingFunctionsHandler0.stop();
        boolean boolean73 = switchingFunctionsHandler0.stop();
        boolean boolean74 = switchingFunctionsHandler0.isEmpty();
        double double75 = switchingFunctionsHandler0.getEventTime();
        boolean boolean76 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator77 = null;
        boolean boolean78 = switchingFunctionsHandler0.evaluateStep(stepInterpolator77);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction79 = null;
        switchingFunctionsHandler0.add(switchingFunction79, (double) (byte) -1, 35.0d, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test11633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11633");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: ");
        double double4 = functionEvaluationException3.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException3);
        java.lang.Class<?> wildcardClass6 = functionEvaluationException3.getClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0d) + "'", double4 == (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test11634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11634");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, 1.0d, 10.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { (-1.0f), 1.0d };
        boolean boolean27 = switchingFunctionsHandler22.reset((double) (byte) 10, doubleArray26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler22.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler22.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction32 = null;
        switchingFunctionsHandler22.add(switchingFunction32, (double) (short) 100, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double double40 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray46 = new double[] { (-1.0f), 1.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) (byte) 10, doubleArray46);
        boolean boolean48 = switchingFunctionsHandler42.isEmpty();
        double[] doubleArray56 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler42.stepAccepted((double) (-1L), doubleArray56);
        boolean boolean58 = switchingFunctionsHandler38.reset((double) 100L, doubleArray56);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double61 = switchingFunctionsHandler60.getEventTime();
        double double62 = switchingFunctionsHandler60.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray68 = new double[] { (-1.0f), 1.0d };
        boolean boolean69 = switchingFunctionsHandler64.reset((double) (byte) 10, doubleArray68);
        boolean boolean70 = switchingFunctionsHandler64.isEmpty();
        double[] doubleArray78 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler64.stepAccepted((double) (-1L), doubleArray78);
        boolean boolean80 = switchingFunctionsHandler60.reset((double) 100L, doubleArray78);
        boolean boolean81 = switchingFunctionsHandler38.reset((double) 100.0f, doubleArray78);
        boolean boolean82 = switchingFunctionsHandler22.reset((double) (byte) 100, doubleArray78);
        boolean boolean83 = switchingFunctionsHandler0.reset(1.0d, doubleArray78);
        double double84 = switchingFunctionsHandler0.getEventTime();
        boolean boolean85 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test11635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11635");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException(throwable6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) derivativeException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException7);
        java.lang.Throwable[] throwableArray11 = derivativeException7.getSuppressed();
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException", (java.lang.Object[]) throwableArray11, throwable12);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11636");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException15);
        java.lang.String str17 = functionEvaluationException16.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray7, (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray7);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Throwable) derivativeException20);
        java.lang.Object[] objArray22 = derivativeException20.getArguments();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
    }

    @Test
    public void test11637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11637");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { (-1.0f), 1.0d };
        boolean boolean14 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler9.isEmpty();
        double[] doubleArray23 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler9.stepAccepted((double) (-1L), doubleArray23);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray29 = null;
        boolean boolean30 = switchingFunctionsHandler0.reset((double) (short) -1, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler0.stop();
        boolean boolean32 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test11638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11638");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException19);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test11639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11639");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, (java.lang.Throwable) convergenceException9);
        java.lang.Object[] objArray11 = convergenceException9.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", objArray11);
        java.lang.Throwable throwable15 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException(throwable15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(100.0d, throwable15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", objArray11, (java.lang.Throwable) integratorException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray11);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test11640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11640");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray15 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException14);
        java.lang.String str17 = derivativeException16.getPattern();
        java.lang.String str18 = derivativeException16.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException24);
        derivativeException16.addSuppressed((java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException16);
        java.lang.Object[] objArray28 = convergenceException27.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "", objArray28, (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException35);
        java.lang.Object[] objArray37 = functionEvaluationException35.getArguments();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Evaluation failed for argument = 97" + "'", str17, "Evaluation failed for argument = 97");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Evaluation failed for argument = 97" + "'", str18, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!]");
    }

    @Test
    public void test11641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11641");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray11 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        functionEvaluationException13.addSuppressed((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException13);
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException(throwable20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray11, throwable20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: ");
        double double29 = functionEvaluationException28.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException28);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("", strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) derivativeException53);
        java.lang.Throwable throwable59 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException(throwable59);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray63);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException64);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException64);
        derivativeException60.addSuppressed((java.lang.Throwable) integratorException66);
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException66);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException68);
        java.lang.Object[] objArray70 = integratorException68.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: ", objArray70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray70);
        derivativeException53.addSuppressed((java.lang.Throwable) integratorException72);
        java.lang.String str74 = integratorException72.toString();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97" + "'", str74, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11642");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 100L, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test11643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11643");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray27 = functionEvaluationException26.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException26);
        derivativeException22.addSuppressed((java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray12, (java.lang.Throwable) integratorException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray41 = functionEvaluationException40.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException46);
        functionEvaluationException43.addSuppressed((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Object[] objArray50 = functionEvaluationException43.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.DerivativeException", objArray50);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException", objArray50);
        derivativeException32.addSuppressed((java.lang.Throwable) convergenceException53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray62);
        convergenceException53.addSuppressed((java.lang.Throwable) derivativeException67);
        java.lang.Throwable[] throwableArray69 = convergenceException53.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) throwableArray69, (java.lang.Throwable) convergenceException73);
        java.lang.Class<?> wildcardClass75 = convergenceException74.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[97.0]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test11644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11644");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException16);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test11645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11645");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException8);
        java.lang.Throwable[] throwableArray10 = integratorException9.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray10);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test11646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11646");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray4 = functionEvaluationException3.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        functionEvaluationException7.addSuppressed((java.lang.Throwable) convergenceException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) functionEvaluationException13);
        double double15 = functionEvaluationException13.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray25 = functionEvaluationException24.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException30);
        functionEvaluationException27.addSuppressed((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray34 = functionEvaluationException27.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("", objArray34);
        java.lang.Throwable[] throwableArray39 = integratorException38.getSuppressed();
        functionEvaluationException13.addSuppressed((java.lang.Throwable) integratorException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException", (java.lang.Throwable) functionEvaluationException13);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException41);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test11647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11647");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!");
        double double3 = functionEvaluationException2.getArgument();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }

    @Test
    public void test11648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11648");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { (-1.0f), 1.0d };
        boolean boolean12 = switchingFunctionsHandler7.reset((double) (byte) 10, doubleArray11);
        double[] doubleArray18 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean19 = switchingFunctionsHandler7.reset((double) (-1), doubleArray18);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) (-1), (double) (short) 1, (int) (byte) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, (double) 10.0f, (double) (-1.0f), 0);
        double double31 = switchingFunctionsHandler0.getEventTime();
        boolean boolean32 = switchingFunctionsHandler0.stop();
        boolean boolean33 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test11649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11649");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = hi!", (java.lang.Throwable) convergenceException21);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test11650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11650");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException1);
        java.lang.Throwable[] throwableArray3 = convergenceException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test11651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11651");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException13);
        functionEvaluationException10.addSuppressed((java.lang.Throwable) convergenceException14);
        java.lang.Object[] objArray17 = new java.lang.Object[] { (byte) 1, functionEvaluationException10, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray17);
        java.lang.Throwable[] throwableArray19 = functionEvaluationException18.getSuppressed();
        java.lang.Throwable throwable22 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException(throwable22);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        derivativeException23.addSuppressed((java.lang.Throwable) integratorException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException31);
        java.lang.Object[] objArray33 = integratorException31.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", objArray33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("Convergence failed", (java.lang.Throwable) functionEvaluationException45);
        java.lang.String str47 = convergenceException46.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, (java.lang.Throwable) convergenceException46);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Convergence failed" + "'", str47, "Convergence failed");
    }

    @Test
    public void test11652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11652");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("", strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray36);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray13, (java.lang.Throwable) convergenceException46);
        java.lang.Throwable[] throwableArray49 = convergenceException46.getSuppressed();
        java.lang.Object[] objArray50 = convergenceException46.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray50);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
    }

    @Test
    public void test11653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11653");
        java.lang.Object[] objArray6 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) functionEvaluationException10);
        java.lang.String str12 = functionEvaluationException11.getPattern();
        double double13 = functionEvaluationException11.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException11);
        double double15 = functionEvaluationException11.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException11);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException11.getSuppressed();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: " + "'", str12, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test11654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11654");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray22 = new double[] { (-1.0f), 1.0d };
        boolean boolean23 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler18.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler18.evaluateStep(stepInterpolator26);
        double double28 = switchingFunctionsHandler18.getEventTime();
        boolean boolean29 = switchingFunctionsHandler18.isEmpty();
        boolean boolean30 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray38 = new double[] { (-1.0f), 1.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) (byte) 10, doubleArray38);
        double[] doubleArray45 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean46 = switchingFunctionsHandler34.reset((double) (-1), doubleArray45);
        boolean boolean47 = switchingFunctionsHandler32.reset((double) 1L, doubleArray45);
        boolean boolean48 = switchingFunctionsHandler18.reset((-1.0d), doubleArray45);
        boolean boolean49 = switchingFunctionsHandler0.reset((double) 1, doubleArray45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler51 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray57 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler51.stepAccepted((double) (short) 0, doubleArray57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray64 = new double[] { (-1.0f), 1.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) (byte) 10, doubleArray64);
        boolean boolean66 = switchingFunctionsHandler60.isEmpty();
        double[] doubleArray74 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler60.stepAccepted((double) (-1L), doubleArray74);
        switchingFunctionsHandler51.stepAccepted((double) (byte) 10, doubleArray74);
        boolean boolean77 = switchingFunctionsHandler0.reset(32.0d, doubleArray74);
        boolean boolean78 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator79 = null;
        boolean boolean80 = switchingFunctionsHandler0.evaluateStep(stepInterpolator79);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction81 = null;
        switchingFunctionsHandler0.add(switchingFunction81, (double) (byte) 10, (double) (byte) 1, (-1));
        boolean boolean86 = switchingFunctionsHandler0.stop();
        boolean boolean87 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test11655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11655");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray11 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        functionEvaluationException13.addSuppressed((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray20 = functionEvaluationException13.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", objArray20);
        java.lang.Throwable throwable24 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException(throwable24);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException29);
        derivativeException25.addSuppressed((java.lang.Throwable) integratorException31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray35 = convergenceException34.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray20, (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) derivativeException36);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[97.0]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
    }

    @Test
    public void test11656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11656");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray7 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        functionEvaluationException9.addSuppressed((java.lang.Throwable) convergenceException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) functionEvaluationException9);
        java.lang.Object[] objArray16 = functionEvaluationException9.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(52.0d, (java.lang.Throwable) convergenceException17);
        java.lang.Object[] objArray19 = convergenceException17.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException17);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[97.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[97.0]");
    }

    @Test
    public void test11657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11657");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        double double17 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler0.evaluateStep(stepInterpolator20);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test11658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11658");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray12 = functionEvaluationException11.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException17);
        functionEvaluationException14.addSuppressed((java.lang.Throwable) convergenceException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) functionEvaluationException14);
        java.lang.Object[] objArray21 = functionEvaluationException14.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", objArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray21);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException", objArray21);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException40);
        functionEvaluationException37.addSuppressed((java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException41);
        java.lang.String str44 = convergenceException43.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray32, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.FunctionEvaluationException", objArray21, (java.lang.Throwable) convergenceException45);
        java.lang.String str47 = convergenceException45.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[97.0]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = hi!" + "'", str47, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = hi!");
    }

    @Test
    public void test11659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11659");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray10);
        java.lang.String str15 = functionEvaluationException14.getPattern();
        java.lang.Throwable[] throwableArray16 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException14);
        java.lang.Throwable[] throwableArray18 = convergenceException17.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        functionEvaluationException22.addSuppressed((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException32);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Evaluation failed for argument = 97" + "'", str15, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test11660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11660");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException17);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test11661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11661");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("", strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray27);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray27, (java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray13);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray56);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray56);
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray67);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException75);
        java.lang.String str77 = functionEvaluationException76.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray67, (java.lang.Throwable) functionEvaluationException76);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray67);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray56, (java.lang.Throwable) integratorException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException80);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray13, (java.lang.Throwable) convergenceException80);
        java.lang.Throwable[] throwableArray83 = convergenceException82.getSuppressed();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str77, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test11662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11662");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray7, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray7, (java.lang.Throwable) functionEvaluationException16);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException37);
        java.lang.String str39 = functionEvaluationException38.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray29, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "", objArray7, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException43);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10.0]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str39, "org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11663");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray20 = functionEvaluationException19.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        functionEvaluationException22.addSuppressed((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) functionEvaluationException22);
        java.lang.Object[] objArray29 = functionEvaluationException22.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray29);
        java.lang.Object[] objArray32 = functionEvaluationException31.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(35.0d, (java.lang.Throwable) convergenceException33);
        functionEvaluationException7.addSuppressed((java.lang.Throwable) convergenceException33);
        java.lang.String str37 = convergenceException33.getPattern();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[97.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[97.0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test11664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11664");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray20 = new double[] { (-1.0f), 1.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) (byte) 10, doubleArray20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler16.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler16.evaluateStep(stepInterpolator24);
        double double26 = switchingFunctionsHandler16.getEventTime();
        boolean boolean27 = switchingFunctionsHandler16.isEmpty();
        boolean boolean28 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray36 = new double[] { (-1.0f), 1.0d };
        boolean boolean37 = switchingFunctionsHandler32.reset((double) (byte) 10, doubleArray36);
        double[] doubleArray43 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean44 = switchingFunctionsHandler32.reset((double) (-1), doubleArray43);
        boolean boolean45 = switchingFunctionsHandler30.reset((double) 1L, doubleArray43);
        boolean boolean46 = switchingFunctionsHandler16.reset((-1.0d), doubleArray43);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray43);
        double double48 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, (double) (byte) 0, (double) (short) 1, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction54 = null;
        switchingFunctionsHandler0.add(switchingFunction54, (double) 'a', 35.0d, 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = switchingFunctionsHandler0.evaluateStep(stepInterpolator59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test11665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11665");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray12);
        java.lang.Object[] objArray20 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray20);
        java.lang.Object[] objArray22 = integratorException21.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray12, (java.lang.Throwable) integratorException21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException26);
        java.lang.Throwable[] throwableArray29 = convergenceException26.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException26);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test11666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11666");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        derivativeException15.addSuppressed((java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) derivativeException15);
        double double21 = functionEvaluationException20.getArgument();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    }

    @Test
    public void test11667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11667");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 10L, (double) '#', 0);
        boolean boolean9 = switchingFunctionsHandler0.stop();
        double double10 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test11668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11668");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) integratorException12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) convergenceException15);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test11669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11669");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (byte) -1, (double) (short) -1, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { (-1.0f), 1.0d };
        boolean boolean12 = switchingFunctionsHandler7.reset((double) (byte) 10, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler7.isEmpty();
        boolean boolean14 = switchingFunctionsHandler7.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray20 = new double[] { (-1.0f), 1.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) (byte) 10, doubleArray20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler16.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler16.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler27.stepAccepted((double) (short) 0, doubleArray33);
        switchingFunctionsHandler16.stepAccepted((double) (-1.0f), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double double39 = switchingFunctionsHandler37.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray45 = new double[] { (-1.0f), 1.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler41.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray54 = new double[] { (-1.0f), 1.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) (byte) 10, doubleArray54);
        double[] doubleArray61 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean62 = switchingFunctionsHandler50.reset((double) (-1), doubleArray61);
        switchingFunctionsHandler41.stepAccepted(0.0d, doubleArray61);
        switchingFunctionsHandler37.stepAccepted((double) (-1L), doubleArray61);
        boolean boolean65 = switchingFunctionsHandler16.reset((double) 2, doubleArray61);
        boolean boolean66 = switchingFunctionsHandler7.reset(32.0d, doubleArray61);
        boolean boolean67 = switchingFunctionsHandler0.reset((double) 3, doubleArray61);
        boolean boolean68 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, (double) 0, (double) 100.0f, (int) (short) 1);
        boolean boolean74 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test11670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11670");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction17 = null;
        switchingFunctionsHandler0.add(switchingFunction17, (double) (short) 100, (double) (short) 1, (int) (byte) 0);
        double double22 = switchingFunctionsHandler0.getEventTime();
        double double23 = switchingFunctionsHandler0.getEventTime();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        double double25 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction26 = null;
        switchingFunctionsHandler0.add(switchingFunction26, 32.0d, (double) (byte) 1, 2);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
    }

    @Test
    public void test11671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11671");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray19);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException43);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException43);
        double double47 = functionEvaluationException43.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray19);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray57, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException69);
        functionEvaluationException66.addSuppressed((java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException72);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray57, (java.lang.Throwable) functionEvaluationException73);
        java.lang.Throwable[] throwableArray75 = functionEvaluationException73.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray75, (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException81);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException89);
        java.lang.Object[] objArray91 = convergenceException90.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.DerivativeException: hi!", objArray91);
        integratorException84.addSuppressed((java.lang.Throwable) functionEvaluationException92);
        double double94 = functionEvaluationException92.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException95 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException92);
        functionEvaluationException49.addSuppressed((java.lang.Throwable) functionEvaluationException92);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2.0d + "'", double47 == 2.0d);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 100.0d + "'", double94 == 100.0d);
    }

    @Test
    public void test11672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11672");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException(throwable4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        integratorException5.addSuppressed((java.lang.Throwable) integratorException16);
        java.lang.Throwable[] throwableArray18 = integratorException5.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException21);
        java.lang.Object[] objArray23 = convergenceException22.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) convergenceException24);
        java.lang.Throwable[] throwableArray26 = convergenceException24.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException24);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray50);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray39, (java.lang.Throwable) derivativeException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException59);
        java.lang.Object[] objArray61 = integratorException60.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = 97", objArray61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", objArray61);
        derivativeException54.addSuppressed((java.lang.Throwable) convergenceException63);
        java.lang.Object[] objArray65 = convergenceException63.getArguments();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray75);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException79 = new org.apache.commons.math.ode.DerivativeException("", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray75);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray75);
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) integratorException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray65, (java.lang.Throwable) integratorException82);
        convergenceException24.addSuppressed((java.lang.Throwable) integratorException82);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test11673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11673");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray8);
        java.lang.String str13 = functionEvaluationException12.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(3.0d, (java.lang.Throwable) functionEvaluationException12);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Evaluation failed for argument = 97" + "'", str13, "Evaluation failed for argument = 97");
    }

    @Test
    public void test11674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11674");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = hi!", throwable1);
    }

    @Test
    public void test11675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11675");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        double[] doubleArray14 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean15 = switchingFunctionsHandler3.reset((double) (-1), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset(97.0d, doubleArray14);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler0.evaluateStep(stepInterpolator21);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test11676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11676");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 100L, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        boolean boolean22 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, 0.0d, (double) (short) 10, 0);
        double double28 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test11677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11677");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException10);
        java.lang.String str12 = functionEvaluationException10.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, (java.lang.Throwable) functionEvaluationException10);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Evaluation failed for argument = {0}" + "'", str12, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test11678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11678");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        double double9 = switchingFunctionsHandler0.getEventTime();
        double double10 = switchingFunctionsHandler0.getEventTime();
        double double11 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray21 = new double[] { (-1.0f), 1.0d };
        boolean boolean22 = switchingFunctionsHandler17.reset((double) (byte) 10, doubleArray21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler17.evaluateStep(stepInterpolator23);
        boolean boolean25 = switchingFunctionsHandler17.stop();
        double double26 = switchingFunctionsHandler17.getEventTime();
        double double27 = switchingFunctionsHandler17.getEventTime();
        double double28 = switchingFunctionsHandler17.getEventTime();
        boolean boolean29 = switchingFunctionsHandler17.isEmpty();
        boolean boolean30 = switchingFunctionsHandler17.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction33 = null;
        switchingFunctionsHandler32.add(switchingFunction33, (double) (byte) -1, (double) (short) -1, (int) (short) 0);
        boolean boolean38 = switchingFunctionsHandler32.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction39 = null;
        switchingFunctionsHandler32.add(switchingFunction39, 32.0d, (double) 1L, (int) (short) 1);
        boolean boolean44 = switchingFunctionsHandler32.stop();
        double double45 = switchingFunctionsHandler32.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray51 = new double[] { (-1.0f), 1.0d };
        boolean boolean52 = switchingFunctionsHandler47.reset((double) (byte) 10, doubleArray51);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator53 = null;
        boolean boolean54 = switchingFunctionsHandler47.evaluateStep(stepInterpolator53);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler47.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler58 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray64 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler58.stepAccepted((double) (short) 0, doubleArray64);
        switchingFunctionsHandler47.stepAccepted((double) (-1.0f), doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double double70 = switchingFunctionsHandler68.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray76 = new double[] { (-1.0f), 1.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) (byte) 10, doubleArray76);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        boolean boolean79 = switchingFunctionsHandler72.evaluateStep(stepInterpolator78);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray85 = new double[] { (-1.0f), 1.0d };
        boolean boolean86 = switchingFunctionsHandler81.reset((double) (byte) 10, doubleArray85);
        double[] doubleArray92 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean93 = switchingFunctionsHandler81.reset((double) (-1), doubleArray92);
        switchingFunctionsHandler72.stepAccepted(0.0d, doubleArray92);
        switchingFunctionsHandler68.stepAccepted((double) (-1L), doubleArray92);
        boolean boolean96 = switchingFunctionsHandler47.reset((double) 2, doubleArray92);
        boolean boolean97 = switchingFunctionsHandler32.reset((double) 1.0f, doubleArray92);
        switchingFunctionsHandler17.stepAccepted((double) 100.0f, doubleArray92);
        switchingFunctionsHandler0.stepAccepted(2.0d, doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test11679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11679");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException8);
        functionEvaluationException5.addSuppressed((java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray13 = functionEvaluationException12.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test11680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11680");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException15);
        java.lang.String str17 = functionEvaluationException16.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray7, (java.lang.Throwable) functionEvaluationException16);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException37);
        java.lang.Throwable[] throwableArray39 = functionEvaluationException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray29, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray29, (java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray7, (java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ode.IntegratorException integratorException47 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", strArray7);
        java.lang.Throwable[] throwableArray49 = derivativeException48.getSuppressed();
        java.lang.String str50 = derivativeException48.getPattern();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1" + "'", str50, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1");
    }

    @Test
    public void test11681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11681");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, (double) 'a', 100.0d, 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { (-1.0f), 1.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray17);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler13.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler13.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray30 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler24.stepAccepted((double) (short) 0, doubleArray30);
        switchingFunctionsHandler13.stepAccepted((double) (-1.0f), doubleArray30);
        boolean boolean33 = switchingFunctionsHandler0.reset((double) (short) -1, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray39 = new double[] { (-1.0f), 1.0d };
        boolean boolean40 = switchingFunctionsHandler35.reset((double) (byte) 10, doubleArray39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray46 = new double[] { (-1.0f), 1.0d };
        boolean boolean47 = switchingFunctionsHandler42.reset((double) (byte) 10, doubleArray46);
        double[] doubleArray53 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean54 = switchingFunctionsHandler42.reset((double) (-1), doubleArray53);
        switchingFunctionsHandler35.stepAccepted((double) (byte) -1, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler0.reset((double) (-1), doubleArray53);
        boolean boolean57 = switchingFunctionsHandler0.stop();
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        boolean boolean59 = switchingFunctionsHandler0.isEmpty();
        boolean boolean60 = switchingFunctionsHandler0.stop();
        boolean boolean61 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = switchingFunctionsHandler0.evaluateStep(stepInterpolator62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test11682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11682");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray11 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        functionEvaluationException13.addSuppressed((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11, (java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray20 = functionEvaluationException13.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray20);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Throwable) integratorException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[97.0]");
    }

    @Test
    public void test11683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11683");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        java.lang.String str6 = derivativeException5.getPattern();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray23);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException(1.0d);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray23, (java.lang.Throwable) functionEvaluationException30);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray42 = functionEvaluationException41.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException41);
        derivativeException37.addSuppressed((java.lang.Throwable) functionEvaluationException41);
        java.lang.Object[] objArray45 = functionEvaluationException41.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException48);
        java.lang.Throwable[] throwableArray50 = functionEvaluationException48.getSuppressed();
        java.lang.Throwable[] throwableArray51 = functionEvaluationException48.getSuppressed();
        java.lang.Throwable[] throwableArray52 = functionEvaluationException48.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray45, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray23, (java.lang.Throwable) functionEvaluationException48);
        java.lang.Throwable throwable57 = null;
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", throwable57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray23, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "", (java.lang.Throwable) functionEvaluationException59);
        java.lang.Throwable[] throwableArray61 = functionEvaluationException59.getSuppressed();
        derivativeException5.addSuppressed((java.lang.Throwable) functionEvaluationException59);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray70);
        java.lang.String str75 = functionEvaluationException74.getPattern();
        java.lang.Throwable[] throwableArray76 = functionEvaluationException74.getSuppressed();
        double double77 = functionEvaluationException74.getArgument();
        java.lang.String str78 = functionEvaluationException74.getPattern();
        java.lang.Throwable[] throwableArray79 = functionEvaluationException74.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException74);
        functionEvaluationException59.addSuppressed((java.lang.Throwable) convergenceException80);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Evaluation failed for argument = 97" + "'", str75, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Evaluation failed for argument = 97" + "'", str78, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray79);
    }

    @Test
    public void test11684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11684");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException12);
        java.lang.Object[] objArray14 = convergenceException13.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray26 = functionEvaluationException25.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException31);
        functionEvaluationException28.addSuppressed((java.lang.Throwable) convergenceException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException34);
        java.lang.Throwable[] throwableArray36 = functionEvaluationException34.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray36);
        java.lang.Throwable[] throwableArray41 = functionEvaluationException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException", objArray14);
        java.lang.String str44 = integratorException43.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException" + "'", str44, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException");
    }

    @Test
    public void test11685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11685");
        java.lang.Throwable throwable3 = null;
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("hi!", throwable3);
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("", throwable3);
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray6, (java.lang.Throwable) functionEvaluationException9);
        java.lang.Object[] objArray11 = functionEvaluationException9.getArguments();
        double double12 = functionEvaluationException9.getArgument();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test11686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11686");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray8 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException13);
        functionEvaluationException10.addSuppressed((java.lang.Throwable) convergenceException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) functionEvaluationException10);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray17);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray29, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(97.0d);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException41);
        functionEvaluationException37.addSuppressed((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException41);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strArray29);
    }

    @Test
    public void test11687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11687");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray10);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray29);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray29);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray53);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException77 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException("", strArray76);
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray76);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ode.IntegratorException integratorException83 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray76);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray76);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray53, (java.lang.Throwable) derivativeException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray29, (java.lang.Throwable) convergenceException86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) convergenceException87);
        double double89 = functionEvaluationException88.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException88);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.0d + "'", double89 == 1.0d);
    }

    @Test
    public void test11688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11688");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11689");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray27 = functionEvaluationException26.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException32);
        functionEvaluationException29.addSuppressed((java.lang.Throwable) convergenceException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) functionEvaluationException29);
        java.lang.Object[] objArray36 = functionEvaluationException29.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!", objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray36);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray48, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException60);
        functionEvaluationException57.addSuppressed((java.lang.Throwable) convergenceException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray48, (java.lang.Throwable) functionEvaluationException64);
        java.lang.Throwable[] throwableArray66 = functionEvaluationException64.getSuppressed();
        java.lang.Throwable throwable68 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException(throwable68);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException73 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray72);
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException73);
        org.apache.commons.math.ode.IntegratorException integratorException75 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException73);
        derivativeException69.addSuppressed((java.lang.Throwable) integratorException75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException75);
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException77);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray66, (java.lang.Throwable) integratorException77);
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException77);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", objArray36, (java.lang.Throwable) derivativeException80);
        convergenceException13.addSuppressed((java.lang.Throwable) derivativeException80);
        java.lang.Object[] objArray84 = derivativeException80.getArguments();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[97.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
    }

    @Test
    public void test11690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11690");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) '#');
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) convergenceException4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException4);
        java.lang.Object[] objArray7 = convergenceException6.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray7);
        java.lang.Class<?> wildcardClass9 = convergenceException8.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test11691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11691");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}");
    }

    @Test
    public void test11692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11692");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray13);
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray28);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray28);
        java.lang.String str33 = functionEvaluationException32.getPattern();
        java.lang.Throwable[] throwableArray34 = functionEvaluationException32.getSuppressed();
        double double35 = functionEvaluationException32.getArgument();
        java.lang.String str36 = functionEvaluationException32.getPattern();
        java.lang.Throwable[] throwableArray37 = functionEvaluationException32.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException38);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException54);
        java.lang.String str56 = functionEvaluationException55.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray46, (java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray58 = functionEvaluationException55.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException62 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray58, (java.lang.Throwable) convergenceException63);
        java.lang.Throwable[] throwableArray65 = convergenceException63.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException63);
        java.lang.Throwable[] throwableArray67 = convergenceException63.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) convergenceException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) convergenceException63);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Evaluation failed for argument = 97" + "'", str33, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Evaluation failed for argument = 97" + "'", str36, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str56, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test11693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11693");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(1.0d, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException26);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test11694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11694");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        java.lang.Object[] objArray31 = convergenceException30.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException30);
        java.lang.String str33 = convergenceException30.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str33, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11695");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException", (java.lang.Object[]) strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test11696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11696");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        java.lang.Object[] objArray4 = functionEvaluationException3.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException(35.0d, (java.lang.Throwable) functionEvaluationException3);
        java.lang.Class<?> wildcardClass6 = functionEvaluationException5.getClass();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test11697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11697");
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", throwable7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("", throwable7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", throwable7);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ConvergenceException: ", objArray11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray11);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test11698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11698");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray18 = new double[] { (-1.0f), 1.0d };
        boolean boolean19 = switchingFunctionsHandler14.reset((double) (byte) 10, doubleArray18);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray25 = new double[] { (-1.0f), 1.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) (byte) 10, doubleArray25);
        double[] doubleArray32 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean33 = switchingFunctionsHandler21.reset((double) (-1), doubleArray32);
        switchingFunctionsHandler14.stepAccepted((double) (byte) -1, doubleArray32);
        boolean boolean35 = switchingFunctionsHandler14.isEmpty();
        double double36 = switchingFunctionsHandler14.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double39 = switchingFunctionsHandler38.getEventTime();
        double double40 = switchingFunctionsHandler38.getEventTime();
        double double41 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray47 = new double[] { (-1.0f), 1.0d };
        boolean boolean48 = switchingFunctionsHandler43.reset((double) (byte) 10, doubleArray47);
        double[] doubleArray54 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean55 = switchingFunctionsHandler43.reset((double) (-1), doubleArray54);
        boolean boolean56 = switchingFunctionsHandler38.reset((double) 1, doubleArray54);
        switchingFunctionsHandler14.stepAccepted((double) 100.0f, doubleArray54);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray54);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, (double) (-1.0f), (double) 0.0f, 100);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test11699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11699");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, (java.lang.Throwable) functionEvaluationException3);
    }

    @Test
    public void test11700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11700");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray7, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", objArray7);
        java.lang.String str14 = functionEvaluationException13.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) functionEvaluationException13);
        double double16 = functionEvaluationException13.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException13);
        java.lang.Class<?> wildcardClass18 = convergenceException17.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10.0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test11701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11701");
        java.lang.Throwable throwable6 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException(throwable6);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException11);
        derivativeException7.addSuppressed((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException15);
        java.lang.Object[] objArray17 = integratorException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, (java.lang.Throwable) functionEvaluationException20);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test11702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11702");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11703");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler14 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray20 = new double[] { (-1.0f), 1.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) (byte) 10, doubleArray20);
        double[] doubleArray27 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean28 = switchingFunctionsHandler16.reset((double) (-1), doubleArray27);
        boolean boolean29 = switchingFunctionsHandler14.reset((double) 1L, doubleArray27);
        boolean boolean30 = switchingFunctionsHandler0.reset((-1.0d), doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray36 = new double[] { (-1.0f), 1.0d };
        boolean boolean37 = switchingFunctionsHandler32.reset((double) (byte) 10, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray43 = new double[] { (-1.0f), 1.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) (byte) 10, doubleArray43);
        double[] doubleArray50 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean51 = switchingFunctionsHandler39.reset((double) (-1), doubleArray50);
        switchingFunctionsHandler32.stepAccepted((double) (byte) -1, doubleArray50);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler32.add(switchingFunction53, 10.0d, 0.0d, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction58 = null;
        switchingFunctionsHandler32.add(switchingFunction58, (double) 1.0f, (double) '4', 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double65 = switchingFunctionsHandler64.getEventTime();
        double double66 = switchingFunctionsHandler64.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler68 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double69 = switchingFunctionsHandler68.getEventTime();
        double double70 = switchingFunctionsHandler68.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray76 = new double[] { (-1.0f), 1.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) (byte) 10, doubleArray76);
        boolean boolean78 = switchingFunctionsHandler72.isEmpty();
        double[] doubleArray86 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler72.stepAccepted((double) (-1L), doubleArray86);
        boolean boolean88 = switchingFunctionsHandler68.reset((double) 100L, doubleArray86);
        switchingFunctionsHandler64.stepAccepted((double) (short) -1, doubleArray86);
        boolean boolean90 = switchingFunctionsHandler32.reset((double) (byte) 1, doubleArray86);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray86);
        boolean boolean92 = switchingFunctionsHandler0.isEmpty();
        boolean boolean93 = switchingFunctionsHandler0.stop();
        boolean boolean94 = switchingFunctionsHandler0.stop();
        boolean boolean95 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test11704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11704");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException16);
        java.lang.String str18 = functionEvaluationException17.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray8, (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray8);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException22);
        java.lang.String str25 = convergenceException22.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str18, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}" + "'", str25, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
    }

    @Test
    public void test11705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11705");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) 10L, Double.NaN, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction21 = null;
        switchingFunctionsHandler0.add(switchingFunction21, (double) 10, 1.0d, (int) (short) 1);
        double double26 = switchingFunctionsHandler0.getEventTime();
        double double27 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
    }

    @Test
    public void test11706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11706");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray10, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException22);
        functionEvaluationException19.addSuppressed((java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray10, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", objArray10);
        java.lang.String str31 = functionEvaluationException30.getPattern();
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: " + "'", str31, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11707");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray13, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: hi!", objArray13);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = hi!", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10.0]");
    }

    @Test
    public void test11708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11708");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "Evaluation failed for argument = 0");
    }

    @Test
    public void test11709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11709");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, (double) 10L, Double.NaN, 10);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) (byte) 1, (double) 1L, (int) '#');
        boolean boolean27 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        boolean boolean31 = switchingFunctionsHandler29.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray37 = new double[] { (-1.0f), 1.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) (byte) 10, doubleArray37);
        double[] doubleArray44 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean45 = switchingFunctionsHandler33.reset((double) (-1), doubleArray44);
        switchingFunctionsHandler29.stepAccepted((double) (short) 10, doubleArray44);
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 100, doubleArray44);
        double[] doubleArray49 = null;
        boolean boolean50 = switchingFunctionsHandler0.reset(0.0d, doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test11710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11710");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (byte) -1, (double) (short) -1, (int) (short) 0);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction7 = null;
        switchingFunctionsHandler0.add(switchingFunction7, 32.0d, (double) 1L, (int) (short) 1);
        double double12 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction13 = null;
        switchingFunctionsHandler0.add(switchingFunction13, (double) (-1), (double) (short) 0, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, (double) ' ', (double) 100, (int) '#');
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        boolean boolean24 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test11711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11711");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", throwable1);
    }

    @Test
    public void test11712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11712");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Throwable[] throwableArray6 = functionEvaluationException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException8);
        java.lang.Throwable[] throwableArray10 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException11);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("", strArray26);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray26, (java.lang.Throwable) derivativeException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException48);
        java.lang.Throwable[] throwableArray50 = functionEvaluationException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray50);
        java.lang.Object[] objArray57 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray57, (java.lang.Throwable) convergenceException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", objArray57);
        convergenceException51.addSuppressed((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray26, (java.lang.Throwable) functionEvaluationException63);
        derivativeException12.addSuppressed((java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[10.0]");
    }

    @Test
    public void test11713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11713");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double6 = switchingFunctionsHandler5.getEventTime();
        double double7 = switchingFunctionsHandler5.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double10 = switchingFunctionsHandler9.getEventTime();
        double double11 = switchingFunctionsHandler9.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { (-1.0f), 1.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray17);
        boolean boolean19 = switchingFunctionsHandler13.isEmpty();
        double[] doubleArray27 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler13.stepAccepted((double) (-1L), doubleArray27);
        boolean boolean29 = switchingFunctionsHandler9.reset((double) 100L, doubleArray27);
        switchingFunctionsHandler5.stepAccepted((double) (short) -1, doubleArray27);
        boolean boolean31 = switchingFunctionsHandler0.reset(1.0d, doubleArray27);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean34 = switchingFunctionsHandler33.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray40 = new double[] { (-1.0f), 1.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) (byte) 10, doubleArray40);
        double[] doubleArray47 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean48 = switchingFunctionsHandler36.reset((double) (-1), doubleArray47);
        boolean boolean49 = switchingFunctionsHandler33.reset(97.0d, doubleArray47);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 100, doubleArray47);
        double double51 = switchingFunctionsHandler0.getEventTime();
        double double52 = switchingFunctionsHandler0.getEventTime();
        boolean boolean53 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11714");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, (java.lang.Throwable) functionEvaluationException3);
    }

    @Test
    public void test11715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11715");
        java.lang.Object[] objArray6 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) functionEvaluationException10);
        java.lang.String str12 = functionEvaluationException11.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException11);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: " + "'", str12, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11716");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray8, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray8, (java.lang.Throwable) functionEvaluationException24);
        java.lang.Throwable[] throwableArray26 = functionEvaluationException24.getSuppressed();
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException(throwable28);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException33);
        derivativeException29.addSuppressed((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray26, (java.lang.Throwable) integratorException37);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException37);
        java.lang.Throwable[] throwableArray41 = derivativeException40.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("Convergence failed", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) convergenceException42);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test11717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11717");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        java.lang.Throwable[] throwableArray3 = functionEvaluationException2.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Throwable[] throwableArray8 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray3, (java.lang.Throwable) functionEvaluationException6);
        java.lang.Throwable[] throwableArray11 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        java.lang.String str13 = derivativeException12.getPattern();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Evaluation failed for argument = 97" + "'", str13, "Evaluation failed for argument = 97");
    }

    @Test
    public void test11718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11718");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException21);
        functionEvaluationException18.addSuppressed((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException22);
        java.lang.String str25 = convergenceException24.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray13, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test11719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11719");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray6 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException14);
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        java.lang.Object[] objArray27 = convergenceException26.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException35);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) convergenceException36);
        java.lang.Object[] objArray39 = new java.lang.Object[] { (byte) 1, functionEvaluationException32, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "", objArray27, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", objArray27);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray27);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException50);
        java.lang.Object[] objArray52 = functionEvaluationException50.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException57);
        java.lang.Throwable[] throwableArray59 = functionEvaluationException57.getSuppressed();
        java.lang.Throwable[] throwableArray60 = functionEvaluationException57.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray65 = functionEvaluationException64.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException70);
        functionEvaluationException67.addSuppressed((java.lang.Throwable) convergenceException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray65, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray60, (java.lang.Throwable) functionEvaluationException73);
        java.lang.String str75 = functionEvaluationException74.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.ConvergenceException convergenceException77 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray52, (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray52);
        integratorException44.addSuppressed((java.lang.Throwable) integratorException78);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException44);
        convergenceException15.addSuppressed((java.lang.Throwable) integratorException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) integratorException44);
        java.lang.Throwable[] throwableArray83 = integratorException44.getSuppressed();
        java.lang.String str84 = integratorException44.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str75, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str84, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11720");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException1);
        java.lang.String str3 = functionEvaluationException1.getPattern();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Evaluation failed for argument = {0}" + "'", str3, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test11721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11721");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray11, throwable16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test11722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11722");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray20 = new double[] { (-1.0f), 1.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) (byte) 10, doubleArray20);
        boolean boolean22 = switchingFunctionsHandler16.isEmpty();
        double[] doubleArray30 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler16.stepAccepted((double) (-1L), doubleArray30);
        boolean boolean32 = switchingFunctionsHandler16.stop();
        boolean boolean33 = switchingFunctionsHandler16.isEmpty();
        boolean boolean34 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler36.stepAccepted((double) (short) 0, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray49 = new double[] { (-1.0f), 1.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) (byte) 10, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray59 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler45.stepAccepted((double) (-1L), doubleArray59);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray59);
        boolean boolean62 = switchingFunctionsHandler36.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler64 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray68 = new double[] { (-1.0f), 1.0d };
        boolean boolean69 = switchingFunctionsHandler64.reset((double) (byte) 10, doubleArray68);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator70 = null;
        boolean boolean71 = switchingFunctionsHandler64.evaluateStep(stepInterpolator70);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator72 = null;
        boolean boolean73 = switchingFunctionsHandler64.evaluateStep(stepInterpolator72);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction74 = null;
        switchingFunctionsHandler64.add(switchingFunction74, (double) (short) 100, 0.0d, (int) (short) 1);
        double double79 = switchingFunctionsHandler64.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler81 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray87 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler81.stepAccepted((double) (short) 0, doubleArray87);
        boolean boolean89 = switchingFunctionsHandler64.reset((double) 0.0f, doubleArray87);
        boolean boolean90 = switchingFunctionsHandler36.reset((double) (-1), doubleArray87);
        boolean boolean91 = switchingFunctionsHandler16.reset(Double.NaN, doubleArray87);
        switchingFunctionsHandler0.stepAccepted((double) 1, doubleArray87);
        boolean boolean93 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test11723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11723");
        java.lang.Object[] objArray6 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", objArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray6);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray21);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", strArray21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray6, (java.lang.Throwable) derivativeException30);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test11724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11724");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray8, (java.lang.Throwable) functionEvaluationException21);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test11725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11725");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray11);
        java.lang.Object[] objArray17 = integratorException16.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException23);
        double double25 = functionEvaluationException24.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException24);
        double double27 = functionEvaluationException26.getArgument();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
    }

    @Test
    public void test11726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11726");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException8);
        functionEvaluationException5.addSuppressed((java.lang.Throwable) convergenceException9);
        java.lang.Object[] objArray12 = new java.lang.Object[] { (byte) 1, functionEvaluationException5, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray12);
        java.lang.Throwable[] throwableArray14 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray14);
        java.lang.String str16 = convergenceException15.toString();
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1" + "'", str16, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1");
    }

    @Test
    public void test11727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11727");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray15);
        java.lang.String str20 = functionEvaluationException19.getPattern();
        java.lang.Throwable[] throwableArray21 = functionEvaluationException19.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "hi!", (java.lang.Object[]) throwableArray21);
        java.lang.Throwable[] throwableArray23 = functionEvaluationException22.getSuppressed();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray37 = functionEvaluationException36.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException42);
        functionEvaluationException39.addSuppressed((java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray37, (java.lang.Throwable) functionEvaluationException39);
        java.lang.Throwable[] throwableArray46 = functionEvaluationException39.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray46);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray28, (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException49);
        java.lang.Object[] objArray51 = integratorException50.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray51);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray61);
        org.apache.commons.math.ode.DerivativeException derivativeException64 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray61);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException65);
        java.lang.Throwable[] throwableArray67 = functionEvaluationException66.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", objArray51, (java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: hi!", objArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ");
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException75);
        java.lang.String str77 = functionEvaluationException75.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, (java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("", objArray51, (java.lang.Throwable) functionEvaluationException79);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Evaluation failed for argument = 97" + "'", str20, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: " + "'", str77, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test11728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11728");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler0.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler0.evaluateStep(stepInterpolator12);
        double double14 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        boolean boolean18 = switchingFunctionsHandler16.stop();
        boolean boolean19 = switchingFunctionsHandler16.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator20 = null;
        boolean boolean21 = switchingFunctionsHandler16.evaluateStep(stepInterpolator20);
        double[] doubleArray23 = new double[] {};
        switchingFunctionsHandler16.stepAccepted(10.0d, doubleArray23);
        boolean boolean25 = switchingFunctionsHandler0.reset((double) 100.0f, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test11729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11729");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Throwable[] throwableArray8 = functionEvaluationException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray14 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) functionEvaluationException22);
        java.lang.String str24 = functionEvaluationException23.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) convergenceException26);
        java.lang.String str29 = convergenceException26.getPattern();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str24, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Evaluation failed for argument = 97" + "'", str29, "Evaluation failed for argument = 97");
    }

    @Test
    public void test11730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11730");
        java.lang.String[] strArray3 = new java.lang.String[] {};
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        java.lang.Throwable[] throwableArray13 = functionEvaluationException11.getSuppressed();
        java.lang.Throwable[] throwableArray14 = functionEvaluationException11.getSuppressed();
        java.lang.Throwable[] throwableArray15 = functionEvaluationException11.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray15);
        java.lang.String str19 = integratorException18.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray3, (java.lang.Throwable) integratorException18);
        java.lang.String str21 = functionEvaluationException20.getPattern();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str19, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str21, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11731");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11732");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("hi!");
        java.lang.Throwable[] throwableArray4 = convergenceException3.getSuppressed();
        java.lang.Object[] objArray5 = convergenceException3.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 10);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray5, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray5);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test11733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11733");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double double22 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double double26 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { (-1.0f), 1.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) (byte) 10, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray42 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler28.stepAccepted((double) (-1L), doubleArray42);
        boolean boolean44 = switchingFunctionsHandler24.reset((double) 100L, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) -1, doubleArray42);
        boolean boolean46 = switchingFunctionsHandler15.reset(1.0d, doubleArray42);
        switchingFunctionsHandler0.stepAccepted(Double.NaN, doubleArray42);
        double[] doubleArray49 = null;
        boolean boolean50 = switchingFunctionsHandler0.reset(35.0d, doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test11734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11734");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double5 = switchingFunctionsHandler4.getEventTime();
        double double6 = switchingFunctionsHandler4.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler8 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray12 = new double[] { (-1.0f), 1.0d };
        boolean boolean13 = switchingFunctionsHandler8.reset((double) (byte) 10, doubleArray12);
        boolean boolean14 = switchingFunctionsHandler8.isEmpty();
        double[] doubleArray22 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler8.stepAccepted((double) (-1L), doubleArray22);
        boolean boolean24 = switchingFunctionsHandler4.reset((double) 100L, doubleArray22);
        switchingFunctionsHandler0.stepAccepted((double) (short) -1, doubleArray22);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        double double27 = switchingFunctionsHandler0.getEventTime();
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) 100, 0.0d, (int) ' ');
        boolean boolean34 = switchingFunctionsHandler0.isEmpty();
        boolean boolean35 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test11735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11735");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException32);
        java.lang.String str34 = functionEvaluationException33.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray24, (java.lang.Throwable) functionEvaluationException33);
        java.lang.Object[] objArray36 = functionEvaluationException33.getArguments();
        double double37 = functionEvaluationException33.getArgument();
        double double38 = functionEvaluationException33.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray11, (java.lang.Throwable) functionEvaluationException33);
        java.lang.Throwable[] throwableArray40 = convergenceException39.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str34, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test11736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11736");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11737");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray11);
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray11, throwable14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException18);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test11738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11738");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { (-1.0f), 1.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray9);
        double[] doubleArray16 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean17 = switchingFunctionsHandler5.reset((double) (-1), doubleArray16);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray16);
        boolean boolean19 = switchingFunctionsHandler0.stop();
        double[] doubleArray21 = null;
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray21);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11739");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray10 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        functionEvaluationException12.addSuppressed((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) functionEvaluationException12);
        java.lang.Throwable throwable19 = null;
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException(throwable19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray10, throwable19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray30 = functionEvaluationException29.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException35);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) functionEvaluationException32);
        java.lang.Throwable[] throwableArray39 = functionEvaluationException32.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray39);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10);
        java.lang.Throwable[] throwableArray44 = integratorException43.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test11740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11740");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler2.evaluateStep(stepInterpolator15);
        double double17 = switchingFunctionsHandler2.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean20 = switchingFunctionsHandler19.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler19.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double double26 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double29 = switchingFunctionsHandler28.getEventTime();
        double double30 = switchingFunctionsHandler28.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler32 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray36 = new double[] { (-1.0f), 1.0d };
        boolean boolean37 = switchingFunctionsHandler32.reset((double) (byte) 10, doubleArray36);
        boolean boolean38 = switchingFunctionsHandler32.isEmpty();
        double[] doubleArray46 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler32.stepAccepted((double) (-1L), doubleArray46);
        boolean boolean48 = switchingFunctionsHandler28.reset((double) 100L, doubleArray46);
        switchingFunctionsHandler24.stepAccepted((double) (short) -1, doubleArray46);
        boolean boolean50 = switchingFunctionsHandler19.reset(1.0d, doubleArray46);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler52 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean53 = switchingFunctionsHandler52.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler55 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray59 = new double[] { (-1.0f), 1.0d };
        boolean boolean60 = switchingFunctionsHandler55.reset((double) (byte) 10, doubleArray59);
        double[] doubleArray66 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean67 = switchingFunctionsHandler55.reset((double) (-1), doubleArray66);
        boolean boolean68 = switchingFunctionsHandler52.reset(97.0d, doubleArray66);
        switchingFunctionsHandler19.stepAccepted((double) (byte) 100, doubleArray66);
        switchingFunctionsHandler2.stepAccepted((double) (short) 1, doubleArray66);
        switchingFunctionsHandler0.stepAccepted((double) (short) 100, doubleArray66);
        boolean boolean72 = switchingFunctionsHandler0.isEmpty();
        double double73 = switchingFunctionsHandler0.getEventTime();
        double double74 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test11741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11741");
        java.lang.String[] strArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11742");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test11743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11743");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray19);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray19);
        java.lang.Object[] objArray38 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray38, (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) derivativeException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray19, (java.lang.Throwable) derivativeException45);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[10.0]");
    }

    @Test
    public void test11744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11744");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray16);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("", strArray40);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException53);
        java.lang.Throwable[] throwableArray55 = functionEvaluationException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException57);
        java.lang.String str59 = convergenceException58.getPattern();
        java.lang.Throwable throwable60 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException(throwable60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException61);
        convergenceException58.addSuppressed((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) derivativeException65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException66);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str59, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11745");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException9);
        java.lang.Object[] objArray11 = convergenceException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) functionEvaluationException13);
        double double15 = functionEvaluationException14.getArgument();
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test11746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11746");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction19 = null;
        switchingFunctionsHandler0.add(switchingFunction19, (double) '#', (double) 3, (int) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test11747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11747");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { (-1.0f), 1.0d };
        boolean boolean14 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler9.isEmpty();
        double[] doubleArray23 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler9.stepAccepted((double) (-1L), doubleArray23);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { (-1.0f), 1.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) (byte) 10, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray40 = new double[] { (-1.0f), 1.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) (byte) 10, doubleArray40);
        double[] doubleArray47 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean48 = switchingFunctionsHandler36.reset((double) (-1), doubleArray47);
        switchingFunctionsHandler29.stepAccepted((double) (byte) -1, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray47);
        boolean boolean51 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler0.evaluateStep(stepInterpolator52);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction59 = null;
        switchingFunctionsHandler0.add(switchingFunction59, 32.0d, (double) 1, (int) (byte) 100);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test11748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11748");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.IntegratorException: hi!");
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException2);
    }

    @Test
    public void test11749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11749");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray5 = functionEvaluationException4.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        functionEvaluationException7.addSuppressed((java.lang.Throwable) convergenceException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray5, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException7.getSuppressed();
        java.lang.Object[] objArray18 = functionEvaluationException7.getArguments();
        java.lang.String str19 = functionEvaluationException7.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[97.0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97" + "'", str19, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11750");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray14);
        java.lang.Throwable throwable25 = null;
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray14, throwable25);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray36, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "hi!", objArray36);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray36);
        java.lang.Object[] objArray48 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray48);
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException(throwable51);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray55);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException56);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException56);
        derivativeException52.addSuppressed((java.lang.Throwable) integratorException58);
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException58);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray48, (java.lang.Throwable) integratorException60);
        java.lang.Object[] objArray63 = integratorException60.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException66 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray63, (java.lang.Throwable) derivativeException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray36, (java.lang.Throwable) derivativeException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException(97.0d);
        double double73 = functionEvaluationException72.getArgument();
        derivativeException68.addSuppressed((java.lang.Throwable) functionEvaluationException72);
        java.lang.Throwable[] throwableArray75 = functionEvaluationException72.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException72);
        java.lang.Object[] objArray77 = functionEvaluationException72.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException72);
        double double79 = functionEvaluationException72.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException82);
        functionEvaluationException72.addSuppressed((java.lang.Throwable) convergenceException82);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 97.0d + "'", double73 == 97.0d);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[97.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 97.0d + "'", double79 == 97.0d);
    }

    @Test
    public void test11751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11751");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        double double16 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean22 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler21.evaluateStep(stepInterpolator23);
        boolean boolean25 = switchingFunctionsHandler21.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray31 = new double[] { (-1.0f), 1.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) (byte) 10, doubleArray31);
        boolean boolean33 = switchingFunctionsHandler27.isEmpty();
        boolean boolean34 = switchingFunctionsHandler27.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler36.stepAccepted((double) (short) 0, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray49 = new double[] { (-1.0f), 1.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) (byte) 10, doubleArray49);
        boolean boolean51 = switchingFunctionsHandler45.isEmpty();
        double[] doubleArray59 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler45.stepAccepted((double) (-1L), doubleArray59);
        switchingFunctionsHandler36.stepAccepted((double) (byte) 10, doubleArray59);
        boolean boolean62 = switchingFunctionsHandler36.stop();
        boolean boolean63 = switchingFunctionsHandler36.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray69 = new double[] { (-1.0f), 1.0d };
        boolean boolean70 = switchingFunctionsHandler65.reset((double) (byte) 10, doubleArray69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray76 = new double[] { (-1.0f), 1.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) (byte) 10, doubleArray76);
        double[] doubleArray83 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean84 = switchingFunctionsHandler72.reset((double) (-1), doubleArray83);
        switchingFunctionsHandler65.stepAccepted((double) (byte) -1, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler36.reset((double) (-1L), doubleArray83);
        boolean boolean87 = switchingFunctionsHandler27.reset((double) (short) 0, doubleArray83);
        boolean boolean88 = switchingFunctionsHandler21.reset((-1.0d), doubleArray83);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) 10, doubleArray83);
        double double90 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator91 = null;
        boolean boolean92 = switchingFunctionsHandler0.evaluateStep(stepInterpolator91);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test11752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11752");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray32 = functionEvaluationException31.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException31);
        derivativeException27.addSuppressed((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray17, (java.lang.Throwable) integratorException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("", strArray53);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray53);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray53);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray68);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray68);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray68);
        java.lang.Throwable[] throwableArray73 = integratorException72.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) integratorException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "", (java.lang.Object[]) strArray53, (java.lang.Throwable) integratorException72);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray53);
        java.lang.Throwable throwable77 = null;
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray53, throwable77);
        java.lang.Object[] objArray79 = convergenceException78.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) convergenceException78);
        org.apache.commons.math.ode.DerivativeException derivativeException81 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException83 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException84 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        java.lang.Throwable[] throwableArray85 = integratorException84.getSuppressed();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test11753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11753");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException9);
        functionEvaluationException7.addSuppressed((java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException9);
        java.lang.Object[] objArray13 = derivativeException12.getArguments();
        java.lang.Throwable[] throwableArray14 = derivativeException12.getSuppressed();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test11754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11754");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11755");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17);
        java.lang.Object[] objArray31 = convergenceException30.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException30);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException30);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!]");
    }

    @Test
    public void test11756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11756");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException8);
        functionEvaluationException5.addSuppressed((java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException5);
        java.lang.Object[] objArray13 = functionEvaluationException5.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException14);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[97.0]");
    }

    @Test
    public void test11757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11757");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException8);
        functionEvaluationException5.addSuppressed((java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException5);
        java.lang.String str12 = functionEvaluationException5.getPattern();
        java.lang.String str13 = functionEvaluationException5.getPattern();
        java.lang.Object[] objArray14 = functionEvaluationException5.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray25 = functionEvaluationException24.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException30);
        functionEvaluationException27.addSuppressed((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray34 = functionEvaluationException27.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", objArray34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        java.lang.Object[] objArray37 = integratorException36.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable[] throwableArray45 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException46);
        java.lang.String str48 = convergenceException46.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException46);
        double double50 = functionEvaluationException49.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray37, (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray37);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", objArray14, (java.lang.Throwable) integratorException53);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException56);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Evaluation failed for argument = {0}" + "'", str12, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Evaluation failed for argument = {0}" + "'", str13, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[97.0]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test11758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11758");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray6, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", objArray6);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", objArray6);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException13);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray25);
        java.lang.String str30 = functionEvaluationException29.getPattern();
        java.lang.Throwable[] throwableArray31 = functionEvaluationException29.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "hi!", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException33);
        convergenceException13.addSuppressed((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException34);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Evaluation failed for argument = 97" + "'", str30, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test11759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11759");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray16);
        java.lang.Object[] objArray24 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray24);
        java.lang.Object[] objArray26 = integratorException25.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray16, (java.lang.Throwable) integratorException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException35);
        java.lang.Throwable[] throwableArray39 = functionEvaluationException35.getSuppressed();
        double double40 = functionEvaluationException35.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException35);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test11760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11760");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double double22 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double double26 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { (-1.0f), 1.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) (byte) 10, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray42 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler28.stepAccepted((double) (-1L), doubleArray42);
        boolean boolean44 = switchingFunctionsHandler24.reset((double) 100L, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) -1, doubleArray42);
        boolean boolean46 = switchingFunctionsHandler15.reset(1.0d, doubleArray42);
        switchingFunctionsHandler0.stepAccepted(Double.NaN, doubleArray42);
        boolean boolean48 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, (double) '4', (double) 1L, (int) '#');
        double double54 = switchingFunctionsHandler0.getEventTime();
        boolean boolean55 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11761");
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray14, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException26);
        functionEvaluationException23.addSuppressed((java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray14, (java.lang.Throwable) functionEvaluationException30);
        java.lang.Throwable[] throwableArray32 = functionEvaluationException30.getSuppressed();
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException(throwable34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        derivativeException35.addSuppressed((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException54);
        functionEvaluationException51.addSuppressed((java.lang.Throwable) convergenceException55);
        java.lang.Object[] objArray58 = new java.lang.Object[] { (byte) 1, functionEvaluationException51, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray58);
        java.lang.Throwable[] throwableArray60 = functionEvaluationException59.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray69 = functionEvaluationException68.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException74);
        functionEvaluationException71.addSuppressed((java.lang.Throwable) convergenceException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray69, (java.lang.Throwable) functionEvaluationException71);
        java.lang.Throwable throwable78 = null;
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException(throwable78);
        org.apache.commons.math.ConvergenceException convergenceException80 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray69, throwable78);
        org.apache.commons.math.ode.IntegratorException integratorException81 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray60, (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.ode.DerivativeException derivativeException93 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException92);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException94 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) convergenceException92);
        double double95 = functionEvaluationException94.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException((double) 1, (java.lang.Throwable) functionEvaluationException94);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 10.0d + "'", double95 == 10.0d);
    }

    @Test
    public void test11762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11762");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) derivativeException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException37);
        java.lang.Throwable[] throwableArray39 = functionEvaluationException37.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray39);
        java.lang.Object[] objArray46 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray46, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", objArray46);
        convergenceException40.addSuppressed((java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10.0]");
    }

    @Test
    public void test11763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11763");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray6, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray6, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray24 = functionEvaluationException15.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException31);
        java.lang.Object[] objArray33 = functionEvaluationException31.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException38);
        java.lang.Throwable[] throwableArray40 = functionEvaluationException38.getSuppressed();
        java.lang.Throwable[] throwableArray41 = functionEvaluationException38.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray46 = functionEvaluationException45.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException51);
        functionEvaluationException48.addSuppressed((java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray46, (java.lang.Throwable) functionEvaluationException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) functionEvaluationException54);
        java.lang.String str56 = functionEvaluationException55.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray33, (java.lang.Throwable) functionEvaluationException55);
        java.lang.Object[] objArray66 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray66, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException78);
        functionEvaluationException75.addSuppressed((java.lang.Throwable) convergenceException79);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray66, (java.lang.Throwable) functionEvaluationException82);
        java.lang.Throwable[] throwableArray84 = functionEvaluationException82.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray33, (java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException92);
        org.apache.commons.math.ConvergenceException convergenceException94 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray33, (java.lang.Throwable) functionEvaluationException93);
        org.apache.commons.math.ConvergenceException convergenceException95 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray24, (java.lang.Throwable) convergenceException94);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException98 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2");
        org.apache.commons.math.ConvergenceException convergenceException99 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException", objArray24, (java.lang.Throwable) functionEvaluationException98);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[97.0]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str56, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test11764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11764");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        double double3 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { (-1.0f), 1.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray9);
        double[] doubleArray16 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean17 = switchingFunctionsHandler5.reset((double) (-1), doubleArray16);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler5.evaluateStep(stepInterpolator18);
        double double20 = switchingFunctionsHandler5.getEventTime();
        double double21 = switchingFunctionsHandler5.getEventTime();
        double double22 = switchingFunctionsHandler5.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray30 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler24.stepAccepted((double) (short) 0, doubleArray30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray37 = new double[] { (-1.0f), 1.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) (byte) 10, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler33.isEmpty();
        double[] doubleArray47 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler33.stepAccepted((double) (-1L), doubleArray47);
        switchingFunctionsHandler24.stepAccepted((double) (byte) 10, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler5.reset((double) 10L, doubleArray47);
        boolean boolean51 = switchingFunctionsHandler0.reset(10.0d, doubleArray47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler0.evaluateStep(stepInterpolator52);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue(Double.isNaN(double3));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test11765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11765");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray14 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException16);
        java.lang.Object[] objArray23 = functionEvaluationException16.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", objArray23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray23);
        java.lang.Throwable[] throwableArray28 = integratorException27.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray28);
        java.lang.String str30 = functionEvaluationException29.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(35.0d, (java.lang.Throwable) functionEvaluationException31);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1" + "'", str30, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1");
    }

    @Test
    public void test11766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11766");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11767");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray6);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray16 = functionEvaluationException15.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException21);
        functionEvaluationException18.addSuppressed((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) functionEvaluationException18);
        java.lang.Object[] objArray25 = functionEvaluationException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray25);
        derivativeException9.addSuppressed((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { (-1.0f), 1.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) (byte) 10, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler29.stop();
        boolean boolean36 = switchingFunctionsHandler29.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double double44 = switchingFunctionsHandler42.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double double48 = switchingFunctionsHandler46.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray54 = new double[] { (-1.0f), 1.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) (byte) 10, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray64 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler50.stepAccepted((double) (-1L), doubleArray64);
        boolean boolean66 = switchingFunctionsHandler46.reset((double) 100L, doubleArray64);
        switchingFunctionsHandler42.stepAccepted((double) (short) -1, doubleArray64);
        boolean boolean68 = switchingFunctionsHandler37.reset(1.0d, doubleArray64);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean71 = switchingFunctionsHandler70.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler73 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray77 = new double[] { (-1.0f), 1.0d };
        boolean boolean78 = switchingFunctionsHandler73.reset((double) (byte) 10, doubleArray77);
        double[] doubleArray84 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean85 = switchingFunctionsHandler73.reset((double) (-1), doubleArray84);
        boolean boolean86 = switchingFunctionsHandler70.reset(97.0d, doubleArray84);
        switchingFunctionsHandler37.stepAccepted((double) (byte) 100, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler37.stop();
        java.lang.Object[] objArray89 = new java.lang.Object[] { switchingFunctionsHandler29, boolean88 };
        org.apache.commons.math.ConvergenceException convergenceException90 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", objArray89);
        derivativeException9.addSuppressed((java.lang.Throwable) convergenceException90);
        org.apache.commons.math.ConvergenceException convergenceException92 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException90);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException90);
        java.lang.String str94 = convergenceException93.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[97.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException" + "'", str94, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException");
    }

    @Test
    public void test11768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11768");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray6);
        java.lang.Throwable[] throwableArray11 = integratorException10.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException10);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException13);
        java.lang.String str15 = integratorException14.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: " + "'", str15, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ");
    }

    @Test
    public void test11769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11769");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray7, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException15);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10.0]");
    }

    @Test
    public void test11770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11770");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException");
        org.apache.commons.math.ode.IntegratorException integratorException2 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException1);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray8);
        java.lang.Throwable[] throwableArray12 = convergenceException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException11);
        java.lang.String str14 = convergenceException13.getPattern();
        integratorException2.addSuppressed((java.lang.Throwable) convergenceException13);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test11771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11771");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", objArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Throwable) convergenceException10);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test11772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11772");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        functionEvaluationException12.addSuppressed((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException16);
        java.lang.String str19 = convergenceException18.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray7, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) convergenceException20);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray30);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray30);
        functionEvaluationException22.addSuppressed((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException22);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test11773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11773");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray14);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Throwable) derivativeException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException26);
        double double28 = functionEvaluationException27.getArgument();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
    }

    @Test
    public void test11774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11774");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: hi!", throwable2);
    }

    @Test
    public void test11775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11775");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray13 = functionEvaluationException12.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException12);
        derivativeException8.addSuppressed((java.lang.Throwable) functionEvaluationException12);
        java.lang.Throwable[] throwableArray16 = derivativeException8.getSuppressed();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray26, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException36);
        java.lang.String str38 = functionEvaluationException36.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException36);
        double double40 = functionEvaluationException39.getArgument();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: " + "'", str38, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2.0d + "'", double40 == 2.0d);
    }

    @Test
    public void test11776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11776");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException9);
        java.lang.Object[] objArray11 = integratorException10.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: ", objArray11, (java.lang.Throwable) functionEvaluationException13);
        java.lang.Throwable[] throwableArray15 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException17);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "", (java.lang.Object[]) throwableArray15);
        java.lang.Object[] objArray32 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray32);
        java.lang.Throwable[] throwableArray34 = integratorException33.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray36 = convergenceException35.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, (java.lang.Throwable) convergenceException35);
        functionEvaluationException29.addSuppressed((java.lang.Throwable) functionEvaluationException37);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test11777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11777");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean18 = switchingFunctionsHandler17.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler17.evaluateStep(stepInterpolator19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double23 = switchingFunctionsHandler22.getEventTime();
        double double24 = switchingFunctionsHandler22.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler26 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double27 = switchingFunctionsHandler26.getEventTime();
        double double28 = switchingFunctionsHandler26.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { (-1.0f), 1.0d };
        boolean boolean35 = switchingFunctionsHandler30.reset((double) (byte) 10, doubleArray34);
        boolean boolean36 = switchingFunctionsHandler30.isEmpty();
        double[] doubleArray44 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler30.stepAccepted((double) (-1L), doubleArray44);
        boolean boolean46 = switchingFunctionsHandler26.reset((double) 100L, doubleArray44);
        switchingFunctionsHandler22.stepAccepted((double) (short) -1, doubleArray44);
        boolean boolean48 = switchingFunctionsHandler17.reset(1.0d, doubleArray44);
        boolean boolean49 = switchingFunctionsHandler0.reset((double) (byte) 100, doubleArray44);
        boolean boolean50 = switchingFunctionsHandler0.isEmpty();
        boolean boolean51 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator52 = null;
        boolean boolean53 = switchingFunctionsHandler0.evaluateStep(stepInterpolator52);
        boolean boolean54 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator55 = null;
        boolean boolean56 = switchingFunctionsHandler0.evaluateStep(stepInterpolator55);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test11778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11778");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        double[] doubleArray14 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean15 = switchingFunctionsHandler3.reset((double) (-1), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset(97.0d, doubleArray14);
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray25 = new double[] { (-1.0f), 1.0d };
        boolean boolean26 = switchingFunctionsHandler21.reset((double) (byte) 10, doubleArray25);
        boolean boolean27 = switchingFunctionsHandler21.isEmpty();
        boolean boolean28 = switchingFunctionsHandler21.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator29 = null;
        boolean boolean30 = switchingFunctionsHandler21.evaluateStep(stepInterpolator29);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator31 = null;
        boolean boolean32 = switchingFunctionsHandler21.evaluateStep(stepInterpolator31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler21.evaluateStep(stepInterpolator33);
        double double35 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        boolean boolean39 = switchingFunctionsHandler37.stop();
        boolean boolean40 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler37.evaluateStep(stepInterpolator41);
        double[] doubleArray44 = new double[] {};
        switchingFunctionsHandler37.stepAccepted(10.0d, doubleArray44);
        boolean boolean46 = switchingFunctionsHandler21.reset((double) 100.0f, doubleArray44);
        switchingFunctionsHandler0.stepAccepted((-1.0d), doubleArray44);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator48 = null;
        boolean boolean49 = switchingFunctionsHandler0.evaluateStep(stepInterpolator48);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test11779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11779");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", throwable1);
    }

    @Test
    public void test11780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11780");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) derivativeException8);
        java.lang.Throwable throwable13 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException(throwable13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), (java.lang.Throwable) functionEvaluationException16);
        derivativeException8.addSuppressed((java.lang.Throwable) functionEvaluationException18);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test11781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11781");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray10);
        java.lang.Throwable throwable27 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException(throwable27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) derivativeException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) functionEvaluationException29);
        java.lang.Object[] objArray31 = functionEvaluationException29.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", objArray31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray31);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", objArray31);
        java.lang.Object[] objArray48 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray48, (java.lang.Throwable) convergenceException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "hi!", objArray48);
        java.lang.Object[] objArray57 = functionEvaluationException56.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.FunctionEvaluationException: ", objArray57);
        integratorException37.addSuppressed((java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException58);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[10.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[10.0]");
    }

    @Test
    public void test11782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11782");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, (java.lang.Throwable) convergenceException9);
        java.lang.Object[] objArray11 = convergenceException9.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, (java.lang.Throwable) integratorException13);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException14);
        java.lang.Throwable throwable16 = null;
        // The following exception was thrown during execution in test generation
        try {
            functionEvaluationException14.addSuppressed(throwable16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test11783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11783");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray11);
        java.lang.String str16 = functionEvaluationException15.getPattern();
        java.lang.Throwable[] throwableArray17 = functionEvaluationException15.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException15);
        java.lang.Throwable[] throwableArray19 = convergenceException18.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException26);
        functionEvaluationException23.addSuppressed((java.lang.Throwable) convergenceException27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray19, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray19);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Evaluation failed for argument = 97" + "'", str16, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test11784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11784");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException14);
        java.lang.String str16 = functionEvaluationException15.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray6, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray18 = functionEvaluationException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) convergenceException19);
        double double21 = functionEvaluationException20.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException20);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str16, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test11785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11785");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        java.lang.Throwable[] throwableArray3 = functionEvaluationException2.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Throwable[] throwableArray8 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray3, (java.lang.Throwable) functionEvaluationException6);
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11786");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException7.getSuppressed();
        java.lang.Throwable[] throwableArray10 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray15 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) functionEvaluationException23);
        java.lang.String str25 = functionEvaluationException24.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) integratorException26);
        double double29 = functionEvaluationException28.getArgument();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str25, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test11787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11787");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, (java.lang.Throwable) integratorException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException17);
        double double19 = functionEvaluationException18.getArgument();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
    }

    @Test
    public void test11788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11788");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!");
        double double8 = functionEvaluationException7.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Object[] objArray10 = functionEvaluationException9.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", objArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test11789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11789");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(32.0d, (java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray16 = functionEvaluationException15.getArguments();
        java.lang.Throwable throwable21 = null;
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException(throwable21);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray29);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray29);
        integratorException22.addSuppressed((java.lang.Throwable) integratorException33);
        java.lang.Object[] objArray35 = integratorException22.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "Evaluation failed for argument = {0}", objArray35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", objArray35);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray16, (java.lang.Throwable) convergenceException38);
        java.lang.Object[] objArray40 = convergenceException38.getArguments();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
    }

    @Test
    public void test11790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11790");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11791");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray11);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test11792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11792");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray6);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", throwable11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray6, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray18 = convergenceException17.getArguments();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test11793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11793");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double double22 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double double26 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { (-1.0f), 1.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) (byte) 10, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray42 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler28.stepAccepted((double) (-1L), doubleArray42);
        boolean boolean44 = switchingFunctionsHandler24.reset((double) 100L, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) -1, doubleArray42);
        boolean boolean46 = switchingFunctionsHandler15.reset(1.0d, doubleArray42);
        switchingFunctionsHandler0.stepAccepted(Double.NaN, doubleArray42);
        boolean boolean48 = switchingFunctionsHandler0.stop();
        boolean boolean49 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, (double) 10L, (double) 0, (int) (short) 10);
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11794");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException18);
        java.lang.String str20 = functionEvaluationException19.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException24);
        java.lang.String str26 = derivativeException24.toString();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str20, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str26, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11795");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray15);
        java.lang.Throwable throwable26 = null;
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray15, throwable26);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray37, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "hi!", objArray37);
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray37);
        java.lang.Object[] objArray49 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray49);
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException(throwable52);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        derivativeException53.addSuppressed((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray49, (java.lang.Throwable) integratorException61);
        java.lang.Object[] objArray64 = integratorException61.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.DerivativeException derivativeException68 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException66);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray64, (java.lang.Throwable) derivativeException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", objArray37, (java.lang.Throwable) derivativeException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(97.0d);
        double double74 = functionEvaluationException73.getArgument();
        derivativeException69.addSuppressed((java.lang.Throwable) functionEvaluationException73);
        java.lang.Throwable[] throwableArray76 = functionEvaluationException73.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray15, (java.lang.Throwable) functionEvaluationException73);
        java.lang.Object[] objArray78 = functionEvaluationException73.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray78, (java.lang.Throwable) integratorException82);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException83);
        java.lang.String str85 = convergenceException83.getPattern();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 97.0d + "'", double74 == 97.0d);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[97.0]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: " + "'", str85, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11796");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator1 = null;
        boolean boolean2 = switchingFunctionsHandler0.evaluateStep(stepInterpolator1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler4.add(switchingFunction20, 1.0d, 10.0d, (int) 'a');
        boolean boolean25 = switchingFunctionsHandler4.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler27.stepAccepted((double) (short) 0, doubleArray33);
        boolean boolean35 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray33);
        boolean boolean36 = switchingFunctionsHandler0.reset((double) 1L, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { (-1.0f), 1.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) (byte) 10, doubleArray42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler38.evaluateStep(stepInterpolator44);
        boolean boolean46 = switchingFunctionsHandler38.stop();
        double double47 = switchingFunctionsHandler38.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        boolean boolean51 = switchingFunctionsHandler49.stop();
        boolean boolean52 = switchingFunctionsHandler49.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { (-1.0f), 1.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) (byte) 10, doubleArray58);
        double[] doubleArray65 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean66 = switchingFunctionsHandler54.reset((double) (-1), doubleArray65);
        switchingFunctionsHandler49.stepAccepted((double) 'a', doubleArray65);
        double double68 = switchingFunctionsHandler49.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray76 = new double[] { (-1.0f), 1.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) (byte) 10, doubleArray76);
        double[] doubleArray83 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean84 = switchingFunctionsHandler72.reset((double) (-1), doubleArray83);
        boolean boolean85 = switchingFunctionsHandler70.reset((double) 1L, doubleArray83);
        switchingFunctionsHandler49.stepAccepted((-1.0d), doubleArray83);
        switchingFunctionsHandler38.stepAccepted((double) 'a', doubleArray83);
        switchingFunctionsHandler0.stepAccepted((double) 10.0f, doubleArray83);
        boolean boolean89 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        switchingFunctionsHandler0.add(switchingFunction90, (double) 0.0f, (double) (-1L), 0);
        boolean boolean95 = switchingFunctionsHandler0.stop();
        double double96 = switchingFunctionsHandler0.getEventTime();
        boolean boolean97 = switchingFunctionsHandler0.isEmpty();
        double double98 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test11797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11797");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray4 = functionEvaluationException3.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        functionEvaluationException6.addSuppressed((java.lang.Throwable) convergenceException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) functionEvaluationException6);
        double double13 = functionEvaluationException12.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException12);
        double double15 = functionEvaluationException12.getArgument();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
    }

    @Test
    public void test11798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11798");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { (-1.0f), 1.0d };
        boolean boolean12 = switchingFunctionsHandler7.reset((double) (byte) 10, doubleArray11);
        double[] doubleArray18 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean19 = switchingFunctionsHandler7.reset((double) (-1), doubleArray18);
        switchingFunctionsHandler0.stepAccepted((double) (byte) -1, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray27 = new double[] { (-1.0f), 1.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) (byte) 10, doubleArray27);
        double[] doubleArray34 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean35 = switchingFunctionsHandler23.reset((double) (-1), doubleArray34);
        boolean boolean36 = switchingFunctionsHandler23.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { (-1.0f), 1.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) (byte) 10, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray52 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler38.stepAccepted((double) (-1L), doubleArray52);
        boolean boolean54 = switchingFunctionsHandler23.reset((-1.0d), doubleArray52);
        boolean boolean55 = switchingFunctionsHandler0.reset(0.0d, doubleArray52);
        boolean boolean56 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
        double double59 = switchingFunctionsHandler0.getEventTime();
        boolean boolean60 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test11799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11799");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction4 = null;
        switchingFunctionsHandler0.add(switchingFunction4, (double) 10.0f, (-1.0d), (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray16 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler10.stepAccepted((double) (short) 0, doubleArray16);
        boolean boolean18 = switchingFunctionsHandler10.isEmpty();
        boolean boolean19 = switchingFunctionsHandler10.stop();
        boolean boolean20 = switchingFunctionsHandler10.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { (-1.0f), 1.0d };
        boolean boolean27 = switchingFunctionsHandler22.reset((double) (byte) 10, doubleArray26);
        double[] doubleArray33 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean34 = switchingFunctionsHandler22.reset((double) (-1), doubleArray33);
        boolean boolean35 = switchingFunctionsHandler22.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean38 = switchingFunctionsHandler37.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler37.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler42 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double43 = switchingFunctionsHandler42.getEventTime();
        double double44 = switchingFunctionsHandler42.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double47 = switchingFunctionsHandler46.getEventTime();
        double double48 = switchingFunctionsHandler46.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray54 = new double[] { (-1.0f), 1.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) (byte) 10, doubleArray54);
        boolean boolean56 = switchingFunctionsHandler50.isEmpty();
        double[] doubleArray64 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler50.stepAccepted((double) (-1L), doubleArray64);
        boolean boolean66 = switchingFunctionsHandler46.reset((double) 100L, doubleArray64);
        switchingFunctionsHandler42.stepAccepted((double) (short) -1, doubleArray64);
        boolean boolean68 = switchingFunctionsHandler37.reset(1.0d, doubleArray64);
        switchingFunctionsHandler22.stepAccepted(Double.NaN, doubleArray64);
        boolean boolean70 = switchingFunctionsHandler10.reset((double) (-1L), doubleArray64);
        boolean boolean71 = switchingFunctionsHandler0.reset((-1.0d), doubleArray64);
        boolean boolean72 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test11800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11800");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test11801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11801");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        boolean boolean7 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { (-1.0f), 1.0d };
        boolean boolean14 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray13);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator15 = null;
        boolean boolean16 = switchingFunctionsHandler9.evaluateStep(stepInterpolator15);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler9.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler20.stepAccepted((double) (short) 0, doubleArray26);
        switchingFunctionsHandler9.stepAccepted((double) (-1.0f), doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double double32 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray38 = new double[] { (-1.0f), 1.0d };
        boolean boolean39 = switchingFunctionsHandler34.reset((double) (byte) 10, doubleArray38);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator40 = null;
        boolean boolean41 = switchingFunctionsHandler34.evaluateStep(stepInterpolator40);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray47 = new double[] { (-1.0f), 1.0d };
        boolean boolean48 = switchingFunctionsHandler43.reset((double) (byte) 10, doubleArray47);
        double[] doubleArray54 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean55 = switchingFunctionsHandler43.reset((double) (-1), doubleArray54);
        switchingFunctionsHandler34.stepAccepted(0.0d, doubleArray54);
        switchingFunctionsHandler30.stepAccepted((double) (-1L), doubleArray54);
        boolean boolean58 = switchingFunctionsHandler9.reset((double) 2, doubleArray54);
        boolean boolean59 = switchingFunctionsHandler0.reset(32.0d, doubleArray54);
        boolean boolean60 = switchingFunctionsHandler0.stop();
        boolean boolean61 = switchingFunctionsHandler0.isEmpty();
        boolean boolean62 = switchingFunctionsHandler0.isEmpty();
        double double63 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator64 = null;
        boolean boolean65 = switchingFunctionsHandler0.evaluateStep(stepInterpolator64);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler0.evaluateStep(stepInterpolator66);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator68 = null;
        boolean boolean69 = switchingFunctionsHandler0.evaluateStep(stepInterpolator68);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction70 = null;
        switchingFunctionsHandler0.add(switchingFunction70, (double) (byte) 1, (double) (-1L), 0);
        double double75 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
    }

    @Test
    public void test11802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11802");
        java.lang.Object[] objArray11 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) convergenceException15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "hi!", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray11);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException37 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray36);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray36);
        java.lang.Object[] objArray44 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray44);
        java.lang.Object[] objArray46 = integratorException45.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray36, (java.lang.Throwable) integratorException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) functionEvaluationException53);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray36, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray60 = functionEvaluationException59.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", (java.lang.Object[]) strArray36, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray11, (java.lang.Throwable) functionEvaluationException59);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", objArray11);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", objArray11);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[10.0]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test11803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11803");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test11804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11804");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11805");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray13);
        java.lang.Object[] objArray21 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray21);
        java.lang.Object[] objArray23 = integratorException22.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) integratorException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: ", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test11806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11806");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        boolean boolean8 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler10 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray14 = new double[] { (-1.0f), 1.0d };
        boolean boolean15 = switchingFunctionsHandler10.reset((double) (byte) 10, doubleArray14);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray21 = new double[] { (-1.0f), 1.0d };
        boolean boolean22 = switchingFunctionsHandler17.reset((double) (byte) 10, doubleArray21);
        double[] doubleArray28 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean29 = switchingFunctionsHandler17.reset((double) (-1), doubleArray28);
        switchingFunctionsHandler10.stepAccepted((double) (byte) -1, doubleArray28);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray28);
        boolean boolean32 = switchingFunctionsHandler0.stop();
        double double33 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction34 = null;
        switchingFunctionsHandler0.add(switchingFunction34, 10.0d, (double) 1L, 3);
        double double39 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler0.add(switchingFunction40, (-1.0d), (double) (byte) 10, 1);
        double[] doubleArray46 = null;
        boolean boolean47 = switchingFunctionsHandler0.reset((double) 10, doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test11807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11807");
        java.lang.Object[] objArray1 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray15 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) convergenceException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException17);
        java.lang.Throwable[] throwableArray24 = functionEvaluationException17.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) convergenceException26);
        java.lang.Object[] objArray29 = convergenceException26.getArguments();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException(throwable33);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        derivativeException34.addSuppressed((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException42);
        java.lang.Object[] objArray44 = integratorException42.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray44);
        java.lang.Object[] objArray47 = convergenceException46.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException", objArray29, (java.lang.Throwable) convergenceException46);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", objArray29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException54);
        java.lang.Throwable[] throwableArray56 = functionEvaluationException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", objArray29, (java.lang.Throwable) convergenceException57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray1, (java.lang.Throwable) convergenceException57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[org.apache.commons.math.ConvergenceException: hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[org.apache.commons.math.ConvergenceException: hi!]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test11808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11808");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException", strArray14);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray32);
        java.lang.Throwable[] throwableArray36 = convergenceException35.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray14, (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test11809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11809");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11810");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler11 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray15 = new double[] { (-1.0f), 1.0d };
        boolean boolean16 = switchingFunctionsHandler11.reset((double) (byte) 10, doubleArray15);
        boolean boolean17 = switchingFunctionsHandler11.isEmpty();
        boolean boolean18 = switchingFunctionsHandler11.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray24 = new double[] { (-1.0f), 1.0d };
        boolean boolean25 = switchingFunctionsHandler20.reset((double) (byte) 10, doubleArray24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler20.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler20.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray37 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler31.stepAccepted((double) (short) 0, doubleArray37);
        switchingFunctionsHandler20.stepAccepted((double) (-1.0f), doubleArray37);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double42 = switchingFunctionsHandler41.getEventTime();
        double double43 = switchingFunctionsHandler41.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler45 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray49 = new double[] { (-1.0f), 1.0d };
        boolean boolean50 = switchingFunctionsHandler45.reset((double) (byte) 10, doubleArray49);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler45.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { (-1.0f), 1.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) (byte) 10, doubleArray58);
        double[] doubleArray65 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean66 = switchingFunctionsHandler54.reset((double) (-1), doubleArray65);
        switchingFunctionsHandler45.stepAccepted(0.0d, doubleArray65);
        switchingFunctionsHandler41.stepAccepted((double) (-1L), doubleArray65);
        boolean boolean69 = switchingFunctionsHandler20.reset((double) 2, doubleArray65);
        boolean boolean70 = switchingFunctionsHandler11.reset(32.0d, doubleArray65);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray78 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler72.stepAccepted((double) (short) 0, doubleArray78);
        switchingFunctionsHandler11.stepAccepted((double) (byte) 100, doubleArray78);
        switchingFunctionsHandler0.stepAccepted((double) 2, doubleArray78);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator82 = null;
        boolean boolean83 = switchingFunctionsHandler0.evaluateStep(stepInterpolator82);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction84 = null;
        switchingFunctionsHandler0.add(switchingFunction84, 0.0d, (double) (short) 10, (int) '4');
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test11811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11811");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray7);
        java.lang.Throwable throwable16 = null;
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", throwable16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException17);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray27);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray27);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException31);
        convergenceException17.addSuppressed((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException34);
        java.lang.Throwable[] throwableArray37 = convergenceException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray7, (java.lang.Throwable) convergenceException34);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test11812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11812");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        java.lang.Class<?> wildcardClass3 = functionEvaluationException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test11813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11813");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray14);
        java.lang.String str19 = functionEvaluationException18.getPattern();
        java.lang.Throwable[] throwableArray20 = functionEvaluationException18.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "hi!", (java.lang.Object[]) throwableArray20);
        java.lang.Throwable[] throwableArray22 = functionEvaluationException21.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray22);
        java.lang.Object[] objArray34 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray34, (java.lang.Throwable) convergenceException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", objArray34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray52 = functionEvaluationException51.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException57);
        functionEvaluationException54.addSuppressed((java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray52, (java.lang.Throwable) functionEvaluationException54);
        java.lang.Object[] objArray61 = functionEvaluationException54.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("hi!", objArray61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException64 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray61);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray61);
        java.lang.Object[] objArray67 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException68 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray67);
        java.lang.Throwable[] throwableArray69 = integratorException68.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", objArray61, (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray34, (java.lang.Throwable) integratorException68);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", objArray34);
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) integratorException73);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) convergenceException74);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException75);
        java.lang.Throwable[] throwableArray78 = integratorException77.getSuppressed();
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException89 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray88);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray88);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray88);
        org.apache.commons.math.ode.DerivativeException derivativeException92 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray88);
        org.apache.commons.math.ConvergenceException convergenceException93 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray88);
        org.apache.commons.math.ode.IntegratorException integratorException94 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray88);
        org.apache.commons.math.ode.IntegratorException integratorException95 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray88);
        java.lang.Object[] objArray96 = integratorException95.getArguments();
        integratorException77.addSuppressed((java.lang.Throwable) integratorException95);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException98 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Throwable) integratorException77);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Evaluation failed for argument = 97" + "'", str19, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[97.0]");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[hi!]");
    }

    @Test
    public void test11814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11814");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException21);
        java.lang.String str23 = functionEvaluationException22.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray32, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException44);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray32, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray13);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray13, (java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str23, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10.0]");
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test11815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11815");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11816");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.Throwable[] throwableArray8 = derivativeException7.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 35", (java.lang.Object[]) throwableArray8);
        java.lang.Class<?> wildcardClass11 = functionEvaluationException10.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test11817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11817");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("", strArray7);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Convergence failed", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test11818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11818");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray17);
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray17, throwable28);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", strArray17);
        java.lang.Object[] objArray39 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray39, (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("", objArray39);
        java.lang.Throwable throwable49 = null;
        org.apache.commons.math.ode.IntegratorException integratorException50 = new org.apache.commons.math.ode.IntegratorException(throwable49);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray57);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray57);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray57);
        integratorException50.addSuppressed((java.lang.Throwable) integratorException61);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException61);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray39, (java.lang.Throwable) integratorException61);
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException(throwable65);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException70 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray69);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException70);
        org.apache.commons.math.ode.IntegratorException integratorException72 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException70);
        derivativeException66.addSuppressed((java.lang.Throwable) integratorException72);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray39, (java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", (java.lang.Object[]) strArray17);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[10.0]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test11819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11819");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray11);
        java.lang.String str19 = integratorException18.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException18);
        java.lang.Throwable[] throwableArray21 = derivativeException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray21);
        java.lang.String str23 = convergenceException22.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException24);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1" + "'", str19, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str23, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11820");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1");
    }

    @Test
    public void test11821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11821");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray10 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException9);
        derivativeException5.addSuppressed((java.lang.Throwable) functionEvaluationException9);
        java.lang.Object[] objArray13 = functionEvaluationException9.getArguments();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException23);
        functionEvaluationException21.addSuppressed((java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", objArray13, (java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray35 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray35, (java.lang.Throwable) convergenceException39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException47);
        functionEvaluationException44.addSuppressed((java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray35, (java.lang.Throwable) functionEvaluationException51);
        java.lang.Throwable[] throwableArray53 = functionEvaluationException51.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', (java.lang.Throwable) functionEvaluationException54);
        convergenceException26.addSuppressed((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ode.IntegratorException integratorException58 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) integratorException58);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException59);
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException60);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[97.0]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test11822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11822");
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        java.lang.Object[] objArray5 = convergenceException4.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Throwable) convergenceException4);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException4);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Throwable) derivativeException13);
        java.lang.Object[] objArray16 = convergenceException15.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray16);
        java.lang.Object[] objArray18 = integratorException17.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException17);
        convergenceException4.addSuppressed((java.lang.Throwable) integratorException17);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test11823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11823");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("", strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: hi!", strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 1, (java.lang.Throwable) integratorException29);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray15, (java.lang.Throwable) integratorException31);
        java.lang.String str33 = integratorException31.toString();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2" + "'", str33, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
    }

    @Test
    public void test11824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11824");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.stop();
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler0.add(switchingFunction18, 97.0d, 52.0d, (int) (byte) -1);
        boolean boolean23 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = switchingFunctionsHandler0.evaluateStep(stepInterpolator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test11825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11825");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Object[] objArray9 = functionEvaluationException7.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException14);
        java.lang.Throwable[] throwableArray16 = functionEvaluationException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = functionEvaluationException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray22 = functionEvaluationException21.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException27);
        functionEvaluationException24.addSuppressed((java.lang.Throwable) convergenceException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray22, (java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) functionEvaluationException30);
        java.lang.String str32 = functionEvaluationException31.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray9, (java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException37);
        java.lang.String str39 = functionEvaluationException38.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException47);
        java.lang.Throwable[] throwableArray49 = functionEvaluationException47.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray49);
        java.lang.Throwable[] throwableArray52 = integratorException51.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray52);
        java.lang.String str54 = convergenceException53.getPattern();
        functionEvaluationException40.addSuppressed((java.lang.Throwable) convergenceException53);
        java.lang.Throwable[] throwableArray56 = functionEvaluationException40.getSuppressed();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str32, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97" + "'", str39, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str54, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test11826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11826");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
    }

    @Test
    public void test11827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11827");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.isEmpty();
        double double11 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { (-1.0f), 1.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray24 = new double[] { (-1.0f), 1.0d };
        boolean boolean25 = switchingFunctionsHandler20.reset((double) (byte) 10, doubleArray24);
        double[] doubleArray31 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean32 = switchingFunctionsHandler20.reset((double) (-1), doubleArray31);
        switchingFunctionsHandler13.stepAccepted((double) (byte) -1, doubleArray31);
        switchingFunctionsHandler0.stepAccepted((double) 0, doubleArray31);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray40 = new double[] { (-1.0f), 1.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) (byte) 10, doubleArray40);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator42 = null;
        boolean boolean43 = switchingFunctionsHandler36.evaluateStep(stepInterpolator42);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator44 = null;
        boolean boolean45 = switchingFunctionsHandler36.evaluateStep(stepInterpolator44);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray53 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler47.stepAccepted((double) (short) 0, doubleArray53);
        switchingFunctionsHandler36.stepAccepted((double) (-1.0f), doubleArray53);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double58 = switchingFunctionsHandler57.getEventTime();
        double double59 = switchingFunctionsHandler57.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler61 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray65 = new double[] { (-1.0f), 1.0d };
        boolean boolean66 = switchingFunctionsHandler61.reset((double) (byte) 10, doubleArray65);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator67 = null;
        boolean boolean68 = switchingFunctionsHandler61.evaluateStep(stepInterpolator67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler70 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray74 = new double[] { (-1.0f), 1.0d };
        boolean boolean75 = switchingFunctionsHandler70.reset((double) (byte) 10, doubleArray74);
        double[] doubleArray81 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean82 = switchingFunctionsHandler70.reset((double) (-1), doubleArray81);
        switchingFunctionsHandler61.stepAccepted(0.0d, doubleArray81);
        switchingFunctionsHandler57.stepAccepted((double) (-1L), doubleArray81);
        boolean boolean85 = switchingFunctionsHandler36.reset((double) 2, doubleArray81);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray81);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction87 = null;
        switchingFunctionsHandler0.add(switchingFunction87, (double) '#', (double) 3, (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction92 = null;
        switchingFunctionsHandler0.add(switchingFunction92, (double) 10L, (double) 0L, (int) (short) 100);
        java.lang.Class<?> wildcardClass97 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test11828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11828");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray9);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException26);
        java.lang.String str28 = functionEvaluationException27.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray18, (java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray30 = functionEvaluationException27.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray30, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray9);
        java.lang.Throwable throwable41 = null;
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException(throwable41);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray49);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray49);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray49);
        integratorException42.addSuppressed((java.lang.Throwable) integratorException53);
        java.lang.Object[] objArray55 = integratorException42.getArguments();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray62);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray62);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray55, (java.lang.Throwable) derivativeException66);
        java.lang.Throwable[] throwableArray68 = derivativeException66.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) derivativeException66);
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 35", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str28, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test11829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11829");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) derivativeException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) derivativeException7);
    }

    @Test
    public void test11830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11830");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (byte) -1, (double) (short) -1, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler7 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray11 = new double[] { (-1.0f), 1.0d };
        boolean boolean12 = switchingFunctionsHandler7.reset((double) (byte) 10, doubleArray11);
        boolean boolean13 = switchingFunctionsHandler7.isEmpty();
        boolean boolean14 = switchingFunctionsHandler7.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray20 = new double[] { (-1.0f), 1.0d };
        boolean boolean21 = switchingFunctionsHandler16.reset((double) (byte) 10, doubleArray20);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator22 = null;
        boolean boolean23 = switchingFunctionsHandler16.evaluateStep(stepInterpolator22);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler16.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler27.stepAccepted((double) (short) 0, doubleArray33);
        switchingFunctionsHandler16.stepAccepted((double) (-1.0f), doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double38 = switchingFunctionsHandler37.getEventTime();
        double double39 = switchingFunctionsHandler37.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler41 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray45 = new double[] { (-1.0f), 1.0d };
        boolean boolean46 = switchingFunctionsHandler41.reset((double) (byte) 10, doubleArray45);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator47 = null;
        boolean boolean48 = switchingFunctionsHandler41.evaluateStep(stepInterpolator47);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler50 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray54 = new double[] { (-1.0f), 1.0d };
        boolean boolean55 = switchingFunctionsHandler50.reset((double) (byte) 10, doubleArray54);
        double[] doubleArray61 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean62 = switchingFunctionsHandler50.reset((double) (-1), doubleArray61);
        switchingFunctionsHandler41.stepAccepted(0.0d, doubleArray61);
        switchingFunctionsHandler37.stepAccepted((double) (-1L), doubleArray61);
        boolean boolean65 = switchingFunctionsHandler16.reset((double) 2, doubleArray61);
        boolean boolean66 = switchingFunctionsHandler7.reset(32.0d, doubleArray61);
        boolean boolean67 = switchingFunctionsHandler0.reset((double) 3, doubleArray61);
        boolean boolean68 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction69 = null;
        switchingFunctionsHandler0.add(switchingFunction69, (double) 0, (double) 100.0f, (int) (short) 1);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = switchingFunctionsHandler0.evaluateStep(stepInterpolator74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test11831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11831");
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", throwable10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("", throwable10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", throwable10);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException(throwable10);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException14);
        java.lang.Throwable[] throwableArray17 = convergenceException14.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException");
        java.lang.Object[] objArray21 = convergenceException20.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray30 = functionEvaluationException29.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException35);
        functionEvaluationException32.addSuppressed((java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) functionEvaluationException32);
        java.lang.Object[] objArray39 = functionEvaluationException32.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!", objArray39);
        java.lang.Object[] objArray44 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray44, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("", objArray39, (java.lang.Throwable) convergenceException48);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray56);
        java.lang.Throwable[] throwableArray60 = convergenceException59.getSuppressed();
        convergenceException48.addSuppressed((java.lang.Throwable) convergenceException59);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException48);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException71 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray70);
        org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray70);
        java.lang.Throwable[] throwableArray74 = convergenceException73.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) convergenceException73);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException82 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray81);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException83);
        java.lang.String str85 = convergenceException83.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException(10.0d, (java.lang.Throwable) convergenceException83);
        double double87 = functionEvaluationException86.getArgument();
        double double88 = functionEvaluationException86.getArgument();
        convergenceException73.addSuppressed((java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.ode.IntegratorException integratorException91 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException90);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[97.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[10.0]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str85, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 10.0d + "'", double87 == 10.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 10.0d + "'", double88 == 10.0d);
    }

    @Test
    public void test11832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11832");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("", strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray11);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray11);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test11833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11833");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator9 = null;
        boolean boolean10 = switchingFunctionsHandler3.evaluateStep(stepInterpolator9);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler12 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray16 = new double[] { (-1.0f), 1.0d };
        boolean boolean17 = switchingFunctionsHandler12.reset((double) (byte) 10, doubleArray16);
        double[] doubleArray23 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean24 = switchingFunctionsHandler12.reset((double) (-1), doubleArray23);
        switchingFunctionsHandler3.stepAccepted(0.0d, doubleArray23);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray23);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean29 = switchingFunctionsHandler28.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator30 = null;
        boolean boolean31 = switchingFunctionsHandler28.evaluateStep(stepInterpolator30);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray37 = new double[] { (-1.0f), 1.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) (byte) 10, doubleArray37);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator39 = null;
        boolean boolean40 = switchingFunctionsHandler33.evaluateStep(stepInterpolator39);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator41 = null;
        boolean boolean42 = switchingFunctionsHandler33.evaluateStep(stepInterpolator41);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction43 = null;
        switchingFunctionsHandler33.add(switchingFunction43, (double) (short) 100, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler49 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double50 = switchingFunctionsHandler49.getEventTime();
        double double51 = switchingFunctionsHandler49.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray57 = new double[] { (-1.0f), 1.0d };
        boolean boolean58 = switchingFunctionsHandler53.reset((double) (byte) 10, doubleArray57);
        boolean boolean59 = switchingFunctionsHandler53.isEmpty();
        double[] doubleArray67 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler53.stepAccepted((double) (-1L), doubleArray67);
        boolean boolean69 = switchingFunctionsHandler49.reset((double) 100L, doubleArray67);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double72 = switchingFunctionsHandler71.getEventTime();
        double double73 = switchingFunctionsHandler71.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler75 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray79 = new double[] { (-1.0f), 1.0d };
        boolean boolean80 = switchingFunctionsHandler75.reset((double) (byte) 10, doubleArray79);
        boolean boolean81 = switchingFunctionsHandler75.isEmpty();
        double[] doubleArray89 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler75.stepAccepted((double) (-1L), doubleArray89);
        boolean boolean91 = switchingFunctionsHandler71.reset((double) 100L, doubleArray89);
        boolean boolean92 = switchingFunctionsHandler49.reset((double) 100.0f, doubleArray89);
        boolean boolean93 = switchingFunctionsHandler33.reset((double) (byte) 100, doubleArray89);
        switchingFunctionsHandler28.stepAccepted((double) 100.0f, doubleArray89);
        boolean boolean95 = switchingFunctionsHandler0.reset((double) 2, doubleArray89);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator96 = null;
        boolean boolean97 = switchingFunctionsHandler0.evaluateStep(stepInterpolator96);
        boolean boolean98 = switchingFunctionsHandler0.stop();
        double double99 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double99));
    }

    @Test
    public void test11834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11834");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException14);
        java.lang.String str16 = functionEvaluationException15.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray6, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray18 = functionEvaluationException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) convergenceException19);
        double double21 = functionEvaluationException20.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException20);
        java.lang.String str23 = derivativeException22.getPattern();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str16, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2" + "'", str23, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
    }

    @Test
    public void test11835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11835");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = functionEvaluationException6.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray14 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray23 = functionEvaluationException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException16);
        derivativeException9.addSuppressed((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "");
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) derivativeException32);
        double double34 = functionEvaluationException33.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException33);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
    }

    @Test
    public void test11836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11836");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        double[] doubleArray14 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean15 = switchingFunctionsHandler3.reset((double) (-1), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset(97.0d, doubleArray14);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator18 = null;
        boolean boolean19 = switchingFunctionsHandler0.evaluateStep(stepInterpolator18);
        boolean boolean20 = switchingFunctionsHandler0.stop();
        boolean boolean21 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) (byte) 1, (double) (-1), 3);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction27 = null;
        switchingFunctionsHandler0.add(switchingFunction27, 0.0d, (double) 0.0f, (int) ' ');
        boolean boolean32 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test11837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11837");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double double18 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray24 = new double[] { (-1.0f), 1.0d };
        boolean boolean25 = switchingFunctionsHandler20.reset((double) (byte) 10, doubleArray24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler20.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { (-1.0f), 1.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) (byte) 10, doubleArray33);
        double[] doubleArray40 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean41 = switchingFunctionsHandler29.reset((double) (-1), doubleArray40);
        switchingFunctionsHandler20.stepAccepted(0.0d, doubleArray40);
        switchingFunctionsHandler16.stepAccepted((double) (-1L), doubleArray40);
        switchingFunctionsHandler0.stepAccepted(97.0d, doubleArray40);
        boolean boolean45 = switchingFunctionsHandler0.stop();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        boolean boolean47 = switchingFunctionsHandler0.isEmpty();
        boolean boolean48 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction49 = null;
        switchingFunctionsHandler0.add(switchingFunction49, (double) (short) 100, (double) 3, (int) (short) 1);
        boolean boolean54 = switchingFunctionsHandler0.isEmpty();
        java.lang.Class<?> wildcardClass55 = switchingFunctionsHandler0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test11838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11838");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        double double17 = switchingFunctionsHandler0.getEventTime();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        boolean boolean22 = switchingFunctionsHandler20.stop();
        boolean boolean23 = switchingFunctionsHandler20.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray29 = new double[] { (-1.0f), 1.0d };
        boolean boolean30 = switchingFunctionsHandler25.reset((double) (byte) 10, doubleArray29);
        double[] doubleArray36 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean37 = switchingFunctionsHandler25.reset((double) (-1), doubleArray36);
        switchingFunctionsHandler20.stepAccepted((double) 'a', doubleArray36);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 1, doubleArray36);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler0.add(switchingFunction40, (double) '4', 0.0d, 10);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction45 = null;
        switchingFunctionsHandler0.add(switchingFunction45, (double) 0.0f, 0.0d, (int) (short) 100);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction50 = null;
        switchingFunctionsHandler0.add(switchingFunction50, (double) ' ', (double) 1.0f, (int) (short) 1);
        boolean boolean55 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test11839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11839");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        boolean boolean8 = switchingFunctionsHandler0.isEmpty();
        boolean boolean9 = switchingFunctionsHandler0.stop();
        boolean boolean10 = switchingFunctionsHandler0.stop();
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test11840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11840");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException5);
        java.lang.Throwable[] throwableArray7 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray7);
        java.lang.Object[] objArray14 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray14, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", objArray14);
        convergenceException8.addSuppressed((java.lang.Throwable) functionEvaluationException20);
        double double22 = functionEvaluationException20.getArgument();
        java.lang.String str23 = functionEvaluationException20.getPattern();
        java.lang.Object[] objArray24 = functionEvaluationException20.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        java.lang.Throwable[] throwableArray29 = functionEvaluationException28.getSuppressed();
        java.lang.String str30 = functionEvaluationException28.getPattern();
        double double31 = functionEvaluationException28.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray33 = functionEvaluationException28.getArguments();
        convergenceException25.addSuppressed((java.lang.Throwable) functionEvaluationException28);
        java.lang.String str35 = functionEvaluationException28.getPattern();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[10.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Evaluation failed for argument = {0}" + "'", str30, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.0d + "'", double31 == 2.0d);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[2.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[2.0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Evaluation failed for argument = {0}" + "'", str35, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test11841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11841");
        java.lang.Object[] objArray4 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray4);
        java.lang.Throwable throwable7 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException(throwable7);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        derivativeException8.addSuppressed((java.lang.Throwable) integratorException14);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray4, (java.lang.Throwable) integratorException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray4, (java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray25 = functionEvaluationException24.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException26);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
    }

    @Test
    public void test11842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11842");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, throwable1);
        double double3 = functionEvaluationException2.getArgument();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test11843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11843");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException8);
        java.lang.Object[] objArray10 = functionEvaluationException8.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException15.getSuppressed();
        java.lang.Throwable[] throwableArray18 = functionEvaluationException15.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray23 = functionEvaluationException22.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException28);
        functionEvaluationException25.addSuppressed((java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray23, (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) functionEvaluationException31);
        java.lang.String str33 = functionEvaluationException32.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray10, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException38);
        java.lang.String str40 = functionEvaluationException39.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: hi!", objArray10, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray51 = functionEvaluationException50.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException56);
        functionEvaluationException53.addSuppressed((java.lang.Throwable) convergenceException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray51, (java.lang.Throwable) functionEvaluationException53);
        java.lang.Throwable[] throwableArray60 = functionEvaluationException53.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray60);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.ode.DerivativeException derivativeException65 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException62);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", objArray10, (java.lang.Throwable) convergenceException62);
        org.apache.commons.math.ode.IntegratorException integratorException67 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException66);
        org.apache.commons.math.ConvergenceException convergenceException68 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException67);
        org.apache.commons.math.ode.DerivativeException derivativeException69 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException68);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException74 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray73);
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException74);
        org.apache.commons.math.ode.IntegratorException integratorException76 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray79 = functionEvaluationException78.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException80 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException78);
        derivativeException74.addSuppressed((java.lang.Throwable) functionEvaluationException78);
        org.apache.commons.math.ode.IntegratorException integratorException82 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException74);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException82);
        org.apache.commons.math.ode.DerivativeException derivativeException84 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException83);
        org.apache.commons.math.ode.IntegratorException integratorException85 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException84);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException86);
        convergenceException68.addSuppressed((java.lang.Throwable) convergenceException87);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str33, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97" + "'", str40, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(throwableArray79);
    }

    @Test
    public void test11844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11844");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray4 = functionEvaluationException3.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException3);
        java.lang.Throwable[] throwableArray7 = functionEvaluationException3.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException24);
        functionEvaluationException21.addSuppressed((java.lang.Throwable) convergenceException25);
        java.lang.Object[] objArray28 = new java.lang.Object[] { (byte) 1, functionEvaluationException21, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray28);
        java.lang.Throwable[] throwableArray30 = functionEvaluationException29.getSuppressed();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException(throwable33);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        derivativeException34.addSuppressed((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException42);
        java.lang.Object[] objArray44 = integratorException42.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", objArray44);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) convergenceException45);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray53);
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray59);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException61);
        java.lang.String str63 = functionEvaluationException62.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray53, (java.lang.Throwable) functionEvaluationException62);
        java.lang.Object[] objArray65 = functionEvaluationException62.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException69 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.ConvergenceException convergenceException70 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Throwable) integratorException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray65, (java.lang.Throwable) convergenceException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException81);
        functionEvaluationException78.addSuppressed((java.lang.Throwable) convergenceException82);
        java.lang.Object[] objArray85 = new java.lang.Object[] { (byte) 1, functionEvaluationException78, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray85);
        java.lang.Throwable[] throwableArray87 = functionEvaluationException86.getSuppressed();
        java.lang.String str88 = functionEvaluationException86.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray30, (java.lang.Throwable) functionEvaluationException86);
        org.apache.commons.math.ode.IntegratorException integratorException90 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.ConvergenceException convergenceException91 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) integratorException90);
        org.apache.commons.math.ode.IntegratorException integratorException92 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException91);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) convergenceException91);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str63, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test11845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11845");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray10);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray21);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray27 = functionEvaluationException26.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException26);
        derivativeException22.addSuppressed((java.lang.Throwable) functionEvaluationException26);
        java.lang.Object[] objArray30 = functionEvaluationException26.getArguments();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException40);
        functionEvaluationException38.addSuppressed((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", objArray30, (java.lang.Throwable) functionEvaluationException40);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException52 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray51);
        org.apache.commons.math.ode.IntegratorException integratorException56 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException55);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException60 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray10, (java.lang.Throwable) convergenceException60);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException64);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[97.0]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test11846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11846");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "");
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException(1.0d, (java.lang.Throwable) functionEvaluationException7);
        double double10 = functionEvaluationException7.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException12);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
    }

    @Test
    public void test11847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11847");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException(throwable4);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException13);
        java.lang.Object[] objArray15 = integratorException13.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: ", objArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException17);
        java.lang.String str19 = integratorException18.getPattern();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str19, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11848");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray10);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test11849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11849");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray16);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray16, (java.lang.Throwable) derivativeException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException34);
        java.lang.Throwable[] throwableArray36 = functionEvaluationException34.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException37);
        java.lang.String str39 = convergenceException37.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException37);
        java.lang.Object[] objArray41 = functionEvaluationException40.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray16, (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, (java.lang.Throwable) functionEvaluationException40);
        java.lang.String str48 = functionEvaluationException47.getPattern();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Evaluation failed for argument = 97" + "'", str48, "Evaluation failed for argument = 97");
    }

    @Test
    public void test11850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11850");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException5);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException6);
    }

    @Test
    public void test11851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11851");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray10 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        functionEvaluationException12.addSuppressed((java.lang.Throwable) convergenceException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) functionEvaluationException12);
        java.lang.Object[] objArray19 = functionEvaluationException12.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray19, (java.lang.Throwable) functionEvaluationException24);
        double double26 = functionEvaluationException24.getArgument();
        double double27 = functionEvaluationException24.getArgument();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[97.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test11852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11852");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = functionEvaluationException6.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, (java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray11 = functionEvaluationException9.getSuppressed();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11853");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", strArray6);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException10);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test11854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11854");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException5);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        java.lang.String str8 = functionEvaluationException6.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) convergenceException20);
        java.lang.Object[] objArray23 = new java.lang.Object[] { (byte) 1, functionEvaluationException16, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray23);
        java.lang.Throwable[] throwableArray25 = functionEvaluationException24.getSuppressed();
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException(throwable28);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException33);
        derivativeException29.addSuppressed((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException35);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException37);
        java.lang.Object[] objArray39 = integratorException37.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("", objArray39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) convergenceException40);
        derivativeException10.addSuppressed((java.lang.Throwable) convergenceException41);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: " + "'", str8, "org.apache.commons.math.FunctionEvaluationException: ");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test11855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11855");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException15);
        java.lang.String str17 = functionEvaluationException16.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray7, (java.lang.Throwable) functionEvaluationException16);
        java.lang.Object[] objArray19 = functionEvaluationException16.getArguments();
        java.lang.Object[] objArray26 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray26, (java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray26);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray38);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray26, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException48);
        java.lang.Throwable[] throwableArray50 = functionEvaluationException48.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException51);
        java.lang.String str53 = convergenceException51.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException51);
        convergenceException41.addSuppressed((java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray19, (java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException58);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException58);
        java.lang.Object[] objArray61 = derivativeException60.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException60);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str17, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[10.0]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
    }

    @Test
    public void test11856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11856");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException13);
        functionEvaluationException10.addSuppressed((java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException10);
        java.lang.String str17 = functionEvaluationException10.getPattern();
        java.lang.String str18 = functionEvaluationException10.getPattern();
        java.lang.Object[] objArray19 = functionEvaluationException10.getArguments();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray25, (java.lang.Throwable) convergenceException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException37);
        functionEvaluationException34.addSuppressed((java.lang.Throwable) convergenceException38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray25, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "hi!", objArray19, (java.lang.Throwable) functionEvaluationException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "", objArray19, (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", objArray19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray61 = functionEvaluationException60.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException66 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException66);
        functionEvaluationException63.addSuppressed((java.lang.Throwable) convergenceException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray61, (java.lang.Throwable) functionEvaluationException63);
        java.lang.Object[] objArray70 = functionEvaluationException63.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException71 = new org.apache.commons.math.ConvergenceException("hi!", objArray70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray70);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray70);
        org.apache.commons.math.ode.IntegratorException integratorException74 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray70);
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Throwable) integratorException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", objArray19, (java.lang.Throwable) convergenceException75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 35", objArray19);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException77);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Evaluation failed for argument = {0}" + "'", str17, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Evaluation failed for argument = {0}" + "'", str18, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[97.0]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[97.0]");
    }

    @Test
    public void test11857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11857");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11858");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException11);
        java.lang.Object[] objArray13 = convergenceException12.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray25 = functionEvaluationException24.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException30);
        functionEvaluationException27.addSuppressed((java.lang.Throwable) convergenceException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray25, (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException33);
        java.lang.Throwable[] throwableArray35 = functionEvaluationException33.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.ode.IntegratorException integratorException38 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray35);
        java.lang.Throwable[] throwableArray40 = functionEvaluationException39.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray13, (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException39);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test11859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11859");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN);
        double double2 = functionEvaluationException1.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException1);
        java.lang.Object[] objArray9 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray9);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException(throwable12);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException13.addSuppressed((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) integratorException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray9, (java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = functionEvaluationException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray30);
        derivativeException3.addSuppressed((java.lang.Throwable) integratorException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException3);
        java.lang.Throwable[] throwableArray34 = derivativeException3.getSuppressed();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test11860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11860");
        java.lang.Object[] objArray22 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray22, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "hi!", objArray22);
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException36);
        java.lang.Object[] objArray38 = integratorException37.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = 97", objArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", objArray38);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: hi!", objArray22, (java.lang.Throwable) integratorException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "org.apache.commons.math.ode.IntegratorException: hi!", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException48);
        functionEvaluationException45.addSuppressed((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException45);
        java.lang.String str52 = functionEvaluationException45.getPattern();
        java.lang.String str53 = functionEvaluationException45.getPattern();
        java.lang.String str54 = functionEvaluationException45.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.DerivativeException", objArray22, (java.lang.Throwable) functionEvaluationException45);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) derivativeException62);
        java.lang.Throwable[] throwableArray64 = derivativeException62.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray22, (java.lang.Throwable) functionEvaluationException65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException68);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) functionEvaluationException68);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10.0]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Evaluation failed for argument = {0}" + "'", str52, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Evaluation failed for argument = {0}" + "'", str53, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Evaluation failed for argument = {0}" + "'", str54, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test11861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11861");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray8);
        java.lang.Throwable throwable10 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "", objArray8, throwable10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray8);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test11862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11862");
        java.lang.String[] strArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ode.DerivativeException derivativeException2 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11863");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException(0.0d);
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException1);
        java.lang.Throwable[] throwableArray3 = functionEvaluationException1.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException4 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException1);
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test11864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11864");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1);
        double double6 = functionEvaluationException5.getArgument();
        double double7 = functionEvaluationException5.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(1.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException10);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.0d) + "'", double6 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test11865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11865");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        boolean boolean3 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler5 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray9 = new double[] { (-1.0f), 1.0d };
        boolean boolean10 = switchingFunctionsHandler5.reset((double) (byte) 10, doubleArray9);
        double[] doubleArray16 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean17 = switchingFunctionsHandler5.reset((double) (-1), doubleArray16);
        switchingFunctionsHandler0.stepAccepted((double) 'a', doubleArray16);
        double double19 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler23 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray27 = new double[] { (-1.0f), 1.0d };
        boolean boolean28 = switchingFunctionsHandler23.reset((double) (byte) 10, doubleArray27);
        double[] doubleArray34 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean35 = switchingFunctionsHandler23.reset((double) (-1), doubleArray34);
        boolean boolean36 = switchingFunctionsHandler21.reset((double) 1L, doubleArray34);
        switchingFunctionsHandler0.stepAccepted((-1.0d), doubleArray34);
        double double38 = switchingFunctionsHandler0.getEventTime();
        boolean boolean39 = switchingFunctionsHandler0.stop();
        double[] doubleArray41 = null;
        switchingFunctionsHandler0.stepAccepted(3.0d, doubleArray41);
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test11866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11866");
        java.lang.Object[] objArray8 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray8);
        java.lang.Throwable throwable11 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException(throwable11);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        derivativeException12.addSuppressed((java.lang.Throwable) integratorException18);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException18);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray8, (java.lang.Throwable) integratorException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray8, (java.lang.Throwable) functionEvaluationException27);
        java.lang.Object[] objArray29 = functionEvaluationException28.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray29);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException44 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray40);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray40);
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray40);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", objArray29, (java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException48);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException48);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test11867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11867");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray11);
        java.lang.Object[] objArray19 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray19);
        java.lang.Object[] objArray21 = integratorException20.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray11, (java.lang.Throwable) integratorException20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException23);
        java.lang.String str25 = derivativeException24.getPattern();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException" + "'", str25, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException");
    }

    @Test
    public void test11868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11868");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction10 = null;
        switchingFunctionsHandler0.add(switchingFunction10, (double) (short) 100, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction15 = null;
        switchingFunctionsHandler0.add(switchingFunction15, 35.0d, (double) 100L, (int) (byte) 1);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, (double) (byte) -1, (double) 0L, (int) ' ');
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = switchingFunctionsHandler0.evaluateStep(stepInterpolator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test11869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11869");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException1);
    }

    @Test
    public void test11870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11870");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (byte) 100, (double) (-1), (int) (byte) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) (short) 0, (double) (short) 0, (int) '#');
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler0.add(switchingFunction11, (double) 10, (double) 1, 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction18 = null;
        switchingFunctionsHandler17.add(switchingFunction18, (double) 'a', (double) (short) 100, (int) (byte) 10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray28 = new double[] { (-1.0f), 1.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) (byte) 10, doubleArray28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray35 = new double[] { (-1.0f), 1.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) (byte) 10, doubleArray35);
        double[] doubleArray42 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean43 = switchingFunctionsHandler31.reset((double) (-1), doubleArray42);
        switchingFunctionsHandler24.stepAccepted((double) (byte) -1, doubleArray42);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray52 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler46.stepAccepted((double) (short) 0, doubleArray52);
        boolean boolean54 = switchingFunctionsHandler24.reset((double) 10L, doubleArray52);
        double double55 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler57 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean58 = switchingFunctionsHandler57.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler60 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray64 = new double[] { (-1.0f), 1.0d };
        boolean boolean65 = switchingFunctionsHandler60.reset((double) (byte) 10, doubleArray64);
        double[] doubleArray71 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean72 = switchingFunctionsHandler60.reset((double) (-1), doubleArray71);
        boolean boolean73 = switchingFunctionsHandler57.reset(97.0d, doubleArray71);
        boolean boolean74 = switchingFunctionsHandler57.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator75 = null;
        boolean boolean76 = switchingFunctionsHandler57.evaluateStep(stepInterpolator75);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler78 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray84 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler78.stepAccepted((double) (short) 0, doubleArray84);
        switchingFunctionsHandler57.stepAccepted(0.0d, doubleArray84);
        boolean boolean87 = switchingFunctionsHandler24.reset((double) 3, doubleArray84);
        boolean boolean88 = switchingFunctionsHandler17.reset((double) (byte) 1, doubleArray84);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) 2, doubleArray84);
        boolean boolean90 = switchingFunctionsHandler0.stop();
        boolean boolean91 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test11871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11871");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Throwable[] throwableArray8 = functionEvaluationException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = functionEvaluationException6.getSuppressed();
        java.lang.Throwable[] throwableArray10 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray10);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97");
        integratorException12.addSuppressed((java.lang.Throwable) convergenceException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, (java.lang.Throwable) convergenceException14);
        java.lang.Object[] objArray17 = convergenceException14.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException14);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
    }

    @Test
    public void test11872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11872");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ");
    }

    @Test
    public void test11873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11873");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray17 = functionEvaluationException16.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException16);
        derivativeException12.addSuppressed((java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray20 = derivativeException12.getSuppressed();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException31 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray30);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray30, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray20, (java.lang.Throwable) functionEvaluationException38);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException46);
        java.lang.Object[] objArray48 = convergenceException47.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", objArray48);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException50);
        functionEvaluationException40.addSuppressed((java.lang.Throwable) derivativeException51);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) integratorException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(52.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException54);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray58 = convergenceException57.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException57);
        double double60 = functionEvaluationException59.getArgument();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.0d + "'", double60 == 100.0d);
    }

    @Test
    public void test11874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11874");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray4 = functionEvaluationException3.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        functionEvaluationException7.addSuppressed((java.lang.Throwable) convergenceException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) functionEvaluationException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException15);
        java.lang.Object[] objArray17 = convergenceException15.getArguments();
        java.lang.Object[] objArray18 = convergenceException15.getArguments();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test11875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11875");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test11876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11876");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3");
    }

    @Test
    public void test11877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11877");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException14);
        java.lang.String str16 = functionEvaluationException15.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray6, (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException17);
        java.lang.Object[] objArray19 = functionEvaluationException17.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray19);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str16, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[hi!]");
    }

    @Test
    public void test11878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11878");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.DerivativeException: hi!", objArray8);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException9);
        java.lang.String str12 = functionEvaluationException11.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97" + "'", str12, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11879");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "Evaluation failed for argument = {0}");
        double double3 = functionEvaluationException2.getArgument();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
    }

    @Test
    public void test11880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11880");
        java.lang.Object[] objArray2 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray2);
        java.lang.Throwable[] throwableArray4 = integratorException3.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException3);
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException5);
        java.lang.Object[] objArray8 = convergenceException7.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException10);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test11881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11881");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        double[] doubleArray14 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean15 = switchingFunctionsHandler3.reset((double) (-1), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset(97.0d, doubleArray14);
        boolean boolean17 = switchingFunctionsHandler0.isEmpty();
        double double18 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator21 = null;
        boolean boolean22 = switchingFunctionsHandler20.evaluateStep(stepInterpolator21);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray28 = new double[] { (-1.0f), 1.0d };
        boolean boolean29 = switchingFunctionsHandler24.reset((double) (byte) 10, doubleArray28);
        boolean boolean30 = switchingFunctionsHandler24.isEmpty();
        double[] doubleArray38 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler24.stepAccepted((double) (-1L), doubleArray38);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction40 = null;
        switchingFunctionsHandler24.add(switchingFunction40, 1.0d, 10.0d, (int) 'a');
        boolean boolean45 = switchingFunctionsHandler24.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray53 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler47.stepAccepted((double) (short) 0, doubleArray53);
        boolean boolean55 = switchingFunctionsHandler24.reset((double) (byte) 10, doubleArray53);
        boolean boolean56 = switchingFunctionsHandler20.reset((double) 1L, doubleArray53);
        boolean boolean57 = switchingFunctionsHandler0.reset((-1.0d), doubleArray53);
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        boolean boolean59 = switchingFunctionsHandler0.isEmpty();
        boolean boolean60 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator61 = null;
        boolean boolean62 = switchingFunctionsHandler0.evaluateStep(stepInterpolator61);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test11882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11882");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        boolean boolean15 = switchingFunctionsHandler0.isEmpty();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler0.evaluateStep(stepInterpolator17);
        boolean boolean19 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction20 = null;
        switchingFunctionsHandler0.add(switchingFunction20, 100.0d, 35.0d, (int) (short) 1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test11883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11883");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException((double) 2);
        java.lang.Throwable[] throwableArray2 = functionEvaluationException1.getSuppressed();
        java.lang.String str3 = functionEvaluationException1.getPattern();
        double double4 = functionEvaluationException1.getArgument();
        java.lang.Object[] objArray5 = functionEvaluationException1.getArguments();
        double double6 = functionEvaluationException1.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException1);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException1);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Evaluation failed for argument = {0}" + "'", str3, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[2.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[2.0]");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.0d + "'", double6 == 2.0d);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test11884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11884");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray9 = functionEvaluationException8.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException14);
        functionEvaluationException11.addSuppressed((java.lang.Throwable) convergenceException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) functionEvaluationException11);
        java.lang.Throwable[] throwableArray18 = functionEvaluationException11.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, "", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException21);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test11885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11885");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Throwable[] throwableArray6 = functionEvaluationException4.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException8);
        java.lang.String str10 = convergenceException9.getPattern();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException9);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException("", strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.IntegratorException integratorException39 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ode.DerivativeException derivativeException41 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray32);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray32);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Throwable) convergenceException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException43);
        java.lang.Object[] objArray51 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray51);
        java.lang.Throwable throwable54 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException55 = new org.apache.commons.math.ode.DerivativeException(throwable54);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException59 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray58);
        org.apache.commons.math.ode.DerivativeException derivativeException60 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException59);
        derivativeException55.addSuppressed((java.lang.Throwable) integratorException61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException61);
        org.apache.commons.math.ConvergenceException convergenceException64 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray51, (java.lang.Throwable) integratorException63);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException69 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray51, (java.lang.Throwable) functionEvaluationException70);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, (java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.ode.IntegratorException integratorException73 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException71);
        convergenceException43.addSuppressed((java.lang.Throwable) functionEvaluationException71);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException43);
        derivativeException11.addSuppressed((java.lang.Throwable) convergenceException43);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(strArray58);
    }

    @Test
    public void test11886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11886");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler2 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { (-1.0f), 1.0d };
        boolean boolean7 = switchingFunctionsHandler2.reset((double) (byte) 10, doubleArray6);
        double[] doubleArray13 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean14 = switchingFunctionsHandler2.reset((double) (-1), doubleArray13);
        boolean boolean15 = switchingFunctionsHandler0.reset((double) 1L, doubleArray13);
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        double double17 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler19 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray23 = new double[] { (-1.0f), 1.0d };
        boolean boolean24 = switchingFunctionsHandler19.reset((double) (byte) 10, doubleArray23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler19.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator27 = null;
        boolean boolean28 = switchingFunctionsHandler19.evaluateStep(stepInterpolator27);
        double double29 = switchingFunctionsHandler19.getEventTime();
        boolean boolean30 = switchingFunctionsHandler19.isEmpty();
        boolean boolean31 = switchingFunctionsHandler19.isEmpty();
        double double32 = switchingFunctionsHandler19.getEventTime();
        boolean boolean33 = switchingFunctionsHandler19.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler35 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double36 = switchingFunctionsHandler35.getEventTime();
        double double37 = switchingFunctionsHandler35.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray43 = new double[] { (-1.0f), 1.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) (byte) 10, doubleArray43);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator45 = null;
        boolean boolean46 = switchingFunctionsHandler39.evaluateStep(stepInterpolator45);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler48 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray52 = new double[] { (-1.0f), 1.0d };
        boolean boolean53 = switchingFunctionsHandler48.reset((double) (byte) 10, doubleArray52);
        double[] doubleArray59 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean60 = switchingFunctionsHandler48.reset((double) (-1), doubleArray59);
        switchingFunctionsHandler39.stepAccepted(0.0d, doubleArray59);
        switchingFunctionsHandler35.stepAccepted((double) (-1L), doubleArray59);
        switchingFunctionsHandler19.stepAccepted(97.0d, doubleArray59);
        switchingFunctionsHandler0.stepAccepted((double) (-1), doubleArray59);
        double double65 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction66 = null;
        switchingFunctionsHandler0.add(switchingFunction66, 97.0d, (double) 10, (int) (short) -1);
        double double71 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double71));
    }

    @Test
    public void test11887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11887");
        java.lang.Object[] objArray7 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray7, (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray7);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", objArray7);
        java.lang.Throwable throwable17 = null;
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException(throwable17);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray25);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray25);
        integratorException18.addSuppressed((java.lang.Throwable) integratorException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray7, (java.lang.Throwable) integratorException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException38);
        java.lang.Throwable[] throwableArray40 = functionEvaluationException38.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException41);
        java.lang.String str43 = convergenceException41.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException41);
        integratorException29.addSuppressed((java.lang.Throwable) functionEvaluationException44);
        java.lang.Object[] objArray46 = functionEvaluationException44.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray49 = functionEvaluationException48.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException48);
        java.lang.String str51 = derivativeException50.getPattern();
        java.lang.String str52 = derivativeException50.getPattern();
        functionEvaluationException44.addSuppressed((java.lang.Throwable) derivativeException50);
        java.lang.Object[] objArray54 = derivativeException50.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray54);
        java.lang.Class<?> wildcardClass56 = objArray54.getClass();
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[10.0]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Evaluation failed for argument = 97" + "'", str51, "Evaluation failed for argument = 97");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Evaluation failed for argument = 97" + "'", str52, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test11888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11888");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray7 = functionEvaluationException6.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        functionEvaluationException9.addSuppressed((java.lang.Throwable) convergenceException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray7, (java.lang.Throwable) functionEvaluationException9);
        double double16 = functionEvaluationException15.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) integratorException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) integratorException17);
        java.lang.Object[] objArray20 = integratorException17.getArguments();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
    }

    @Test
    public void test11889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11889");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException(35.0d);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) functionEvaluationException3);
    }

    @Test
    public void test11890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11890");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray18);
        java.lang.Throwable throwable23 = null;
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", throwable23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray18, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray18);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException30 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray41 = functionEvaluationException40.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException46);
        functionEvaluationException43.addSuppressed((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray41, (java.lang.Throwable) functionEvaluationException43);
        java.lang.Throwable throwable50 = null;
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException(throwable50);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray41, throwable50);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray41);
        org.apache.commons.math.ode.IntegratorException integratorException55 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray56 = convergenceException54.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException54);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "", (java.lang.Object[]) strArray18, (java.lang.Throwable) functionEvaluationException58);
        java.lang.Throwable throwable60 = null;
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray18, throwable60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", strArray18);
        java.lang.Throwable throwable65 = null;
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", throwable65);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, (java.lang.Throwable) convergenceException66);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray18, (java.lang.Throwable) convergenceException66);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException78 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray77);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray77);
        java.lang.Throwable throwable82 = null;
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("hi!", throwable82);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray77, (java.lang.Throwable) convergenceException83);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException85);
        java.lang.Throwable[] throwableArray87 = functionEvaluationException86.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException88 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Object[]) throwableArray87);
        org.apache.commons.math.ConvergenceException convergenceException89 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 0", (java.lang.Object[]) strArray18, (java.lang.Throwable) integratorException88);
        org.apache.commons.math.ode.DerivativeException derivativeException90 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(throwableArray87);
    }

    @Test
    public void test11891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11891");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ConvergenceException: ", objArray9);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray9);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray9);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0]");
    }

    @Test
    public void test11892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11892");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        java.lang.Throwable[] throwableArray12 = derivativeException11.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 1L);
        java.lang.Object[] objArray17 = functionEvaluationException16.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray17, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray12, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ode.IntegratorException integratorException28 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[1.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[1.0]");
    }

    @Test
    public void test11893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11893");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11894");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) derivativeException15);
        java.lang.Object[] objArray17 = derivativeException15.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) derivativeException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException21);
        derivativeException15.addSuppressed((java.lang.Throwable) functionEvaluationException21);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
    }

    @Test
    public void test11895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11895");
        java.lang.Object[] objArray8 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray8, (java.lang.Throwable) convergenceException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray8);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray20);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray8, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: ", objArray8);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", objArray8);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[10.0]");
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test11896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11896");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray7);
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray7);
        java.lang.Throwable[] throwableArray11 = convergenceException10.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException12);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11897");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException3);
        java.lang.Object[] objArray5 = functionEvaluationException3.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException6);
        java.lang.String str8 = convergenceException6.getPattern();
        java.lang.Class<?> wildcardClass9 = convergenceException6.getClass();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[0.0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Evaluation failed for argument = 0" + "'", str8, "Evaluation failed for argument = 0");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test11898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11898");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray6);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray16 = functionEvaluationException15.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException21);
        functionEvaluationException18.addSuppressed((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray16, (java.lang.Throwable) functionEvaluationException18);
        java.lang.Object[] objArray25 = functionEvaluationException18.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray25);
        derivativeException9.addSuppressed((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException26);
        java.lang.Class<?> wildcardClass29 = convergenceException28.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[97.0]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test11899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11899");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = {0}", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2", strArray8);
        java.lang.String str15 = derivativeException14.toString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2" + "'", str15, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 2");
    }

    @Test
    public void test11900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11900");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray21 = functionEvaluationException20.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException26);
        functionEvaluationException23.addSuppressed((java.lang.Throwable) convergenceException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) functionEvaluationException23);
        java.lang.Object[] objArray31 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray31);
        java.lang.Object[] objArray33 = integratorException32.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray21, (java.lang.Throwable) integratorException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) convergenceException34);
        org.apache.commons.math.ode.IntegratorException integratorException36 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ode.IntegratorException integratorException37 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray15);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray48);
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) derivativeException53);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) functionEvaluationException54);
        org.apache.commons.math.ConvergenceException convergenceException56 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) functionEvaluationException55);
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray15);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test11901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11901");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray8 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException7);
        derivativeException3.addSuppressed((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException12);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException14);
        java.lang.Object[] objArray16 = integratorException14.getArguments();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test11902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11902");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray12);
        java.lang.Throwable throwable17 = null;
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", throwable17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray12, (java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", strArray12);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = {0}", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test11903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11903");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { (-1.0f), 1.0d };
        boolean boolean14 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler9.isEmpty();
        double[] doubleArray23 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler9.stepAccepted((double) (-1L), doubleArray23);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler0.evaluateStep(stepInterpolator28);
        boolean boolean30 = switchingFunctionsHandler0.isEmpty();
        double double31 = switchingFunctionsHandler0.getEventTime();
        double double32 = switchingFunctionsHandler0.getEventTime();
        boolean boolean33 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test11904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11904");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        java.lang.Object[] objArray10 = functionEvaluationException9.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "", objArray10);
        java.lang.Object[] objArray14 = functionEvaluationException13.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray14, (java.lang.Throwable) functionEvaluationException19);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test11905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11905");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException1 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN);
        double double2 = functionEvaluationException1.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException1);
        java.lang.Object[] objArray9 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray9);
        java.lang.Throwable throwable12 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException(throwable12);
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException17);
        derivativeException13.addSuppressed((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException19);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException21);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) integratorException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray9, (java.lang.Throwable) functionEvaluationException28);
        java.lang.Object[] objArray30 = functionEvaluationException29.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray30);
        derivativeException3.addSuppressed((java.lang.Throwable) integratorException31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException3);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException46 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray45);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException50 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray45);
        org.apache.commons.math.ode.DerivativeException derivativeException51 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", strArray45);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("Convergence failed", (java.lang.Object[]) strArray45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException52);
        convergenceException33.addSuppressed((java.lang.Throwable) functionEvaluationException53);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test11906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11906");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray14 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException13);
        derivativeException9.addSuppressed((java.lang.Throwable) functionEvaluationException13);
        java.lang.Object[] objArray17 = functionEvaluationException13.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        java.lang.Throwable[] throwableArray22 = functionEvaluationException20.getSuppressed();
        java.lang.Throwable[] throwableArray23 = functionEvaluationException20.getSuppressed();
        java.lang.Throwable[] throwableArray24 = functionEvaluationException20.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ", objArray17, (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray17);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Throwable) integratorException27);
        java.lang.Throwable[] throwableArray29 = integratorException27.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) integratorException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) integratorException27);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test11907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11907");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("Evaluation failed for argument = 97", strArray10);
        java.lang.Class<?> wildcardClass18 = strArray10.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test11908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11908");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator10 = null;
        boolean boolean11 = switchingFunctionsHandler4.evaluateStep(stepInterpolator10);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler13 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray17 = new double[] { (-1.0f), 1.0d };
        boolean boolean18 = switchingFunctionsHandler13.reset((double) (byte) 10, doubleArray17);
        double[] doubleArray24 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean25 = switchingFunctionsHandler13.reset((double) (-1), doubleArray24);
        switchingFunctionsHandler4.stepAccepted(0.0d, doubleArray24);
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray24);
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        double double29 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
    }

    @Test
    public void test11909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11909");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { (-1.0f), 1.0d };
        boolean boolean14 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler9.isEmpty();
        double[] doubleArray23 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler9.stepAccepted((double) (-1L), doubleArray23);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { (-1.0f), 1.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) (byte) 10, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler36 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray40 = new double[] { (-1.0f), 1.0d };
        boolean boolean41 = switchingFunctionsHandler36.reset((double) (byte) 10, doubleArray40);
        double[] doubleArray47 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean48 = switchingFunctionsHandler36.reset((double) (-1), doubleArray47);
        switchingFunctionsHandler29.stepAccepted((double) (byte) -1, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) (-1L), doubleArray47);
        boolean boolean51 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray57 = new double[] { (-1.0f), 1.0d };
        boolean boolean58 = switchingFunctionsHandler53.reset((double) (byte) 10, doubleArray57);
        double[] doubleArray64 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean65 = switchingFunctionsHandler53.reset((double) (-1), doubleArray64);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator66 = null;
        boolean boolean67 = switchingFunctionsHandler53.evaluateStep(stepInterpolator66);
        boolean boolean68 = switchingFunctionsHandler53.isEmpty();
        double[] doubleArray71 = new double[] { (byte) 1 };
        switchingFunctionsHandler53.stepAccepted(1.0d, doubleArray71);
        switchingFunctionsHandler0.stepAccepted((double) 0.0f, doubleArray71);
        double[] doubleArray75 = null;
        boolean boolean76 = switchingFunctionsHandler0.reset((double) 0, doubleArray75);
        double double77 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator78 = null;
        boolean boolean79 = switchingFunctionsHandler0.evaluateStep(stepInterpolator78);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test11910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11910");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray6, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "hi!", (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray6, (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) integratorException26);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0]");
    }

    @Test
    public void test11911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11911");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10);
        java.lang.Object[] objArray18 = convergenceException17.getArguments();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[hi!]");
    }

    @Test
    public void test11912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11912");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = {0}");
        org.apache.commons.math.ode.IntegratorException integratorException3 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException2);
    }

    @Test
    public void test11913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11913");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f));
        java.lang.Throwable[] throwableArray4 = functionEvaluationException3.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(97.0d);
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.ode.IntegratorException integratorException8 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray4, (java.lang.Throwable) derivativeException7);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.ode.IntegratorException integratorException12 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException11);
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test11914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11914");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test11915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11915");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler3 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray7 = new double[] { (-1.0f), 1.0d };
        boolean boolean8 = switchingFunctionsHandler3.reset((double) (byte) 10, doubleArray7);
        double[] doubleArray14 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean15 = switchingFunctionsHandler3.reset((double) (-1), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.reset(97.0d, doubleArray14);
        double double17 = switchingFunctionsHandler0.getEventTime();
        double[] doubleArray19 = null;
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 10.0f, doubleArray19);
        double double21 = switchingFunctionsHandler0.getEventTime();
        double double22 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction23 = null;
        switchingFunctionsHandler0.add(switchingFunction23, (double) (short) 1, (double) (-1), (int) '4');
        double double28 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test11916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11916");
        java.lang.Object[] objArray13 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray13, (java.lang.Throwable) convergenceException17);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        functionEvaluationException22.addSuppressed((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException28);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray13, (java.lang.Throwable) functionEvaluationException29);
        java.lang.Throwable[] throwableArray31 = functionEvaluationException29.getSuppressed();
        java.lang.Throwable throwable33 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException34 = new org.apache.commons.math.ode.DerivativeException(throwable33);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException38 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray37);
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException38);
        org.apache.commons.math.ode.IntegratorException integratorException40 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException38);
        derivativeException34.addSuppressed((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ode.IntegratorException integratorException42 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException40);
        org.apache.commons.math.ConvergenceException convergenceException43 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException42);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) integratorException42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException53);
        functionEvaluationException50.addSuppressed((java.lang.Throwable) convergenceException54);
        java.lang.Object[] objArray57 = new java.lang.Object[] { (byte) 1, functionEvaluationException50, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray57);
        java.lang.Throwable[] throwableArray59 = functionEvaluationException58.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray68 = functionEvaluationException67.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException74 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException73);
        functionEvaluationException70.addSuppressed((java.lang.Throwable) convergenceException74);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray68, (java.lang.Throwable) functionEvaluationException70);
        java.lang.Throwable throwable77 = null;
        org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException(throwable77);
        org.apache.commons.math.ConvergenceException convergenceException79 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray68, throwable77);
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.ConvergenceException convergenceException81 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray68);
        org.apache.commons.math.ConvergenceException convergenceException83 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray59, (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException84 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray31, (java.lang.Throwable) convergenceException82);
        org.apache.commons.math.ConvergenceException convergenceException85 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ConvergenceException convergenceException86 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray31);
        org.apache.commons.math.ode.IntegratorException integratorException87 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray31);
        java.lang.Throwable[] throwableArray88 = integratorException87.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray88);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test11917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11917");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        double[] doubleArray15 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean16 = switchingFunctionsHandler4.reset((double) (-1), doubleArray15);
        switchingFunctionsHandler0.stepAccepted((double) (short) 10, doubleArray15);
        boolean boolean18 = switchingFunctionsHandler0.isEmpty();
        double double19 = switchingFunctionsHandler0.getEventTime();
        boolean boolean20 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test11918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11918");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException3);
        java.lang.String str6 = integratorException5.getPattern();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test11919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11919");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray6);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray6);
        java.lang.Throwable[] throwableArray10 = derivativeException9.getSuppressed();
        java.lang.Object[] objArray11 = derivativeException9.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException", objArray11);
        java.lang.String str13 = convergenceException12.toString();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException" + "'", str13, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException");
    }

    @Test
    public void test11920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11920");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test11921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11921");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", throwable1);
        java.lang.String str3 = convergenceException2.getPattern();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str3, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11922");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException1);
    }

    @Test
    public void test11923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11923");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0");
    }

    @Test
    public void test11924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11924");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException5);
        java.lang.Throwable[] throwableArray7 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException8);
        java.lang.String str10 = functionEvaluationException9.getPattern();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11925");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", strArray10);
        java.lang.Object[] objArray17 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray17, (java.lang.Throwable) convergenceException21);
        double double23 = functionEvaluationException22.getArgument();
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException22);
        double double25 = functionEvaluationException22.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray10, (java.lang.Throwable) functionEvaluationException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException28 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = hi!", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray10);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[10.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test11926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11926");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException6);
        java.lang.Object[] objArray8 = functionEvaluationException6.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray14 = functionEvaluationException13.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException19);
        functionEvaluationException16.addSuppressed((java.lang.Throwable) convergenceException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray23 = functionEvaluationException16.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException16);
        derivativeException9.addSuppressed((java.lang.Throwable) functionEvaluationException16);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) functionEvaluationException16);
        java.lang.Throwable[] throwableArray27 = convergenceException26.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "");
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException30);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray27, (java.lang.Throwable) derivativeException32);
        double double34 = functionEvaluationException33.getArgument();
        java.lang.Class<?> wildcardClass35 = functionEvaluationException33.getClass();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0.0]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test11927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11927");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException11);
        functionEvaluationException8.addSuppressed((java.lang.Throwable) convergenceException12);
        java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 1, functionEvaluationException8, 100.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "", objArray15);
        java.lang.Throwable[] throwableArray17 = functionEvaluationException16.getSuppressed();
        java.lang.Throwable throwable20 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException(throwable20);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray24);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException25);
        derivativeException21.addSuppressed((java.lang.Throwable) integratorException27);
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException27);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException29);
        java.lang.Object[] objArray31 = integratorException29.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("", objArray31);
        org.apache.commons.math.ConvergenceException convergenceException33 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray17, (java.lang.Throwable) functionEvaluationException42);
        double double44 = functionEvaluationException43.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException45 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException43);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[1, org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97, 100.0]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
    }

    @Test
    public void test11928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11928");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "hi!");
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) convergenceException5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException6);
        org.apache.commons.math.ode.DerivativeException derivativeException8 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException7);
    }

    @Test
    public void test11929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11929");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean1 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator2 = null;
        boolean boolean3 = switchingFunctionsHandler0.evaluateStep(stepInterpolator2);
        double double4 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler6 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray10 = new double[] { (-1.0f), 1.0d };
        boolean boolean11 = switchingFunctionsHandler6.reset((double) (byte) 10, doubleArray10);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator12 = null;
        boolean boolean13 = switchingFunctionsHandler6.evaluateStep(stepInterpolator12);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray19 = new double[] { (-1.0f), 1.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) (byte) 10, doubleArray19);
        double[] doubleArray26 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean27 = switchingFunctionsHandler15.reset((double) (-1), doubleArray26);
        switchingFunctionsHandler6.stepAccepted(0.0d, doubleArray26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler30 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double31 = switchingFunctionsHandler30.getEventTime();
        double double32 = switchingFunctionsHandler30.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler34 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double35 = switchingFunctionsHandler34.getEventTime();
        double double36 = switchingFunctionsHandler34.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { (-1.0f), 1.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) (byte) 10, doubleArray42);
        boolean boolean44 = switchingFunctionsHandler38.isEmpty();
        double[] doubleArray52 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler38.stepAccepted((double) (-1L), doubleArray52);
        boolean boolean54 = switchingFunctionsHandler34.reset((double) 100L, doubleArray52);
        switchingFunctionsHandler30.stepAccepted((double) (short) -1, doubleArray52);
        switchingFunctionsHandler6.stepAccepted((double) 3, doubleArray52);
        switchingFunctionsHandler0.stepAccepted((double) ' ', doubleArray52);
        boolean boolean58 = switchingFunctionsHandler0.isEmpty();
        double double59 = switchingFunctionsHandler0.getEventTime();
        double double60 = switchingFunctionsHandler0.getEventTime();
        boolean boolean61 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double4));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test11930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11930");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException20 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test11931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11931");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Object[] objArray9 = convergenceException8.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException8);
        java.lang.Throwable[] throwableArray11 = convergenceException8.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) throwableArray11);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11932");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "");
    }

    @Test
    public void test11933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11933");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11934");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("", strArray13);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray13);
        java.lang.Object[] objArray20 = functionEvaluationException19.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray20);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray32 = functionEvaluationException31.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException37);
        functionEvaluationException34.addSuppressed((java.lang.Throwable) convergenceException38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray32, (java.lang.Throwable) functionEvaluationException34);
        java.lang.Object[] objArray41 = functionEvaluationException34.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", objArray41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: hi!", objArray41);
        java.lang.Object[] objArray44 = integratorException43.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException50);
        java.lang.Throwable[] throwableArray52 = functionEvaluationException50.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException53);
        java.lang.String str55 = convergenceException53.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException53);
        double double57 = functionEvaluationException56.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray44, (java.lang.Throwable) functionEvaluationException56);
        java.lang.String str59 = functionEvaluationException56.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException60 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException56);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((double) '#', (java.lang.Throwable) functionEvaluationException56);
        integratorException22.addSuppressed((java.lang.Throwable) functionEvaluationException62);
        java.lang.Throwable[] throwableArray64 = functionEvaluationException62.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "", (java.lang.Object[]) throwableArray64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[97.0]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[97.0]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Evaluation failed for argument = 97" + "'", str59, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test11935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11935");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", strArray10);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "Evaluation failed for argument = 97", (java.lang.Object[]) strArray10, (java.lang.Throwable) derivativeException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException20);
        java.lang.Throwable throwable28 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException29 = new org.apache.commons.math.ode.DerivativeException(throwable28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException29);
        integratorException23.addSuppressed((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) integratorException23);
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException33);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test11936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11936");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 0", strArray9);
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray9);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test11937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11937");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction1 = null;
        switchingFunctionsHandler0.add(switchingFunction1, (double) (byte) -1, (double) (short) -1, (int) (short) 0);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction6 = null;
        switchingFunctionsHandler0.add(switchingFunction6, (double) 0.0f, (double) '4', (int) (short) 100);
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = switchingFunctionsHandler0.evaluateStep(stepInterpolator14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test11938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11938");
        java.lang.Throwable throwable1 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 10, throwable1);
        java.lang.Object[] objArray3 = functionEvaluationException2.getArguments();
        java.lang.String str4 = functionEvaluationException2.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test11939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11939");
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException6);
        java.lang.Object[] objArray8 = functionEvaluationException7.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException", objArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", objArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "", objArray8);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test11940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11940");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException7.getSuppressed();
        java.lang.Throwable[] throwableArray10 = functionEvaluationException7.getSuppressed();
        java.lang.Throwable[] throwableArray11 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray11);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test11941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11941");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray6 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler0.stepAccepted((double) (short) 0, doubleArray6);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler9 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray13 = new double[] { (-1.0f), 1.0d };
        boolean boolean14 = switchingFunctionsHandler9.reset((double) (byte) 10, doubleArray13);
        boolean boolean15 = switchingFunctionsHandler9.isEmpty();
        double[] doubleArray23 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler9.stepAccepted((double) (-1L), doubleArray23);
        switchingFunctionsHandler0.stepAccepted((double) (byte) 10, doubleArray23);
        boolean boolean26 = switchingFunctionsHandler0.stop();
        boolean boolean27 = switchingFunctionsHandler0.isEmpty();
        double double28 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction29 = null;
        switchingFunctionsHandler0.add(switchingFunction29, (double) (short) 10, (double) 100.0f, (int) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
    }

    @Test
    public void test11942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11942");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(2.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11943");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) integratorException6);
        java.lang.Object[] objArray8 = integratorException6.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!");
        java.lang.Object[] objArray16 = convergenceException15.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Throwable) convergenceException15);
        java.lang.Throwable[] throwableArray18 = convergenceException15.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException23);
        java.lang.Throwable[] throwableArray25 = functionEvaluationException23.getSuppressed();
        java.lang.Throwable[] throwableArray26 = functionEvaluationException23.getSuppressed();
        double double27 = functionEvaluationException23.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) functionEvaluationException23);
        org.apache.commons.math.ode.IntegratorException integratorException31 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException36);
        java.lang.Throwable[] throwableArray38 = functionEvaluationException36.getSuppressed();
        java.lang.Throwable[] throwableArray39 = functionEvaluationException36.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray44 = functionEvaluationException43.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException49);
        functionEvaluationException46.addSuppressed((java.lang.Throwable) convergenceException50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray44, (java.lang.Throwable) functionEvaluationException46);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray39, (java.lang.Throwable) functionEvaluationException52);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        org.apache.commons.math.ode.IntegratorException integratorException57 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException56);
        functionEvaluationException52.addSuppressed((java.lang.Throwable) integratorException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray69 = functionEvaluationException68.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException75 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException74);
        functionEvaluationException71.addSuppressed((java.lang.Throwable) convergenceException75);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray69, (java.lang.Throwable) functionEvaluationException71);
        java.lang.Object[] objArray79 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException80 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray79);
        java.lang.Object[] objArray81 = integratorException80.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException82 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray69, (java.lang.Throwable) integratorException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.ConvergenceException convergenceException84 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray69);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((double) 2, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray69);
        integratorException57.addSuppressed((java.lang.Throwable) functionEvaluationException85);
        org.apache.commons.math.ConvergenceException convergenceException87 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray18, (java.lang.Throwable) integratorException57);
        org.apache.commons.math.ConvergenceException convergenceException88 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = -1", objArray8, (java.lang.Throwable) integratorException57);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException89 = new org.apache.commons.math.FunctionEvaluationException((double) 10L, (java.lang.Throwable) integratorException57);
        java.lang.Throwable[] throwableArray90 = integratorException57.getSuppressed();
        java.lang.String str91 = integratorException57.toString();
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 97.0d + "'", double27 == 97.0d);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2" + "'", str91, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
    }

    @Test
    public void test11944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11944");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray9);
        double double14 = functionEvaluationException13.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException13);
        double double16 = functionEvaluationException13.getArgument();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
    }

    @Test
    public void test11945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11945");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        boolean boolean16 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler18 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray22 = new double[] { (-1.0f), 1.0d };
        boolean boolean23 = switchingFunctionsHandler18.reset((double) (byte) 10, doubleArray22);
        boolean boolean24 = switchingFunctionsHandler18.isEmpty();
        boolean boolean25 = switchingFunctionsHandler18.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler18.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator28 = null;
        boolean boolean29 = switchingFunctionsHandler18.evaluateStep(stepInterpolator28);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler31 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray35 = new double[] { (-1.0f), 1.0d };
        boolean boolean36 = switchingFunctionsHandler31.reset((double) (byte) 10, doubleArray35);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler38 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray42 = new double[] { (-1.0f), 1.0d };
        boolean boolean43 = switchingFunctionsHandler38.reset((double) (byte) 10, doubleArray42);
        double[] doubleArray49 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean50 = switchingFunctionsHandler38.reset((double) (-1), doubleArray49);
        switchingFunctionsHandler31.stepAccepted((double) (byte) -1, doubleArray49);
        double double52 = switchingFunctionsHandler31.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler54 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray58 = new double[] { (-1.0f), 1.0d };
        boolean boolean59 = switchingFunctionsHandler54.reset((double) (byte) 10, doubleArray58);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator60 = null;
        boolean boolean61 = switchingFunctionsHandler54.evaluateStep(stepInterpolator60);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator62 = null;
        boolean boolean63 = switchingFunctionsHandler54.evaluateStep(stepInterpolator62);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction64 = null;
        switchingFunctionsHandler54.add(switchingFunction64, (double) (short) 100, 0.0d, (int) (short) 1);
        double double69 = switchingFunctionsHandler54.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler71 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray77 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler71.stepAccepted((double) (short) 0, doubleArray77);
        boolean boolean79 = switchingFunctionsHandler54.reset((double) 0.0f, doubleArray77);
        boolean boolean80 = switchingFunctionsHandler31.reset((double) 0.0f, doubleArray77);
        switchingFunctionsHandler18.stepAccepted((double) (-1L), doubleArray77);
        boolean boolean82 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray77);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction83 = null;
        switchingFunctionsHandler0.add(switchingFunction83, (double) 100.0f, 1.0d, 1);
        boolean boolean88 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction89 = null;
        switchingFunctionsHandler0.add(switchingFunction89, 0.0d, 0.0d, 0);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test11946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11946");
        java.lang.Object[] objArray2 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray13);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (-1L), "Evaluation failed for argument = 97", (java.lang.Object[]) strArray13);
        java.lang.String str18 = functionEvaluationException17.getPattern();
        java.lang.Throwable[] throwableArray19 = functionEvaluationException17.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "hi!", (java.lang.Object[]) throwableArray19);
        java.lang.Throwable[] throwableArray21 = functionEvaluationException20.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException20);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) convergenceException22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", objArray2, (java.lang.Throwable) convergenceException23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Evaluation failed for argument = 97" + "'", str18, "Evaluation failed for argument = 97");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test11947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11947");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", throwable2);
    }

    @Test
    public void test11948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11948");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException8);
        java.lang.Throwable[] throwableArray10 = convergenceException9.getSuppressed();
        java.lang.Throwable throwable14 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException15 = new org.apache.commons.math.ode.DerivativeException(throwable14);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray18);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException19);
        org.apache.commons.math.ode.IntegratorException integratorException21 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException19);
        derivativeException15.addSuppressed((java.lang.Throwable) integratorException21);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException21);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException23);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException24);
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray32, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.ConvergenceException convergenceException38 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException44);
        functionEvaluationException41.addSuppressed((java.lang.Throwable) convergenceException45);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray32, (java.lang.Throwable) functionEvaluationException48);
        java.lang.Throwable[] throwableArray50 = functionEvaluationException48.getSuppressed();
        java.lang.Throwable throwable52 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException53 = new org.apache.commons.math.ode.DerivativeException(throwable52);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ode.DerivativeException derivativeException58 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException57);
        org.apache.commons.math.ode.IntegratorException integratorException59 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException57);
        derivativeException53.addSuppressed((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException59);
        org.apache.commons.math.ConvergenceException convergenceException62 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException61);
        org.apache.commons.math.ConvergenceException convergenceException63 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray50, (java.lang.Throwable) integratorException61);
        convergenceException24.addSuppressed((java.lang.Throwable) integratorException61);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray10, (java.lang.Throwable) convergenceException24);
        org.apache.commons.math.ode.DerivativeException derivativeException66 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException65);
        org.apache.commons.math.ode.DerivativeException derivativeException67 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException65);
        java.lang.String str68 = derivativeException67.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException67);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test11949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11949");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray11);
        java.lang.Throwable[] throwableArray15 = convergenceException14.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException16 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, (java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException24);
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException25);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: hi!", (java.lang.Object[]) throwableArray15, (java.lang.Throwable) derivativeException27);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test11950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11950");
        java.lang.Throwable throwable4 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException(throwable4);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException9);
        derivativeException5.addSuppressed((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException11);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException14);
        java.lang.Object[] objArray22 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray22, (java.lang.Throwable) convergenceException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException34);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) convergenceException35);
        org.apache.commons.math.ConvergenceException convergenceException37 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException37);
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray22, (java.lang.Throwable) functionEvaluationException38);
        java.lang.Throwable[] throwableArray40 = functionEvaluationException38.getSuppressed();
        java.lang.Throwable throwable42 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException(throwable42);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException47 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray46);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException47);
        org.apache.commons.math.ode.IntegratorException integratorException49 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException47);
        derivativeException43.addSuppressed((java.lang.Throwable) integratorException49);
        org.apache.commons.math.ode.IntegratorException integratorException51 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException49);
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray40, (java.lang.Throwable) integratorException51);
        convergenceException14.addSuppressed((java.lang.Throwable) integratorException51);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ode.DerivativeException derivativeException56 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException55);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test11951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11951");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException17);
        functionEvaluationException14.addSuppressed((java.lang.Throwable) convergenceException18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException18);
        java.lang.String str21 = convergenceException20.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray9, (java.lang.Throwable) convergenceException20);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray9);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, (java.lang.Throwable) derivativeException25);
        java.lang.Object[] objArray31 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException32 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray31);
        java.lang.Throwable throwable34 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException35 = new org.apache.commons.math.ode.DerivativeException(throwable34);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException39 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException39);
        org.apache.commons.math.ode.IntegratorException integratorException41 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException39);
        derivativeException35.addSuppressed((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ode.IntegratorException integratorException43 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException41);
        org.apache.commons.math.ConvergenceException convergenceException44 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException43);
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray31, (java.lang.Throwable) integratorException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException49);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 'a', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray31, (java.lang.Throwable) functionEvaluationException50);
        functionEvaluationException26.addSuppressed((java.lang.Throwable) functionEvaluationException50);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test11952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11952");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException6 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException5);
        java.lang.Throwable[] throwableArray7 = functionEvaluationException5.getSuppressed();
        java.lang.Throwable[] throwableArray8 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException9 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.ode.IntegratorException integratorException10 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray8);
        java.lang.Object[] objArray18 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException21);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray18, (java.lang.Throwable) convergenceException22);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray18);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException("", objArray18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = hi!", (java.lang.Object[]) throwableArray8, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException27);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[10.0]");
    }

    @Test
    public void test11953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11953");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException17 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: hi!", strArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException22 = new org.apache.commons.math.ode.DerivativeException("", strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException23 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ConvergenceException convergenceException24 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException40 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("", strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException44 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.IntegratorException integratorException46 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ode.DerivativeException derivativeException48 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException", strArray39);
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) strArray39);
        org.apache.commons.math.ConvergenceException convergenceException50 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Object[]) strArray16, (java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ode.IntegratorException integratorException52 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.IntegratorException integratorException53 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray16);
        org.apache.commons.math.ode.DerivativeException derivativeException54 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", strArray16);
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException54);
        java.lang.String str56 = derivativeException54.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 1", (java.lang.Throwable) derivativeException54);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97" + "'", str56, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97");
    }

    @Test
    public void test11954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11954");
        java.lang.Throwable throwable2 = null;
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", throwable2);
    }

    @Test
    public void test11955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11955");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray13 = functionEvaluationException12.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray13, (java.lang.Throwable) functionEvaluationException15);
        java.lang.Object[] objArray22 = functionEvaluationException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", objArray22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: ", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        org.apache.commons.math.ode.IntegratorException integratorException26 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", objArray22);
        java.lang.Object[] objArray28 = new java.lang.Object[] {};
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException("hi!", objArray28);
        java.lang.Throwable[] throwableArray30 = integratorException29.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException29);
        org.apache.commons.math.ConvergenceException convergenceException32 = new org.apache.commons.math.ConvergenceException("hi!", objArray22, (java.lang.Throwable) integratorException29);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) convergenceException32);
        org.apache.commons.math.ode.IntegratorException integratorException34 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) convergenceException32);
        java.lang.Object[] objArray36 = functionEvaluationException35.getArguments();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[97.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[97.0]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test11956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11956");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11957");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException22 = new org.apache.commons.math.ode.IntegratorException("", (java.lang.Object[]) strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray17);
        java.lang.Object[] objArray37 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException41 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException40);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray37, (java.lang.Throwable) convergenceException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray37);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ConvergenceException convergenceException46 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) strArray17, (java.lang.Throwable) functionEvaluationException43);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Object[]) strArray17);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10.0]");
    }

    @Test
    public void test11958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11958");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException5 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray6 = convergenceException5.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ode.DerivativeException: hi!", objArray6);
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException7);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test11959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11959");
        java.lang.Object[] objArray5 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray5, (java.lang.Throwable) convergenceException9);
        org.apache.commons.math.ode.IntegratorException integratorException11 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray5);
        java.lang.Throwable[] throwableArray12 = integratorException11.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray12);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test11960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11960");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException(35.0d, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) functionEvaluationException5);
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException6);
        double double8 = functionEvaluationException6.getArgument();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 35.0d + "'", double8 == 35.0d);
    }

    @Test
    public void test11961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11961");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: ");
        org.apache.commons.math.ode.DerivativeException derivativeException3 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException2);
    }

    @Test
    public void test11962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11962");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        boolean boolean6 = switchingFunctionsHandler0.isEmpty();
        double[] doubleArray14 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler0.stepAccepted((double) (-1L), doubleArray14);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction16 = null;
        switchingFunctionsHandler0.add(switchingFunction16, 1.0d, 10.0d, (int) 'a');
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean23 = switchingFunctionsHandler22.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator24 = null;
        boolean boolean25 = switchingFunctionsHandler22.evaluateStep(stepInterpolator24);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler27 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray31 = new double[] { (-1.0f), 1.0d };
        boolean boolean32 = switchingFunctionsHandler27.reset((double) (byte) 10, doubleArray31);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator33 = null;
        boolean boolean34 = switchingFunctionsHandler27.evaluateStep(stepInterpolator33);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator35 = null;
        boolean boolean36 = switchingFunctionsHandler27.evaluateStep(stepInterpolator35);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction37 = null;
        switchingFunctionsHandler27.add(switchingFunction37, (double) (short) 100, 0.0d, (int) (short) 1);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler43 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double44 = switchingFunctionsHandler43.getEventTime();
        double double45 = switchingFunctionsHandler43.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler47 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray51 = new double[] { (-1.0f), 1.0d };
        boolean boolean52 = switchingFunctionsHandler47.reset((double) (byte) 10, doubleArray51);
        boolean boolean53 = switchingFunctionsHandler47.isEmpty();
        double[] doubleArray61 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler47.stepAccepted((double) (-1L), doubleArray61);
        boolean boolean63 = switchingFunctionsHandler43.reset((double) 100L, doubleArray61);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler65 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double66 = switchingFunctionsHandler65.getEventTime();
        double double67 = switchingFunctionsHandler65.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler69 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray73 = new double[] { (-1.0f), 1.0d };
        boolean boolean74 = switchingFunctionsHandler69.reset((double) (byte) 10, doubleArray73);
        boolean boolean75 = switchingFunctionsHandler69.isEmpty();
        double[] doubleArray83 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler69.stepAccepted((double) (-1L), doubleArray83);
        boolean boolean85 = switchingFunctionsHandler65.reset((double) 100L, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler43.reset((double) 100.0f, doubleArray83);
        boolean boolean87 = switchingFunctionsHandler27.reset((double) (byte) 100, doubleArray83);
        switchingFunctionsHandler22.stepAccepted((double) 100.0f, doubleArray83);
        boolean boolean89 = switchingFunctionsHandler0.reset((double) 0.0f, doubleArray83);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction90 = null;
        switchingFunctionsHandler0.add(switchingFunction90, Double.NaN, 0.0d, (int) (byte) 10);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test11963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11963");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray10);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException16);
        java.lang.Throwable[] throwableArray18 = derivativeException16.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException16);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test11964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11964");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 100.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Object[] objArray6 = functionEvaluationException4.getArguments();
        java.lang.String str7 = functionEvaluationException4.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException4);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException4.getSuppressed();
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[0.0]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Evaluation failed for argument = {0}" + "'", str7, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test11965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11965");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        java.lang.Throwable[] throwableArray14 = functionEvaluationException12.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) 10.0f, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray14);
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray14, throwable18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray29 = functionEvaluationException28.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException35 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException34);
        functionEvaluationException31.addSuppressed((java.lang.Throwable) convergenceException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray29, (java.lang.Throwable) functionEvaluationException31);
        java.lang.Throwable[] throwableArray38 = functionEvaluationException31.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException39 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.ode.DerivativeException derivativeException42 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException41);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException41);
        java.lang.Throwable throwable44 = null;
        org.apache.commons.math.ConvergenceException convergenceException45 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Object[]) throwableArray14, throwable44);
        java.lang.Class<?> wildcardClass46 = convergenceException45.getClass();
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test11966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11966");
        java.lang.Throwable throwable8 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException(throwable8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), (java.lang.Throwable) derivativeException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) functionEvaluationException10);
        java.lang.Object[] objArray12 = functionEvaluationException10.getArguments();
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", objArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray12);
        org.apache.commons.math.ode.IntegratorException integratorException15 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3", objArray12);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: ", objArray12);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: hi!", objArray12);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
    }

    @Test
    public void test11967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11967");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException6 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException6);
        functionEvaluationException3.addSuppressed((java.lang.Throwable) convergenceException7);
        org.apache.commons.math.ConvergenceException convergenceException9 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException3);
        java.lang.String str10 = functionEvaluationException3.getPattern();
        java.lang.String str11 = functionEvaluationException3.getPattern();
        java.lang.String str12 = functionEvaluationException3.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: ", (java.lang.Throwable) functionEvaluationException3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Evaluation failed for argument = {0}" + "'", str10, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Evaluation failed for argument = {0}" + "'", str11, "Evaluation failed for argument = {0}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Evaluation failed for argument = {0}" + "'", str12, "Evaluation failed for argument = {0}");
    }

    @Test
    public void test11968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11968");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 100L, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 100L, 97.0d, 3);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double30 = switchingFunctionsHandler29.getEventTime();
        double double31 = switchingFunctionsHandler29.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler33 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray37 = new double[] { (-1.0f), 1.0d };
        boolean boolean38 = switchingFunctionsHandler33.reset((double) (byte) 10, doubleArray37);
        boolean boolean39 = switchingFunctionsHandler33.isEmpty();
        double[] doubleArray47 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler33.stepAccepted((double) (-1L), doubleArray47);
        boolean boolean49 = switchingFunctionsHandler29.reset((double) 100L, doubleArray47);
        boolean boolean50 = switchingFunctionsHandler0.reset((double) 0L, doubleArray47);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = switchingFunctionsHandler0.evaluateStep(stepInterpolator51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test11969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11969");
        org.apache.commons.math.ConvergenceException convergenceException3 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 3");
        org.apache.commons.math.ode.IntegratorException integratorException4 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException3);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97");
        functionEvaluationException5.addSuppressed((java.lang.Throwable) functionEvaluationException8);
        double double10 = functionEvaluationException5.getArgument();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 3.0d + "'", double10 == 3.0d);
    }

    @Test
    public void test11970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11970");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        boolean boolean13 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        boolean boolean16 = switchingFunctionsHandler15.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator17 = null;
        boolean boolean18 = switchingFunctionsHandler15.evaluateStep(stepInterpolator17);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double21 = switchingFunctionsHandler20.getEventTime();
        double double22 = switchingFunctionsHandler20.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler24 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double25 = switchingFunctionsHandler24.getEventTime();
        double double26 = switchingFunctionsHandler24.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray32 = new double[] { (-1.0f), 1.0d };
        boolean boolean33 = switchingFunctionsHandler28.reset((double) (byte) 10, doubleArray32);
        boolean boolean34 = switchingFunctionsHandler28.isEmpty();
        double[] doubleArray42 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler28.stepAccepted((double) (-1L), doubleArray42);
        boolean boolean44 = switchingFunctionsHandler24.reset((double) 100L, doubleArray42);
        switchingFunctionsHandler20.stepAccepted((double) (short) -1, doubleArray42);
        boolean boolean46 = switchingFunctionsHandler15.reset(1.0d, doubleArray42);
        switchingFunctionsHandler0.stepAccepted(Double.NaN, doubleArray42);
        boolean boolean48 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler0.evaluateStep(stepInterpolator49);
        double double51 = switchingFunctionsHandler0.getEventTime();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test11971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11971");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 0, "", (java.lang.Throwable) functionEvaluationException3);
        org.apache.commons.math.ode.IntegratorException integratorException5 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException4);
        org.apache.commons.math.ode.IntegratorException integratorException6 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException4);
    }

    @Test
    public void test11972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11972");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException2 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        java.lang.Object[] objArray3 = functionEvaluationException2.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException2);
        double double5 = functionEvaluationException2.getArgument();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test11973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11973");
        org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 10, (java.lang.Throwable) convergenceException2);
        org.apache.commons.math.ode.DerivativeException derivativeException4 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException3);
    }

    @Test
    public void test11974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11974");
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException7 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray6);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException14);
        java.lang.String str16 = functionEvaluationException15.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray6, (java.lang.Throwable) functionEvaluationException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(100.0d, "org.apache.commons.math.FunctionEvaluationException", (java.lang.Throwable) functionEvaluationException17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray24 = functionEvaluationException23.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException30 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException29);
        functionEvaluationException26.addSuppressed((java.lang.Throwable) convergenceException30);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray24, (java.lang.Throwable) functionEvaluationException26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException(2.0d, (java.lang.Throwable) functionEvaluationException26);
        double double34 = functionEvaluationException33.getArgument();
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException33);
        functionEvaluationException17.addSuppressed((java.lang.Throwable) integratorException35);
        java.lang.Class<?> wildcardClass37 = functionEvaluationException17.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str16, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2.0d + "'", double34 == 2.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test11975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11975");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double18 = switchingFunctionsHandler17.getEventTime();
        double double19 = switchingFunctionsHandler17.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler21 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double22 = switchingFunctionsHandler21.getEventTime();
        double double23 = switchingFunctionsHandler21.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler25 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray29 = new double[] { (-1.0f), 1.0d };
        boolean boolean30 = switchingFunctionsHandler25.reset((double) (byte) 10, doubleArray29);
        boolean boolean31 = switchingFunctionsHandler25.isEmpty();
        double[] doubleArray39 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler25.stepAccepted((double) (-1L), doubleArray39);
        boolean boolean41 = switchingFunctionsHandler21.reset((double) 100L, doubleArray39);
        switchingFunctionsHandler17.stepAccepted((double) (short) -1, doubleArray39);
        switchingFunctionsHandler0.stepAccepted((double) (-1.0f), doubleArray39);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction44 = null;
        switchingFunctionsHandler0.add(switchingFunction44, (double) 'a', (double) (byte) -1, 1);
        double double49 = switchingFunctionsHandler0.getEventTime();
        double double50 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction51 = null;
        switchingFunctionsHandler0.add(switchingFunction51, (double) 10L, (double) (short) 10, (int) ' ');
        boolean boolean56 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = switchingFunctionsHandler0.evaluateStep(stepInterpolator57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double22));
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test11976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11976");
        java.lang.Object[] objArray10 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray10, (java.lang.Throwable) convergenceException14);
        org.apache.commons.math.ConvergenceException convergenceException16 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException22);
        functionEvaluationException19.addSuppressed((java.lang.Throwable) convergenceException23);
        org.apache.commons.math.ConvergenceException convergenceException25 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException19);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException25);
        org.apache.commons.math.ConvergenceException convergenceException27 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray10, (java.lang.Throwable) functionEvaluationException26);
        java.lang.Throwable[] throwableArray28 = functionEvaluationException26.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) 10, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        java.lang.String str33 = functionEvaluationException32.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray28, (java.lang.Throwable) functionEvaluationException32);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray28);
        org.apache.commons.math.ode.DerivativeException derivativeException36 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException35);
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException43 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray42);
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray42);
        java.lang.Throwable[] throwableArray46 = derivativeException45.getSuppressed();
        functionEvaluationException35.addSuppressed((java.lang.Throwable) derivativeException45);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2" + "'", str33, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test11977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11977");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) convergenceException11);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException12);
        java.lang.Throwable[] throwableArray14 = convergenceException13.getSuppressed();
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException19 = new org.apache.commons.math.ode.DerivativeException(throwable18);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException23 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray22);
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException23);
        org.apache.commons.math.ode.IntegratorException integratorException25 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException23);
        derivativeException19.addSuppressed((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ode.IntegratorException integratorException27 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException25);
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException27);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException28);
        java.lang.Object[] objArray36 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException40 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException39);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray36, (java.lang.Throwable) convergenceException40);
        org.apache.commons.math.ConvergenceException convergenceException42 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException48 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException49 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException48);
        functionEvaluationException45.addSuppressed((java.lang.Throwable) convergenceException49);
        org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException45);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) convergenceException51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", objArray36, (java.lang.Throwable) functionEvaluationException52);
        java.lang.Throwable[] throwableArray54 = functionEvaluationException52.getSuppressed();
        java.lang.Throwable throwable56 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException(throwable56);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException61 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray60);
        org.apache.commons.math.ode.DerivativeException derivativeException62 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException61);
        org.apache.commons.math.ode.IntegratorException integratorException63 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException61);
        derivativeException57.addSuppressed((java.lang.Throwable) integratorException63);
        org.apache.commons.math.ode.IntegratorException integratorException65 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException63);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) integratorException65);
        org.apache.commons.math.ConvergenceException convergenceException67 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: hi!", (java.lang.Object[]) throwableArray54, (java.lang.Throwable) integratorException65);
        convergenceException28.addSuppressed((java.lang.Throwable) integratorException65);
        org.apache.commons.math.ConvergenceException convergenceException69 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) convergenceException28);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException75 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray74);
        org.apache.commons.math.ode.DerivativeException derivativeException76 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException75);
        org.apache.commons.math.ode.IntegratorException integratorException77 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException75);
        org.apache.commons.math.ode.IntegratorException integratorException78 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException75);
        org.apache.commons.math.ode.IntegratorException integratorException79 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) integratorException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException80 = new org.apache.commons.math.FunctionEvaluationException((double) 1L, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Throwable) integratorException78);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray14, (java.lang.Throwable) functionEvaluationException80);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(3.0d, "", (java.lang.Throwable) functionEvaluationException81);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10.0]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test11978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11978");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException20);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException21);
        java.lang.String str23 = functionEvaluationException22.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray13, (java.lang.Throwable) functionEvaluationException22);
        java.lang.Object[] objArray25 = functionEvaluationException22.getArguments();
        java.lang.Object[] objArray32 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException36 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException35);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray32, (java.lang.Throwable) convergenceException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray32);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray32, (java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException54);
        java.lang.Throwable[] throwableArray56 = functionEvaluationException54.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException57 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException57);
        java.lang.String str59 = convergenceException57.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ConvergenceException convergenceException61 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException57);
        convergenceException47.addSuppressed((java.lang.Throwable) convergenceException57);
        org.apache.commons.math.ode.DerivativeException derivativeException63 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException47);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(32.0d, "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", objArray25, (java.lang.Throwable) derivativeException63);
        org.apache.commons.math.ConvergenceException convergenceException65 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.ConvergenceException convergenceException66 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException67 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.ode.IntegratorException: hi!", (java.lang.Throwable) functionEvaluationException64);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) 0, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", (java.lang.Throwable) functionEvaluationException67);
        java.lang.Throwable[] throwableArray69 = functionEvaluationException67.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException70 = new org.apache.commons.math.FunctionEvaluationException((double) 1, (java.lang.Throwable) functionEvaluationException67);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException(0.0d, (java.lang.Throwable) functionEvaluationException67);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str23, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[10.0]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test11979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11979");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: hi!");
    }

    @Test
    public void test11980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11980");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        double[] doubleArray11 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean12 = switchingFunctionsHandler0.reset((double) (-1), doubleArray11);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator13 = null;
        boolean boolean14 = switchingFunctionsHandler0.evaluateStep(stepInterpolator13);
        double double15 = switchingFunctionsHandler0.getEventTime();
        boolean boolean16 = switchingFunctionsHandler0.isEmpty();
        double double17 = switchingFunctionsHandler0.getEventTime();
        boolean boolean18 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test11981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11981");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        java.lang.Object[] objArray9 = functionEvaluationException8.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: hi!", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) (-1.0f), "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", objArray9);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException18 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "hi!", (java.lang.Object[]) strArray17);
        org.apache.commons.math.ode.DerivativeException derivativeException20 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ", strArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 10, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}", objArray9, (java.lang.Throwable) derivativeException20);
        java.lang.Class<?> wildcardClass22 = functionEvaluationException21.getClass();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test11982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11982");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray6 = functionEvaluationException5.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException7 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray6);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Throwable) derivativeException13);
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException13);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 10, (java.lang.Throwable) derivativeException16);
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray6, (java.lang.Throwable) derivativeException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException16);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test11983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11983");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException10 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray9);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException16 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray15);
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) convergenceException17);
        java.lang.String str19 = functionEvaluationException18.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 0.0f, "hi!", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.ode.DerivativeException derivativeException21 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((double) (-1), "", (java.lang.Object[]) strArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: ");
        java.lang.Object[] objArray28 = functionEvaluationException27.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException34 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException33);
        org.apache.commons.math.ode.IntegratorException integratorException35 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) convergenceException34);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) integratorException35);
        java.lang.Object[] objArray37 = functionEvaluationException36.getArguments();
        double double38 = functionEvaluationException36.getArgument();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((double) 100, "org.apache.commons.math.FunctionEvaluationException: hi!", objArray28, (java.lang.Throwable) functionEvaluationException36);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "", (java.lang.Object[]) strArray9, (java.lang.Throwable) functionEvaluationException36);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.commons.math.ode.DerivativeException: hi!" + "'", str19, "org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 3.0d + "'", double38 == 3.0d);
    }

    @Test
    public void test11984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11984");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException18);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) convergenceException19);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("", (java.lang.Throwable) convergenceException19);
        java.lang.String str22 = convergenceException21.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException23 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = {0}", (java.lang.Object[]) strArray10, (java.lang.Throwable) convergenceException21);
        org.apache.commons.math.ode.IntegratorException integratorException24 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", (java.lang.Object[]) strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException25 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 97", strArray10);
        org.apache.commons.math.ode.DerivativeException derivativeException26 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", strArray10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = hi!", (java.lang.Throwable) derivativeException26);
        java.lang.String str28 = derivativeException26.getPattern();
        org.apache.commons.math.ode.IntegratorException integratorException29 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException26);
        java.lang.String str30 = derivativeException26.getPattern();
        org.apache.commons.math.ConvergenceException convergenceException31 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) derivativeException26);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str28, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!" + "'", str30, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
    }

    @Test
    public void test11985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11985");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        double double2 = switchingFunctionsHandler0.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        double[] doubleArray18 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler4.stepAccepted((double) (-1L), doubleArray18);
        boolean boolean20 = switchingFunctionsHandler0.reset((double) 100L, doubleArray18);
        boolean boolean21 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction22 = null;
        switchingFunctionsHandler0.add(switchingFunction22, (double) 100L, 97.0d, 3);
        boolean boolean27 = switchingFunctionsHandler0.stop();
        boolean boolean28 = switchingFunctionsHandler0.isEmpty();
        boolean boolean29 = switchingFunctionsHandler0.stop();
        boolean boolean30 = switchingFunctionsHandler0.stop();
        boolean boolean31 = switchingFunctionsHandler0.stop();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test11986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11986");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException3 = new org.apache.commons.math.FunctionEvaluationException((double) 3, "org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = {0}");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException4 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) functionEvaluationException3);
        java.lang.Object[] objArray5 = functionEvaluationException3.getArguments();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
    }

    @Test
    public void test11987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11987");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException7);
        java.lang.Throwable[] throwableArray9 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, (java.lang.Throwable) convergenceException10);
        double double12 = functionEvaluationException11.getArgument();
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", (java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException11);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException11);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException27 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException30 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException(0.0d, "hi!", (java.lang.Object[]) strArray26);
        org.apache.commons.math.ode.DerivativeException derivativeException32 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", strArray26);
        org.apache.commons.math.ode.IntegratorException integratorException33 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray26);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray42 = functionEvaluationException41.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException48 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException47);
        functionEvaluationException44.addSuppressed((java.lang.Throwable) convergenceException48);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray42, (java.lang.Throwable) functionEvaluationException44);
        java.lang.Throwable throwable51 = null;
        org.apache.commons.math.ConvergenceException convergenceException52 = new org.apache.commons.math.ConvergenceException(throwable51);
        org.apache.commons.math.ConvergenceException convergenceException53 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray42, throwable51);
        org.apache.commons.math.ode.IntegratorException integratorException54 = new org.apache.commons.math.ode.IntegratorException("Evaluation failed for argument = {0}", (java.lang.Object[]) throwableArray42);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "Evaluation failed for argument = 97", (java.lang.Object[]) throwableArray42);
        double double56 = functionEvaluationException55.getArgument();
        integratorException33.addSuppressed((java.lang.Throwable) functionEvaluationException55);
        functionEvaluationException15.addSuppressed((java.lang.Throwable) functionEvaluationException55);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 97.0d + "'", double56 == 97.0d);
    }

    @Test
    public void test11988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11988");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        double double13 = switchingFunctionsHandler0.getEventTime();
        boolean boolean14 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler16 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double17 = switchingFunctionsHandler16.getEventTime();
        double double18 = switchingFunctionsHandler16.getEventTime();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler20 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray24 = new double[] { (-1.0f), 1.0d };
        boolean boolean25 = switchingFunctionsHandler20.reset((double) (byte) 10, doubleArray24);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator26 = null;
        boolean boolean27 = switchingFunctionsHandler20.evaluateStep(stepInterpolator26);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler29 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray33 = new double[] { (-1.0f), 1.0d };
        boolean boolean34 = switchingFunctionsHandler29.reset((double) (byte) 10, doubleArray33);
        double[] doubleArray40 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean41 = switchingFunctionsHandler29.reset((double) (-1), doubleArray40);
        switchingFunctionsHandler20.stepAccepted(0.0d, doubleArray40);
        switchingFunctionsHandler16.stepAccepted((double) (-1L), doubleArray40);
        switchingFunctionsHandler0.stepAccepted(97.0d, doubleArray40);
        boolean boolean45 = switchingFunctionsHandler0.stop();
        boolean boolean46 = switchingFunctionsHandler0.isEmpty();
        boolean boolean47 = switchingFunctionsHandler0.stop();
        boolean boolean48 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator49 = null;
        boolean boolean50 = switchingFunctionsHandler0.evaluateStep(stepInterpolator49);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator51 = null;
        boolean boolean52 = switchingFunctionsHandler0.evaluateStep(stepInterpolator51);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction53 = null;
        switchingFunctionsHandler0.add(switchingFunction53, (double) (byte) 10, (double) 10.0f, (int) (byte) -1);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test11989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11989");
        java.lang.Object[] objArray6 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException10 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray6, (java.lang.Throwable) convergenceException10);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException(10.0d, "org.apache.commons.math.ConvergenceException: ", objArray6);
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 97", objArray6);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[10.0]");
    }

    @Test
    public void test11990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11990");
        java.lang.Throwable throwable5 = null;
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException(throwable5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException((double) 100L, "", (java.lang.Throwable) derivativeException6);
        java.lang.Throwable[] throwableArray8 = functionEvaluationException7.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) ' ', (java.lang.Throwable) functionEvaluationException7);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1, "org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.ConvergenceException convergenceException11 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.ConvergenceException convergenceException12 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException9);
        java.lang.Throwable[] throwableArray13 = functionEvaluationException9.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test11991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11991");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException5 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray4);
        org.apache.commons.math.ode.DerivativeException derivativeException6 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.ode.IntegratorException integratorException7 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray10 = functionEvaluationException9.getSuppressed();
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException9);
        derivativeException5.addSuppressed((java.lang.Throwable) functionEvaluationException9);
        org.apache.commons.math.ode.IntegratorException integratorException13 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) derivativeException5);
        org.apache.commons.math.ConvergenceException convergenceException14 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) integratorException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException14);
        java.lang.Object[] objArray16 = convergenceException14.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException17 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException", objArray16);
        org.apache.commons.math.ode.IntegratorException integratorException18 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 35", objArray16);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test11992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11992");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator8 = null;
        boolean boolean9 = switchingFunctionsHandler0.evaluateStep(stepInterpolator8);
        double double10 = switchingFunctionsHandler0.getEventTime();
        boolean boolean11 = switchingFunctionsHandler0.isEmpty();
        boolean boolean12 = switchingFunctionsHandler0.stop();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction14 = null;
        switchingFunctionsHandler0.add(switchingFunction14, (double) (short) 10, (double) '4', 2);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = switchingFunctionsHandler0.evaluateStep(stepInterpolator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test11993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11993");
        java.lang.Object[] objArray9 = new java.lang.Object[] { 10.0d };
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException13 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 0L, "org.apache.commons.math.ode.DerivativeException: hi!", objArray9, (java.lang.Throwable) convergenceException13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException(Double.NaN, "hi!", objArray9);
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97", objArray9);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 3, (java.lang.Throwable) integratorException17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) 100, (java.lang.Throwable) functionEvaluationException18);
        java.lang.String str21 = functionEvaluationException20.getPattern();
        double double22 = functionEvaluationException20.getArgument();
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[10.0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97" + "'", str21, "org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 97");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
    }

    @Test
    public void test11994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11994");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException14 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray13);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) derivativeException14);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, (java.lang.Throwable) convergenceException15);
        java.lang.Object[] objArray17 = convergenceException15.getArguments();
        org.apache.commons.math.ConvergenceException convergenceException18 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: Evaluation failed for argument = 1", objArray17);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("", objArray17);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException26 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException25);
        java.lang.Throwable[] throwableArray27 = functionEvaluationException25.getSuppressed();
        org.apache.commons.math.ConvergenceException convergenceException28 = new org.apache.commons.math.ConvergenceException("", (java.lang.Object[]) throwableArray27);
        org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) convergenceException28);
        java.lang.String str30 = convergenceException28.getPattern();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException31 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "Evaluation failed for argument = 97", (java.lang.Throwable) convergenceException28);
        java.lang.Object[] objArray32 = functionEvaluationException31.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException33 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) functionEvaluationException31);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((-1.0d), "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: Evaluation failed for argument = 97", objArray17, (java.lang.Throwable) functionEvaluationException31);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException45 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray44);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.IntegratorException integratorException48 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) strArray44);
        org.apache.commons.math.ode.DerivativeException derivativeException49 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ConvergenceException: ", strArray44);
        java.lang.Object[] objArray50 = derivativeException49.getArguments();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((double) 1, "org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ode.DerivativeException: hi!", objArray50);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 1, "Evaluation failed for argument = {0}", objArray17, (java.lang.Throwable) functionEvaluationException51);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException57 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray56);
        org.apache.commons.math.ConvergenceException convergenceException58 = new org.apache.commons.math.ConvergenceException("Evaluation failed for argument = 97", (java.lang.Object[]) strArray56);
        org.apache.commons.math.ConvergenceException convergenceException59 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: ", objArray17, (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(97.0d, "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: ", (java.lang.Throwable) convergenceException58);
        org.apache.commons.math.ode.IntegratorException integratorException61 = new org.apache.commons.math.ode.IntegratorException((java.lang.Throwable) functionEvaluationException60);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!]");
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test11995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11995");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray12);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray12);
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Object[]) strArray12);
        java.lang.Throwable[] throwableArray16 = convergenceException15.getSuppressed();
        org.apache.commons.math.ode.IntegratorException integratorException17 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((double) 1.0f, "org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.ode.IntegratorException integratorException19 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', "org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.ConvergenceException convergenceException21 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Throwable) functionEvaluationException20);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test11996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11996");
        org.apache.commons.math.ConvergenceException convergenceException1 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!");
        java.lang.Throwable[] throwableArray2 = convergenceException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test11997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11997");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double double1 = switchingFunctionsHandler0.getEventTime();
        boolean boolean2 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler4 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray8 = new double[] { (-1.0f), 1.0d };
        boolean boolean9 = switchingFunctionsHandler4.reset((double) (byte) 10, doubleArray8);
        boolean boolean10 = switchingFunctionsHandler4.isEmpty();
        org.apache.commons.math.ode.SwitchingFunction switchingFunction11 = null;
        switchingFunctionsHandler4.add(switchingFunction11, (double) 'a', 100.0d, 100);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler17 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray21 = new double[] { (-1.0f), 1.0d };
        boolean boolean22 = switchingFunctionsHandler17.reset((double) (byte) 10, doubleArray21);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator23 = null;
        boolean boolean24 = switchingFunctionsHandler17.evaluateStep(stepInterpolator23);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator25 = null;
        boolean boolean26 = switchingFunctionsHandler17.evaluateStep(stepInterpolator25);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler28 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray34 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler28.stepAccepted((double) (short) 0, doubleArray34);
        switchingFunctionsHandler17.stepAccepted((double) (-1.0f), doubleArray34);
        boolean boolean37 = switchingFunctionsHandler4.reset((double) (short) -1, doubleArray34);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler39 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray43 = new double[] { (-1.0f), 1.0d };
        boolean boolean44 = switchingFunctionsHandler39.reset((double) (byte) 10, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler46 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray50 = new double[] { (-1.0f), 1.0d };
        boolean boolean51 = switchingFunctionsHandler46.reset((double) (byte) 10, doubleArray50);
        double[] doubleArray57 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean58 = switchingFunctionsHandler46.reset((double) (-1), doubleArray57);
        switchingFunctionsHandler39.stepAccepted((double) (byte) -1, doubleArray57);
        boolean boolean60 = switchingFunctionsHandler4.reset((double) (-1), doubleArray57);
        switchingFunctionsHandler0.stepAccepted((double) '4', doubleArray57);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler63 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray67 = new double[] { (-1.0f), 1.0d };
        boolean boolean68 = switchingFunctionsHandler63.reset((double) (byte) 10, doubleArray67);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator69 = null;
        boolean boolean70 = switchingFunctionsHandler63.evaluateStep(stepInterpolator69);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler72 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray76 = new double[] { (-1.0f), 1.0d };
        boolean boolean77 = switchingFunctionsHandler72.reset((double) (byte) 10, doubleArray76);
        double[] doubleArray83 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean84 = switchingFunctionsHandler72.reset((double) (-1), doubleArray83);
        switchingFunctionsHandler63.stepAccepted(0.0d, doubleArray83);
        boolean boolean86 = switchingFunctionsHandler0.reset((double) (-1), doubleArray83);
        boolean boolean87 = switchingFunctionsHandler0.stop();
        org.apache.commons.math.ode.StepInterpolator stepInterpolator88 = null;
        boolean boolean89 = switchingFunctionsHandler0.evaluateStep(stepInterpolator88);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator90 = null;
        boolean boolean91 = switchingFunctionsHandler0.evaluateStep(stepInterpolator90);
        boolean boolean92 = switchingFunctionsHandler0.isEmpty();
        org.junit.Assert.assertTrue(Double.isNaN(double1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test11998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11998");
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler0 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray4 = new double[] { (-1.0f), 1.0d };
        boolean boolean5 = switchingFunctionsHandler0.reset((double) (byte) 10, doubleArray4);
        org.apache.commons.math.ode.StepInterpolator stepInterpolator6 = null;
        boolean boolean7 = switchingFunctionsHandler0.evaluateStep(stepInterpolator6);
        double[] doubleArray9 = null;
        boolean boolean10 = switchingFunctionsHandler0.reset((double) 100, doubleArray9);
        double double11 = switchingFunctionsHandler0.getEventTime();
        boolean boolean12 = switchingFunctionsHandler0.isEmpty();
        boolean boolean13 = switchingFunctionsHandler0.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler15 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray19 = new double[] { (-1.0f), 1.0d };
        boolean boolean20 = switchingFunctionsHandler15.reset((double) (byte) 10, doubleArray19);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler22 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray26 = new double[] { (-1.0f), 1.0d };
        boolean boolean27 = switchingFunctionsHandler22.reset((double) (byte) 10, doubleArray26);
        double[] doubleArray33 = new double[] { 10, 0.0d, '4', 1.0d };
        boolean boolean34 = switchingFunctionsHandler22.reset((double) (-1), doubleArray33);
        switchingFunctionsHandler15.stepAccepted((double) (byte) -1, doubleArray33);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler37 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray43 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler37.stepAccepted((double) (short) 0, doubleArray43);
        boolean boolean45 = switchingFunctionsHandler15.reset((double) 10L, doubleArray43);
        org.apache.commons.math.ode.SwitchingFunction switchingFunction46 = null;
        switchingFunctionsHandler15.add(switchingFunction46, (double) (byte) 1, (double) (short) 1, (int) (byte) 1);
        boolean boolean51 = switchingFunctionsHandler15.isEmpty();
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler53 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray59 = new double[] { 3, (byte) 0, 100.0d, 100 };
        switchingFunctionsHandler53.stepAccepted((double) (short) 0, doubleArray59);
        org.apache.commons.math.ode.SwitchingFunctionsHandler switchingFunctionsHandler62 = new org.apache.commons.math.ode.SwitchingFunctionsHandler();
        double[] doubleArray66 = new double[] { (-1.0f), 1.0d };
        boolean boolean67 = switchingFunctionsHandler62.reset((double) (byte) 10, doubleArray66);
        boolean boolean68 = switchingFunctionsHandler62.isEmpty();
        double[] doubleArray76 = new double[] { Double.NaN, (short) 100, 100.0d, 100.0f, 0.0f, 10.0f };
        switchingFunctionsHandler62.stepAccepted((double) (-1L), doubleArray76);
        switchingFunctionsHandler53.stepAccepted((double) (byte) 10, doubleArray76);
        boolean boolean79 = switchingFunctionsHandler15.reset(32.0d, doubleArray76);
        boolean boolean80 = switchingFunctionsHandler0.reset((double) ' ', doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 0.0, 52.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[3.0, 0.0, 100.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[NaN, 100.0, 100.0, 100.0, 0.0, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test11999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test11999");
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        org.apache.commons.math.ode.DerivativeException derivativeException9 = new org.apache.commons.math.ode.DerivativeException("hi!", strArray8);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) 100, "", (java.lang.Object[]) strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException11 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException12 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.ode.IntegratorException: org.apache.commons.math.ConvergenceException: ", strArray8);
        org.apache.commons.math.ode.DerivativeException derivativeException13 = new org.apache.commons.math.ode.DerivativeException("org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ConvergenceException: ", strArray8);
        org.apache.commons.math.ode.IntegratorException integratorException14 = new org.apache.commons.math.ode.IntegratorException("org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.ConvergenceException: org.apache.commons.math.ode.DerivativeException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.IntegratorException: Evaluation failed for argument = 2", (java.lang.Object[]) strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest23.test12000");
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException8 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        java.lang.Throwable[] throwableArray9 = functionEvaluationException8.getSuppressed();
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 'a');
        org.apache.commons.math.ConvergenceException convergenceException15 = new org.apache.commons.math.ConvergenceException("hi!", (java.lang.Throwable) functionEvaluationException14);
        functionEvaluationException11.addSuppressed((java.lang.Throwable) convergenceException15);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, "org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9, (java.lang.Throwable) functionEvaluationException11);
        java.lang.Throwable throwable18 = null;
        org.apache.commons.math.ConvergenceException convergenceException19 = new org.apache.commons.math.ConvergenceException(throwable18);
        org.apache.commons.math.ConvergenceException convergenceException20 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.FunctionEvaluationException: ", (java.lang.Object[]) throwableArray9, throwable18);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '4', "org.apache.commons.math.ode.DerivativeException: Evaluation failed for argument = 1", (java.lang.Object[]) throwableArray9);
        org.apache.commons.math.ConvergenceException convergenceException22 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: org.apache.commons.math.FunctionEvaluationException: org.apache.commons.math.ode.DerivativeException: hi!", (java.lang.Object[]) throwableArray9);
        java.lang.Object[] objArray23 = convergenceException22.getArguments();
        org.apache.commons.math.ode.DerivativeException derivativeException24 = new org.apache.commons.math.ode.DerivativeException((java.lang.Throwable) convergenceException22);
        org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) (byte) -1, (java.lang.Throwable) convergenceException22);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }
}

