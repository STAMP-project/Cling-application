import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder67.getA3();
        double[] doubleArray74 = rotation66.getAngles(rotationOrder67);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation54.applyTo(rotation66);
        double double76 = rotation54.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZYZ" + "'", str57, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(10000.0d, 0.6652716507048932d, 2.9096832682140223d, (double) 1L, false);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10000.0d + "'", double6 == 10000.0d);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D57.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.negate();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D64);
        double double67 = rotation66.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA2();
        java.lang.String str71 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 0.5378050714624897d, (-0.13182419629852823d), 0.8775825618903728d);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation66.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation5.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (-128.0d), (double) 100, (-634.6978979926987d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str86 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder85.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(rotationOrder85, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str94 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder85.getA3();
        double[] doubleArray96 = rotation84.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Rotation rotation97 = rotation84.revert();
        org.apache.commons.math.geometry.Rotation rotation98 = rotation78.applyInverseTo(rotation84);
        java.lang.Class<?> wildcardClass99 = rotation84.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.5707963267948961d + "'", double67 == 1.5707963267948961d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZY" + "'", str71, "XZY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ZXY" + "'", str86, "ZXY");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "ZXY" + "'", str94, "ZXY");
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[3.0839714812479087, -0.3012102754101647, -0.40674968370342685]");
        org.junit.Assert.assertNotNull(rotation97);
        org.junit.Assert.assertNotNull(rotation98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException17.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray19);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException22.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        notARotationMatrixException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) notARotationMatrixException20);
        java.lang.Object[] objArray32 = notARotationMatrixException20.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray32);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException33);
        java.lang.String str35 = notARotationMatrixException33.getPattern();
        java.lang.Throwable[] throwableArray36 = notARotationMatrixException33.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D49, 0.6654428555205447d, vector3D54);
        double double56 = vector3D54.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str67 = rotationOrder62.toString();
        double[] doubleArray68 = rotation61.getAngles(rotationOrder62);
        double double69 = rotation61.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        java.lang.String str73 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str78 = rotationOrder70.toString();
        java.lang.String str79 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 1.5707963267948966d, 10000.0d, 0.24893698743024015d);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (-0.4245292707565737d), 27.47493735326811d, 0.36259815178588733d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 2.0186255278998044d, (-0.3041288806189819d), 0.47011525616512123d);
        double[] doubleArray93 = rotation61.getAngles(rotationOrder70);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.negate();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D54.add(vector3D95);
        double double97 = vector3D96.getY();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYZ" + "'", str67, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.44538811899676645d + "'", double69 == 0.44538811899676645d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXY" + "'", str71, "ZXY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXY" + "'", str73, "ZXY");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[1.974187773466128, -0.4784873946230179, 2.058723794751967]");
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.0d) + "'", double97 == (-0.0d));
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.26237485370392877d, (-0.14599455657272695d), 0.23869349855450123d, 0.42487699275774343d, true);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.7422635175139827d + "'", double6 == 0.7422635175139827d);
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str5 = rotationOrder0.toString();
        java.lang.String str6 = rotationOrder0.toString();
        java.lang.String str7 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZYZ" + "'", str5, "ZYZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZYZ" + "'", str7, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        double double15 = vector3D11.getY();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) (short) 10, (double) (short) -1, (double) '#', false);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.subtract(1.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.subtract(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D48, vector3D51, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D73.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.subtract(100.0022140464598d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation21.applyInverseTo(vector3D81);
        double double83 = org.apache.commons.math.geometry.Vector3D.angle(vector3D11, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.7525070711305496d, vector3D84);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.580795772103955d + "'", double83 == 1.580795772103955d);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.6314722015699525d, 2.349555921538759d, 1.278124800288793d, (double) 100.0f, true);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        double double35 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D9, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D5, (-0.8414709848078965d), vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation43.applyTo(rotation48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation43.applyInverseTo(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D5.subtract((-1.0027048888022863d), vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(0.6178548206313739d, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation64.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA3();
        double[] doubleArray69 = rotation65.getAngles(rotationOrder66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D58.subtract(vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder72.getA3();
        java.lang.String str76 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder72.getA2();
        double double83 = vector3D82.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D70.add(vector3D82);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XZX" + "'", str8, "XZX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.0d + "'", double35 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXY" + "'", str73, "ZXY");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ZXY" + "'", str76, "ZXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.9285846546495912d, 1.5707963267948968d);
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        double double30 = vector3D23.getY();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) (short) 1, (-1.0d), 98.0d);
        double double39 = rotation38.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D23.add((double) (byte) -1, vector3D41);
        double double45 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation18.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D23.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder49.getA2();
        java.lang.String str57 = rotationOrder49.toString();
        java.lang.String str58 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.negate();
        double double61 = vector3D59.getX();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray68 = rotation67.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D59.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D23.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D12.subtract(0.0d, vector3D23);
        double double73 = vector3D23.getZ();
        double double74 = vector3D23.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.6654428555205447d + "'", double39 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D1, vector3D5);
        double double10 = vector3D9.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (double) (byte) -1, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D15);
        double double17 = vector3D16.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.5707963267948966d + "'", double10 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.5786086678549978d + "'", double17 == 1.5786086678549978d);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation10);
        double double14 = rotation10.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray50 = rotation44.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation39.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.add((-1.0d), vector3D69);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D75, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation78 = rotation44.applyTo(rotation77);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray80 = rotation44.getAngles(rotationOrder79);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation10.applyTo(rotation44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder83.getA2();
        java.lang.String str89 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation94 = rotation10.applyTo(rotation93);
        double[][] doubleArray95 = rotation10.getMatrix();
        double double96 = rotation10.getQ1();
        double double97 = rotation10.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.45072064175038395d + "'", double14 == 0.45072064175038395d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ZYZ" + "'", str89, "ZYZ");
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.5277475438952628d + "'", double96 == 0.5277475438952628d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.6654428555205447d + "'", double97 == 0.6654428555205447d);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), 2.356194490192345d, (-634.6978979926987d), 0.42487699275774343d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D31, vector3D34, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation65.revert();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation5.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA3();
        java.lang.String str72 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        java.lang.String str77 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder68.getA1();
        java.lang.String str79 = rotationOrder68.toString();
        double[] doubleArray80 = rotation67.getAngles(rotationOrder68);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (-0.004742997713180494d), 0.6066147582383538d, (-0.031224596960255053d));
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (-3.110368056629538d), 1.3216352566692848d, 3.1382470946270726d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXY" + "'", str72, "ZXY");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXY" + "'", str77, "ZXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[2.8138236185879273, -0.4752568771699227, -2.2201396512775835]");
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation5.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation55.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        java.lang.String str60 = rotationOrder58.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 7.880514097121173d, 100.0d, (-0.45973278686101987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray76 = rotation70.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double82 = rotation81.getQ0();
        double double83 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation84 = rotation70.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation65.applyInverseTo(rotation84);
        double double86 = rotation84.getAngle();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation92.getAxis();
        double double94 = rotation92.getQ0();
        org.apache.commons.math.geometry.Rotation rotation95 = rotation84.applyInverseTo(rotation92);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation55.applyInverseTo(rotation92);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "XYX" + "'", str60, "XYX");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.24893698743024015d + "'", double82 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.8415352216177445d + "'", double83 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.031204323970714824d + "'", double94 == 0.031204323970714824d);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(rotation96);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        double[][] doubleArray13 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 24.882865501017502d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 0.5224674736269327d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D19 = rotation17.applyTo(vector3D18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.37481384288189196d, 0.37481384288189196d, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.scalarMultiply(100.0d);
        double double12 = vector3D11.getX();
        double double13 = vector3D11.getX();
        double double14 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.negate();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.subtract(vector3D40);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D40);
        double double43 = vector3D11.getY();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D11.scalarMultiply(0.6178548206313739d);
        double double46 = vector3D11.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder48.getA2();
        java.lang.String str56 = rotationOrder48.toString();
        java.lang.String str57 = rotationOrder48.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA2();
        java.lang.String str63 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double70 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        double double77 = vector3D74.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.orthogonal();
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation84.applyTo(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D79.add(0.8390715290764523d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D89.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D69, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(3.1330314046616845d, vector3D11, 0.46630897150381445d, vector3D64, 0.13322414396144652d, vector3D89);
        double double93 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D11);
        double double94 = vector3D11.getX();
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXY" + "'", str6, "ZXY");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10000.0d + "'", double43 == 10000.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10000.0d + "'", double46 == 10000.0d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXY" + "'", str56, "ZXY");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXZ" + "'", str63, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.0d) + "'", double70 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.7853981633974483d + "'", double93 == 0.7853981633974483d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation13.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D34.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D34);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation13.applyTo(rotation40);
        double[][] doubleArray42 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray42);
        java.lang.String str44 = notARotationMatrixException43.getPattern();
        java.lang.Object[] objArray45 = notARotationMatrixException43.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str44, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.orthogonal();
        double double16 = vector3D14.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5277475438952628d + "'", double6 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 3.110352820159525d + "'", double16 == 3.110352820159525d);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D13, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        java.lang.String str18 = rotationOrder16.toString();
        double[] doubleArray19 = rotation15.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation7.applyTo(vector3D21);
        double[][] doubleArray23 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray23);
        java.lang.String str26 = notARotationMatrixException25.toString();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZYZ" + "'", str3, "ZYZ");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5153978362128364d + "'", double8 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.1934112408002968d) + "'", double9 == (-0.1934112408002968d));
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX" + "'", str26, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX");
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray10);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Object[] objArray28 = notARotationMatrixException17.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray38 = cardanEulerSingularityException34.getArguments();
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.String str40 = cardanEulerSingularityException34.getPattern();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.Object[] objArray45 = cardanEulerSingularityException43.getArguments();
        java.lang.String str46 = cardanEulerSingularityException43.getPattern();
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException43.getSuppressed();
        java.lang.Object[] objArray49 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException55 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray54);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException57.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.String str63 = cardanEulerSingularityException61.getPattern();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        notARotationMatrixException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray66 = notARotationMatrixException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException68.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        java.lang.String str74 = cardanEulerSingularityException72.getPattern();
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Object[] objArray76 = cardanEulerSingularityException72.getArguments();
        notARotationMatrixException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.String str78 = notARotationMatrixException55.getPattern();
        cardanEulerSingularityException43.addSuppressed((java.lang.Throwable) notARotationMatrixException55);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.String str81 = cardanEulerSingularityException34.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Euler angles singularity" + "'", str74, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str78, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str81, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D0.negate();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D0, (-0.6502970659532881d));
        double double13 = rotation12.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.9476032880770017d + "'", double13 == 0.9476032880770017d);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getQ3();
        double[][] doubleArray37 = rotation35.getMatrix();
        double double38 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA1();
        java.lang.String str48 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder45.getA3();
        double[] doubleArray50 = rotation44.getAngles(rotationOrder45);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder45.getA2();
        double[] doubleArray52 = rotation35.getAngles(rotationOrder45);
        double double53 = rotation35.getQ2();
        double double54 = rotation35.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.11078585244669703d + "'", double36 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.476811323902129d) + "'", double38 == (-0.476811323902129d));
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YXZ" + "'", str46, "YXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "YXZ" + "'", str48, "YXZ");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-2.234489416233763, 0.563595159307288, -0.6152787481864835]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.7860080026179649d) + "'", double53 == (-0.7860080026179649d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.7860080026179649d) + "'", double54 == (-0.7860080026179649d));
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-0.6918710786346925d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation51.revert();
        double double54 = rotation53.getQ0();
        double double55 = rotation53.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.476811323902129d + "'", double54 == 0.476811323902129d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.11078585244669703d + "'", double55 == 0.11078585244669703d);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation26.applyTo(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation26.getAxis();
        double[][] doubleArray31 = rotation26.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray31);
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation47 = rotation40.applyInverseTo(rotation46);
        double double48 = rotation47.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D68);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D64);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation73.revert();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation47.applyTo(rotation74);
        double[][] doubleArray76 = rotation47.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray76);
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException77);
        java.lang.Object[] objArray79 = notARotationMatrixException77.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (byte) 10, 2.0d, Double.NaN, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D18.negate();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation6.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D50.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation6.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((-2.6615083595505498d), 0.008561248928108734d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.33931220530841594d, vector3D57, 0.12144872085901345d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.negate();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D28, (double) 100.0f, vector3D36, (double) (short) -1, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D20.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D36, (-0.7683919425686428d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.normalize();
        double double79 = vector3D77.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D77, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.negate();
        double double85 = vector3D84.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation5.applyTo(vector3D84);
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str88 = rotationOrder87.toString();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder87.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D84.subtract(vector3D94);
        double double96 = vector3D84.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.0d) + "'", double85 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZYZ" + "'", str88, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.Throwable[] throwableArray25 = cardanEulerSingularityException23.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.Object[] objArray37 = notARotationMatrixException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray49 = notARotationMatrixException26.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException51.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        java.lang.String str57 = cardanEulerSingularityException55.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Object[] objArray59 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException67.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.String str73 = cardanEulerSingularityException71.getPattern();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        notARotationMatrixException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) notARotationMatrixException65);
        notARotationMatrixException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Object[] objArray79 = cardanEulerSingularityException55.getArguments();
        java.lang.String str80 = cardanEulerSingularityException55.getPattern();
        java.lang.String str81 = cardanEulerSingularityException55.getPattern();
        java.lang.Throwable[] throwableArray82 = cardanEulerSingularityException55.getSuppressed();
        java.lang.Throwable[] throwableArray83 = cardanEulerSingularityException55.getSuppressed();
        java.lang.String str84 = cardanEulerSingularityException55.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Euler angles singularity" + "'", str81, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str84, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException12.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        double[][] doubleArray35 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray35);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException36);
        java.lang.Throwable[] throwableArray38 = notARotationMatrixException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str42 = cardanEulerSingularityException41.getPattern();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException46.getSuppressed();
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        notARotationMatrixException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.String str50 = notARotationMatrixException36.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        java.lang.String str55 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Object[] objArray58 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray59 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException52.getSuppressed();
        java.lang.String str61 = cardanEulerSingularityException52.getPattern();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException52.getSuppressed();
        notARotationMatrixException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.String str64 = cardanEulerSingularityException52.toString();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Cardan angles singularity" + "'", str42, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str64, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) ' ', (double) '4', (double) 'a');
        double[] doubleArray85 = rotation74.getAngles(rotationOrder76);
        double[][] doubleArray86 = rotation74.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str88 = rotationOrder87.toString();
        java.lang.String str89 = rotationOrder87.toString();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder87.getA2();
        double[] doubleArray91 = rotation74.getAngles(rotationOrder87);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (-0.006392032391590654d), 0.8111383753205208d, 1.9999333306670476E-4d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation95.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D96.orthogonal();
        double double98 = vector3D96.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXY" + "'", str77, "ZXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-0.0, 0.0, 0.010518226214961658]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXY" + "'", str88, "ZXY");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ZXY" + "'", str89, "ZXY");
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-0.0, 0.0, 0.010518226214961658]");
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-0.0073432339887996734d) + "'", double98 == (-0.0073432339887996734d));
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        java.lang.String str3 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YZX" + "'", str2, "YZX");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YZX" + "'", str3, "YZX");
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        double double47 = rotation46.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation46.getAxis();
        double double49 = rotation46.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 0.5114629390766603d, 268.47048776580107d, (-0.8659616593396997d));
        double double62 = rotation61.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        double double69 = vector3D66.getDelta();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D66, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation71.applyTo(vector3D74);
        double[][] doubleArray76 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(doubleArray76, 24.882865501017502d);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation61.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation46.applyTo(rotation78);
        double double81 = rotation78.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-6.626528147811479d) + "'", double47 == (-6.626528147811479d));
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-6.626528147811479d) + "'", double49 == (-6.626528147811479d));
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.7314357655099082d) + "'", double62 == (-0.7314357655099082d));
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.0553984905820601d, 2.356194490192345d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        double double4 = vector3D3.getDelta();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.7853981633974484d + "'", double4 == 0.7853981633974484d);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4980969221327614d, 0.8762551259675299d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YXZ" + "'", str5, "YXZ");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(44.73431728565376d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.add(0.0d, vector3D6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        double double22 = vector3D21.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation5.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation29.applyTo(rotation41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyInverseTo(rotation55);
        double double57 = rotation56.getQ2();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation29.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation77 = rotation70.applyInverseTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation64.applyTo(rotation76);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation29.applyInverseTo(rotation78);
        double double80 = rotation79.getAngle();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation5.applyTo(rotation79);
        double[][] doubleArray82 = rotation81.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray82);
        java.lang.String str84 = notARotationMatrixException83.getPattern();
        java.lang.Object[] objArray85 = notARotationMatrixException83.getArguments();
        java.lang.Object[] objArray86 = notARotationMatrixException83.getArguments();
        java.lang.Object[] objArray87 = notARotationMatrixException83.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str84, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[[830193.206667806, -379200.28563515923, 956470.4679110092], [-693797.6830873819, 1830591.4735872927, 147028.8952556341], [-759785.0930060893, -599316.1640334133, 638339.979817053]]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[[830193.206667806, -379200.28563515923, 956470.4679110092], [-693797.6830873819, 1830591.4735872927, 147028.8952556341], [-759785.0930060893, -599316.1640334133, 638339.979817053]]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[[830193.206667806, -379200.28563515923, 956470.4679110092], [-693797.6830873819, 1830591.4735872927, 147028.8952556341], [-759785.0930060893, -599316.1640334133, 638339.979817053]]");
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8342233605065102d, (-10.53200198742562d), (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.0189832222323367d, (-0.6551684173807351d), 0.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6665200360546983d), 100.0022140464598d, (-1.4533522819483131d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.006392075920084087d, 2.505675971890479d, 0.9985383670628745d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.590031694590281d, 0.2520878998432229d, (-0.21114476788661177d));
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder0.getA3();
        double double20 = vector3D19.getNorm();
        double double21 = vector3D19.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA3();
        java.lang.String str33 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.24445647922771854d), (-0.3058692615856505d), (-0.40434811849845775d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder38.getA2();
        double[] doubleArray43 = rotation37.getAngles(rotationOrder38);
        double double44 = rotation37.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "XZX" + "'", str39, "XZX");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[1.8500272884528914, 0.40093075562648783, -2.2035471790361836]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.17877979577947714d + "'", double44 == 0.17877979577947714d);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8342233605065102d, (-0.5033082423383954d), 3.2087642143727657d, (-0.8414709848078965d), true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        double double12 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D17.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.subtract((double) 0, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D28.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D26.add(2.0d, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D9, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation5.applyInverseTo(vector3D37);
        double double41 = rotation5.getQ0();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyInverseTo(rotation73);
        double double75 = rotation74.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation47.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation5.applyTo(rotation47);
        double double78 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.24128760013418724d + "'", double41 == 0.24128760013418724d);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2.654207783697167d + "'", double78 == 2.654207783697167d);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getQ3();
        double[][] doubleArray37 = rotation35.getMatrix();
        double double38 = rotation35.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder39.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D41.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.normalize();
        double double44 = vector3D42.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D42.subtract(vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation55.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        double double73 = vector3D66.getY();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) (short) 1, (-1.0d), 98.0d);
        double double82 = rotation81.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation81.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D83);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D84, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D66.add((double) (byte) -1, vector3D84);
        double double88 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation61.applyInverseTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D66.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation55.applyInverseTo(vector3D91);
        double double93 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D42, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation35.applyTo(vector3D42);
        double double95 = vector3D42.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.11078585244669703d + "'", double36 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.476811323902129d) + "'", double38 == (-0.476811323902129d));
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZYZ" + "'", str51, "ZYZ");
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.6654428555205447d + "'", double82 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.0d + "'", double95 == 1.0d);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.3877787807814457E-17d, (-0.2194399632114593d), (-0.8775825618903728d), 0.8942012921495908d, true);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-10.53200198742562d), 100.0d, (-0.6502970659532881d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        double double28 = rotation20.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation20.getAxis();
        double[][] doubleArray30 = rotation20.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray30, 1.5607966601082315d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation32.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation14.applyTo(vector3D33);
        double double35 = vector3D34.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.5114629390766603d + "'", double28 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.5007445091504374d) + "'", double35 == (-0.5007445091504374d));
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(13.650339960825711d, (-0.2194399632114593d), 1.4807974150702279d, (-0.11083328512893442d), false);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.getAxis();
        double double10 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.496669722445646d + "'", double10 == 0.496669722445646d);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.26237485370392877d, (-0.14599455657272695d), 0.23869349855450123d, 0.42487699275774343d, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        double double21 = rotation20.getQ2();
        double double22 = rotation20.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D29, (double) 100.0f, vector3D37, (double) (short) -1, vector3D57);
        double double65 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        double double80 = vector3D77.getDelta();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D77, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.subtract(0.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D89.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D85, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D29, (double) (byte) 10, vector3D72, (double) (short) -1, vector3D77, (double) ' ', vector3D89);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation20.applyTo(rotation95);
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation5.applyInverseTo(vector3D97);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.45837097592276116d + "'", double6 == 0.45837097592276116d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.4169994583486512d + "'", double7 == 0.4169994583486512d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        double double20 = vector3D16.getY();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) (short) 10, (double) (short) -1, (double) '#', false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.subtract(1.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.subtract(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D51, vector3D53, vector3D56, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D78.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.subtract(100.0022140464598d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation26.applyInverseTo(vector3D86);
        double double88 = org.apache.commons.math.geometry.Vector3D.angle(vector3D16, vector3D86);
        double double89 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D5, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(0.5334000320841179d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.580795772103955d + "'", double88 == 1.580795772103955d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-100.0022140464598d) + "'", double89 == (-100.0022140464598d));
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.37440857548747325d, 0.464523755405321d, 16.62763166455332d, 0.49805775998817126d, true);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double4 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D8);
        double double15 = vector3D8.getY();
        double double16 = vector3D8.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D42, vector3D45, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D8, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, vector3D3, 2.0678198605632665d, vector3D69, (-2.0d), vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), (-0.24987572770084396d), (-0.476811323902129d));
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D76.subtract(0.0d, vector3D81);
        double double83 = vector3D82.getDelta();
        double double84 = vector3D82.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.subtract(vector3D82);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.42487699275774343d + "'", double4 == 0.42487699275774343d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5707963267948966d + "'", double84 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double9 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 35.0d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXZ", (java.lang.Object[]) doubleArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray18, (-634.6978979926987d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.2112625254810094d + "'", double9 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(doubleArray18);
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray5 = rotation4.getMatrix();
        double double6 = rotation4.getQ1();
        double[][] doubleArray7 = rotation4.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(0.9271000934009814d, 0.2152515705638135d, 3.0d, (-0.4245292707565737d), false);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        double double21 = rotation20.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.45973278686101987d) + "'", double6 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.0d, 0.5114629390766603d, 1.6134380694273582d, (double) 0L, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str15 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder6.getA2();
        double[] doubleArray18 = rotation5.getAngles(rotationOrder6);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-0.25460653567566177, -0.30261940292332173, -1.3966763001570004]");
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(64.0d, (-0.009999666686665238d), (-74.54563732201893d), (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation21.applyTo(vector3D25);
        double double29 = rotation21.getQ0();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (double) 100, 0.0d, (double) (short) -1, true);
        double double36 = rotation35.getQ0();
        double double37 = rotation35.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation50.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation50.getAxis();
        double[][] doubleArray55 = rotation50.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation64 = rotation58.applyInverseTo(rotation63);
        double double65 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation35.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation21.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation11.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation5.applyTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation11.getAxis();
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.0955424909088009d) + "'", double29 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZYZ" + "'", str60, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.7683919425686427d) + "'", double65 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double7 = rotation6.getQ2();
        double double8 = rotation6.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        java.lang.String str17 = rotationOrder15.toString();
        double[] doubleArray18 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation6.applyTo(vector3D20);
        double[][] doubleArray22 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) doubleArray22);
        java.lang.Object[] objArray24 = notARotationMatrixException23.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.5153978362128364d + "'", double7 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.1934112408002968d) + "'", double8 == (-0.1934112408002968d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XYX" + "'", str17, "XYX");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[[0.393914324718432, 0.8621935740491333, -0.31851804603507755], [0.858881900606894, -0.46869349358648715, -0.20651462388795433], [-0.3273429174298899, -0.19222031614289703, -0.9251475365964139]]");
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation6.applyTo(vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        double double42 = vector3D41.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation25.applyTo(vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str45 = rotationOrder44.toString();
        double[] doubleArray46 = rotation25.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D15.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation6.applyTo(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D53.normalize();
        double double55 = vector3D53.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7517138405908373d + "'", double55 == 0.7517138405908373d);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8390715290764523d, (-0.0013651261847257446d), 3.141592653589793d);
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        double double12 = vector3D11.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "YXZ" + "'", str9, "YXZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 97.94123465760424d, 32.0d, (-0.004280611391220551d));
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        java.lang.Class<?> wildcardClass8 = rotation6.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray11);
        java.lang.Throwable[] throwableArray13 = notARotationMatrixException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = notARotationMatrixException12.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.String str19 = cardanEulerSingularityException17.getPattern();
        java.lang.String str20 = cardanEulerSingularityException17.getPattern();
        java.lang.Object[] objArray21 = cardanEulerSingularityException17.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray21);
        notARotationMatrixException12.addSuppressed((java.lang.Throwable) notARotationMatrixException22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray28 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray28);
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) notARotationMatrixException29);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Euler angles singularity" + "'", str20, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray19 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray19);
        java.lang.String str21 = notARotationMatrixException20.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "XZX" + "'", str21, "XZX");
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation12.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation12.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.orthogonal();
        double double24 = vector3D23.getY();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D5.add((-0.6551684173807351d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (double) 0.0f, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D25.subtract(0.13322414396144652d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.negate();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.8846219209894443d + "'", double24 == 0.8846219209894443d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        double double53 = rotation51.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation65.applyTo(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation51.applyInverseTo(rotation65);
        double double75 = rotation65.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.11078585244669703d + "'", double53 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.5114629390766603d + "'", double75 == 0.5114629390766603d);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        double double19 = vector3D18.getY();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D10.add(0.2628569025237593d, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder21.getA2();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (-0.05647313889782858d), (-0.7265133934792274d), 0.8464661308088944d);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, 1.4176019334124608d, 1.5179595270946264d, 0.027482415555279194d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D36.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(0.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D53, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(2.7755575615628914E-17d, 0.0d, 0.46630897150381445d, 0.28742517866390543d, false);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        double double69 = vector3D66.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D66.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.orthogonal();
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation76.applyTo(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D71.add(0.8390715290764523d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation62.applyTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D(0.6174075626500691d, vector3D42, 10.618890631312926d, vector3D45, (-16445.115990686714d), vector3D53, 0.5378050714624897d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D33, vector3D34, vector3D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.3078507869034174d) + "'", double19 == (-0.3078507869034174d));
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZYZ" + "'", str51, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D30.negate();
        double double32 = vector3D30.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply(100.0d);
        double double41 = vector3D40.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(0.47011525616512123d, vector3D5, 3.141592653589793d, vector3D30, 0.0d, vector3D40);
        double double43 = vector3D30.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.0d + "'", double32 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.5707963267948966d + "'", double41 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 3.141592653589793d + "'", double43 == 3.141592653589793d);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        double double8 = rotation7.getAngle();
        double double9 = rotation7.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (-0.0d), 2.23606797749979d, 2.0985845029684933d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) 10L, 0.9765213798493405d, (-1.5707963267948966d), (double) (short) 100, false);
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation7.applyInverseTo(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.0357975100483765d + "'", double8 == 2.0357975100483765d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0357975100483765d + "'", double9 == 2.0357975100483765d);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0022140464598d);
        double double34 = rotation33.getQ2();
        double[][] doubleArray35 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray35, (double) ' ');
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray35);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(doubleArray35, 0.9988929054468333d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA2();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder41.getA2();
        java.lang.String str49 = rotationOrder41.toString();
        java.lang.String str50 = rotationOrder41.toString();
        double[] doubleArray51 = rotation40.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, 1.080456683454306d, 0.0d, (-0.05514310635936155d));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.2551713383813414d) + "'", double34 == (-0.2551713383813414d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZXZ" + "'", str49, "ZXZ");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXZ" + "'", str50, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.6862719327339488, 0.5225636171963509, -1.7678620251573711]");
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.03335368554704087d, (-0.10950411248583052d), 0.5629528985411225d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        double double5 = vector3D4.getNorm();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.5744733109263925d + "'", double5 == 0.5744733109263925d);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA3();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder6);
        double double12 = rotation4.getAngle();
        double double13 = rotation4.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.8662089827552298d) + "'", double5 == (-0.8662089827552298d));
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XZX" + "'", str7, "XZX");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.5911320301150214, 2.1817925909340987, -1.025435474584856]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.4924377791714627d + "'", double12 == 2.4924377791714627d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.4924377791714627d + "'", double13 == 2.4924377791714627d);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation32.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        double double37 = org.apache.commons.math.geometry.Vector3D.angle(vector3D20, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        double double67 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D52, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D38.add(vector3D63);
        double double69 = vector3D63.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 98.0d + "'", double67 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.8790056663063665d), 1.0708381896608017d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.6173610802715999d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D13.subtract((double) 0, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D19.add(2.0d, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder33.getA2();
        java.lang.String str41 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D50.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D19, (-10.53200198742562d), vector3D48, 0.9765213798493405d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.negate();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        double double70 = vector3D67.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D67.orthogonal();
        double double72 = vector3D67.getY();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D61.subtract(0.3273551284312965d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.scalarMultiply((-6.233699021863243E-4d));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXZ" + "'", str41, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.4176019334124608d, 524.7609754926534d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        double double4 = vector3D2.getZ();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.1147490160742295d) + "'", double4 == (-0.1147490160742295d));
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str11 = rotationOrder6.toString();
        double[] doubleArray12 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation19.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        double double31 = vector3D24.getY();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) (short) 1, (-1.0d), 98.0d);
        double double40 = rotation39.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D41);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D42, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D24.add((double) (byte) -1, vector3D42);
        double double46 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation19.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D24.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder50.getA2();
        java.lang.String str58 = rotationOrder50.toString();
        java.lang.String str59 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D60.negate();
        double double62 = vector3D60.getX();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray69 = rotation68.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D60.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D24.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D13.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.9967696180958361d, vector3D73);
        double double75 = vector3D74.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZYZ" + "'", str11, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.6654428555205447d + "'", double40 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXY" + "'", str59, "ZXY");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.9967696180958361d + "'", double75 == 0.9967696180958361d);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        org.apache.commons.math.geometry.Rotation rotation1 = new org.apache.commons.math.geometry.Rotation();
        double double2 = rotation1.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation1.applyInverseTo(rotation9);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 0.7853981633974482d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 2.0147983581473317d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray12, (-0.5033082423383954d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.scalarMultiply((-4.0d));
        double double7 = vector3D3.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        double double16 = vector3D9.getY();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (short) 1, (-1.0d), 98.0d);
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D9.add((double) (byte) -1, vector3D27);
        double double31 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation4.applyInverseTo(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D9.scalarMultiply(3.1330314046616845d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D9.add(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.6654428555205447d + "'", double25 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D2.subtract(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D11, (double) 100.0f, vector3D19, (double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D46, vector3D52);
        double double54 = vector3D52.getZ();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D59, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA3();
        java.lang.String str64 = rotationOrder62.toString();
        double[] doubleArray65 = rotation61.getAngles(rotationOrder62);
        java.lang.String str66 = rotationOrder62.toString();
        double[] doubleArray67 = rotation55.getAngles(rotationOrder62);
        java.lang.Class<?> wildcardClass68 = doubleArray67.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 98.0d + "'", double53 == 98.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "XYX" + "'", str64, "XYX");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "XYX" + "'", str66, "XYX");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.12637150995481888d, 13.903082980735348d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D9.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-1.0d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D9.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D3.add(vector3D77);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder82.getA2();
        java.lang.String str90 = rotationOrder82.toString();
        java.lang.String str91 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D81.add(vector3D94);
        double double97 = vector3D94.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ZXY" + "'", str90, "ZXY");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ZXY" + "'", str91, "ZXY");
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        double[][] doubleArray14 = rotation13.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation13.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation28.applyTo(rotation42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D51.subtract((double) 0, vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str68 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder59.getA2();
        double double71 = vector3D70.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D51.add((double) 100L, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation28.applyTo(vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) (short) 1, (-1.0d), 98.0d);
        double double79 = rotation78.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA3();
        double[] doubleArray83 = rotation78.getAngles(rotationOrder80);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation28.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation13.applyTo(rotation78);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation85.getAxis();
        double double87 = vector3D86.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXY" + "'", str60, "ZXY");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.6654428555205447d + "'", double79 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.8333582113131032d) + "'", double87 == (-0.8333582113131032d));
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(32.0d, 0.3691205271584663d, 3.2087642143727657d, 2.356194490192345d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation5.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (short) 1, (-1.0d), 98.0d);
        double double21 = rotation20.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation20.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation28.applyTo(rotation40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        double double56 = rotation55.getQ2();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation28.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation76 = rotation69.applyInverseTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation63.applyTo(rotation75);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation28.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation78.getAxis();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation20.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation78.revert();
        double double82 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation5.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation81.revert();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZYZ" + "'", str7, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.6654428555205447d + "'", double21 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 788.3701330754276d + "'", double82 == 788.3701330754276d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.3514095301085486d, (-0.9113108625632632d), 0.0d);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9186914001662628d, (-1.12493765766273d), 10.407336385934148d, 0.22181030239473884d, true);
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray10 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double16 = rotation15.getQ0();
        double double17 = rotation15.getQ2();
        org.apache.commons.math.geometry.Rotation rotation18 = rotation4.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation30.applyTo(vector3D32);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation39.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation30.applyTo(rotation51);
        double double55 = rotation54.getQ3();
        double[][] doubleArray56 = rotation54.getMatrix();
        double double57 = rotation54.getQ0();
        double double58 = rotation54.getAngle();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation4.applyTo(rotation54);
        double[][] doubleArray60 = rotation4.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyInverseTo(rotation72);
        double double74 = rotation66.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D76, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation66.applyTo(vector3D80);
        double[][] doubleArray86 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(doubleArray86, 0.5629528985411225d);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(doubleArray86, 0.3735607400861295d);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation4.applyInverseTo(rotation90);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.24893698743024015d + "'", double16 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.8415352216177445d + "'", double17 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.11078585244669703d + "'", double55 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.476811323902129d) + "'", double57 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2.1475455860530537d + "'", double58 == 2.1475455860530537d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.7683919425686428d) + "'", double74 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(rotation91);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4.341241737144209E-18d, 2.0678198605632665d, 6.3007480475286926d, (-0.04104628521447248d), false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        double[] doubleArray36 = rotation31.getAngles(rotationOrder33);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        double double41 = rotation40.getQ1();
        double double42 = rotation40.getQ3();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) (short) 10, (-54.50256143565405d), (-1.0d), 0.8390715290764523d, true);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D68);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray84 = rotation78.getAngles(rotationOrder79);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation73.applyInverseTo(rotation78);
        double[][] doubleArray86 = rotation78.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation48.applyTo(rotation78);
        double double88 = rotation87.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation40.applyTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation5.applyTo(rotation40);
        double double91 = rotation40.getQ0();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation40.revert();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.10950411248583052d) + "'", double41 == (-0.10950411248583052d));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.6985763017371048d) + "'", double42 == (-0.6985763017371048d));
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.9166535214993772d + "'", double88 == 0.9166535214993772d);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.6528796337721468d + "'", double91 == 0.6528796337721468d);
        org.junit.Assert.assertNotNull(rotation92);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        double double12 = rotation4.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        java.lang.String str16 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str21 = rotationOrder13.toString();
        java.lang.String str22 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 1.5707963267948966d, 10000.0d, 0.24893698743024015d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (-0.4245292707565737d), 27.47493735326811d, 0.36259815178588733d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 2.0186255278998044d, (-0.3041288806189819d), 0.47011525616512123d);
        double[] doubleArray36 = rotation4.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder13.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.44538811899676645d + "'", double12 == 0.44538811899676645d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.974187773466128, -0.4784873946230179, 2.058723794751967]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        double double3 = vector3D2.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.negate();
        double double5 = vector3D2.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D20, (double) 100.0f, vector3D28, (double) (short) -1, vector3D48);
        double double56 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        double double71 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D68, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D80.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D76, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D20, (double) (byte) 10, vector3D63, (double) (short) -1, vector3D68, (double) ' ', vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D80.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D14, (double) (short) 1, vector3D80);
        double double88 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply(1.9601685880784872d);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D89, 0.09950031645301884d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        double double50 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        double double65 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D62, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D70, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D14, (double) (byte) 10, vector3D57, (double) (short) -1, vector3D62, (double) ' ', vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D74.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D8, (double) (short) 1, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D8.negate();
        double double83 = vector3D82.getY();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D82.scalarMultiply(2.15436348731443d);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.normalize();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.0d) + "'", double83 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D8.subtract((double) 0, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D14.add(2.0d, vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA2();
        java.lang.String str36 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D14, (-10.53200198742562d), vector3D43, 0.9765213798493405d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(0.05101988824888226d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.add(vector3D58);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXZ" + "'", str36, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str37 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D28.add(2.0985845029684933d, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D38.scalarMultiply(0.3873472180291347d);
        double double43 = vector3D38.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.5378050714624897d + "'", double29 == 0.5378050714624897d);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "XYZ" + "'", str37, "XYZ");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation61.applyTo(vector3D79);
        double double81 = rotation61.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation61.getAxis();
        double double83 = rotation61.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation61.getAxis();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(1.5880945911846174d, 44.73431728565376d, 0.5403023058681398d, 0.8605691650229957d, false);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation61.applyInverseTo(rotation90);
        double double92 = rotation61.getQ1();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-10.53200198742562d) + "'", double83 == (-10.53200198742562d));
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 16.62763166455332d + "'", double92 == 16.62763166455332d);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        java.lang.Object[] objArray6 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray6);
        java.lang.Object[] objArray8 = notARotationMatrixException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation24.applyTo(vector3D26);
        double[][] doubleArray28 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 25.06596560241331d);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(doubleArray28, 1.8228860923754615d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException47.getArguments();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException47);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Object[] objArray54 = cardanEulerSingularityException52.getArguments();
        java.lang.String str55 = cardanEulerSingularityException52.getPattern();
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray57 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Object[] objArray58 = cardanEulerSingularityException52.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException64 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray63);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray67 = cardanEulerSingularityException66.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException66.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray71 = cardanEulerSingularityException70.getArguments();
        java.lang.String str72 = cardanEulerSingularityException70.getPattern();
        cardanEulerSingularityException66.addSuppressed((java.lang.Throwable) cardanEulerSingularityException70);
        notARotationMatrixException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        java.lang.Object[] objArray75 = notARotationMatrixException64.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        java.lang.Throwable[] throwableArray79 = cardanEulerSingularityException77.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException81 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray82 = cardanEulerSingularityException81.getArguments();
        java.lang.String str83 = cardanEulerSingularityException81.getPattern();
        cardanEulerSingularityException77.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        java.lang.Object[] objArray85 = cardanEulerSingularityException81.getArguments();
        notARotationMatrixException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException81);
        java.lang.String str87 = notARotationMatrixException64.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) notARotationMatrixException64);
        cardanEulerSingularityException47.addSuppressed((java.lang.Throwable) notARotationMatrixException64);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) notARotationMatrixException64);
        notARotationMatrixException9.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        java.lang.String str92 = notARotationMatrixException35.getPattern();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str87, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: " + "'", str92, "org.apache.commons.math.geometry.NotARotationMatrixException: ");
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D29.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation25.applyTo(vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder58.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        double[] doubleArray71 = rotation25.getAngles(rotationOrder58);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.negate();
        double double76 = vector3D75.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.0, 0.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.5707963267948966d) + "'", double76 == (-1.5707963267948966d));
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-13.63641445253962d), 1.8350138259443276d, 2.8156024785781764d, 44.73431728565376d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        double[][] doubleArray26 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation34);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(doubleArray37, 0.3468870131236222d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation39.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZYZ" + "'", str31, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D40);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D25, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D25.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D25.scalarMultiply((double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D56.negate();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D56, (-2.7755575615628914E-17d));
        double double69 = vector3D56.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(0.9999999999999999d, vector3D54, (double) 10, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D19.subtract(0.9985383670628745d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((-0.021791926217361424d), vector3D74);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D71, (-0.025278551354151666d));
        double double79 = rotation78.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.012341649365758439d + "'", double79 == 0.012341649365758439d);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        java.lang.String str12 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        java.lang.String str3 = rotationOrder0.toString();
        java.lang.String str4 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXZ" + "'", str2, "ZXZ");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXZ" + "'", str4, "ZXZ");
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.orthogonal();
        double double7 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(2.949327365002713d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.scalarMultiply(1.8350138259443276d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.09966865249116204d + "'", double7 == 0.09966865249116204d);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation20.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (short) 1, (-1.0d), 98.0d);
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str39 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (-1.12493765766273d), 0.42487699275774343d, 0.37553052218641597d);
        double[] doubleArray48 = rotation20.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder30.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.6654428555205447d + "'", double28 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZXY" + "'", str31, "ZXY");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ZXY" + "'", str39, "ZXY");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[3.074817027284758, -0.06717156078297247, -1.1415926535897936]");
        org.junit.Assert.assertNotNull(vector3D49);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.scalarMultiply(100.0d);
        double double7 = vector3D6.getX();
        double double8 = vector3D6.getX();
        double double9 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D35.subtract(vector3D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        java.lang.String str9 = rotationOrder1.toString();
        java.lang.String str10 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        java.lang.String str16 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str21 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D11.subtract(vector3D22);
        double double24 = vector3D22.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double double30 = vector3D29.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        double double39 = vector3D33.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D32, (-0.476811323902129d), vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder51.getA3();
        java.lang.String str55 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder51.getA2();
        double double62 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (-1.0f), vector3D22, (-0.8942012921495908d), vector3D47, (-2.0d), vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), (-0.24987572770084396d), (-0.476811323902129d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(0.6918710786346925d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D74.add(vector3D80);
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D47, vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ZXY" + "'", str55, "ZXY");
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-0.7925909739385806d) + "'", double82 == (-0.7925909739385806d));
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YZX" + "'", str5, "YZX");
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.normalize();
        double double20 = vector3D17.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.5707963267948966d + "'", double20 == 1.5707963267948966d);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D15.subtract((double) 0, vector3D20);
        double double22 = vector3D21.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D26, (double) 100.0f, vector3D34, (double) (short) -1, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D34.add((-1.0d), vector3D63);
        double double65 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D34.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D34.subtract((-0.0d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D21.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D(0.42790151633116d, 0.23160805743135715d, 1.4344031134591586d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D74.subtract(1.5880945911846174d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D5.add(1.962216877206194d, vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (byte) 100, (double) (short) 0, (double) (byte) 0, (double) 'a', true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation15.revert();
        double double18 = rotation17.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 2.0d, 0.24893698743024015d, (double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder19.getA2();
        double[] doubleArray31 = rotation17.getAngles(rotationOrder19);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D6.add(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.orthogonal();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.3013122628264297d + "'", double18 == 0.3013122628264297d);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-0.5661051359141498, 0.279082327930919, 2.6317944751895164]");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.4180214381946339d, 0.5153978362128364d, (-634.6978979926987d));
        double double12 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YXZ" + "'", str5, "YXZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.140547103067702d + "'", double12 == 3.140547103067702d);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.8571275516771671d), (double) 1.0f, 0.9641189142896659d, 0.0d, false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (double) 100, 0.0d, (double) (short) -1, true);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation20.applyTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation20.getAxis();
        double[][] doubleArray25 = rotation20.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray25, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str30 = rotationOrder29.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D31, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyInverseTo(rotation33);
        double double35 = rotation28.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.add((-1.0d), vector3D74);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation83 = rotation56.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA1();
        double[] doubleArray87 = rotation82.getAngles(rotationOrder84);
        double[] doubleArray88 = rotation5.getAngles(rotationOrder84);
        java.lang.String str89 = rotationOrder84.toString();
        java.lang.String str90 = rotationOrder84.toString();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ZYZ" + "'", str30, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.7683919425686427d) + "'", double35 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[0.019999333373330475, 0.0, -3.141592653589793]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "YZX" + "'", str89, "YZX");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "YZX" + "'", str90, "YZX");
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(10.04987562112089d, vector3D1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D12, (double) 100.0f, vector3D20, (double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D20.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D49.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D77.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract(vector3D81);
        double double88 = vector3D81.getY();
        double double89 = vector3D81.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D68, vector3D70, vector3D77, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D68.add(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D94, (-0.45973278686101987d));
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D3.subtract(vector3D94);
        double double98 = vector3D3.getX();
        double double99 = vector3D3.getY();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        double double11 = vector3D10.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.orthogonal();
        double double13 = vector3D12.getX();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.5707963267948966d + "'", double11 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D51.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation73.revert();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) doubleArray76);
        java.lang.String str78 = notARotationMatrixException77.toString();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: YZX" + "'", str78, "org.apache.commons.math.geometry.NotARotationMatrixException: YZX");
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder64.getA1();
        double double68 = vector3D67.getX();
        double double69 = vector3D67.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D6);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D13.subtract(1.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.add((-1.0d), vector3D30);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D28, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D10.subtract(0.496669722445646d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.scalarMultiply(649.9580153489533d);
        double double45 = vector3D44.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D49.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D44.add(1.5501807665642404d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D6.add(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1.5707963267948966d) + "'", double45 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0d, 0.24893698743024015d, (double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        double double15 = vector3D14.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.5707963267948966d + "'", double15 == 1.5707963267948966d);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        double double12 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.negate();
        double double14 = vector3D13.getZ();
        double double15 = vector3D13.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.0d) + "'", double15 == (-0.0d));
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D7.add((-0.8412192543248603d), vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D3.subtract(1.278124800288793d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D3.orthogonal();
        double double20 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((-0.5114629390766603d), 2.0985845029684933d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D3.add(vector3D23);
        double double25 = vector3D23.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (-0.09618196756046529d), (double) '4', 27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder27.getA3();
        java.lang.String str42 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 0.7263743809722923d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D55.subtract((double) 0, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str72 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder63.getA2();
        double double75 = vector3D74.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D55.add((double) 100L, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.647580920567952d, vector3D23, (-0.13599489604735254d), vector3D44, 1.8414709848078965d, vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8623079947860166d + "'", double20 == 0.8623079947860166d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.630129714513133d + "'", double25 == 2.630129714513133d);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXY" + "'", str72, "ZXY");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str5 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation15 = rotation14.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((-0.7071067811865475d), 2.8156024785781764d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((-0.8367309896698533d), vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation14.applyTo(vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.8390715290764523d, (-0.0013651261847257446d), 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D33.subtract(1.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D48.add((-1.0d), vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract(1.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.subtract(vector3D82);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D58, vector3D61, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D83.scalarMultiply(0.5277475438952628d);
        double double88 = vector3D83.getX();
        double double89 = vector3D83.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D31.subtract(25.06596560241331d, vector3D83);
        double double91 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D21, vector3D31);
        double double92 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D31);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZYZ" + "'", str5, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-1.0d) + "'", double88 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 3.141592653589793d + "'", double89 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-0.7957649069979387d) + "'", double91 == (-0.7957649069979387d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.5628585594835317d + "'", double92 == 0.5628585594835317d);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.normalize();
        double double2 = vector3D0.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D0, 2.0985845029684933d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        double double18 = rotation10.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation10.applyTo(vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str31 = rotationOrder30.toString();
        java.lang.String str32 = rotationOrder30.toString();
        double[] doubleArray33 = rotation10.getAngles(rotationOrder30);
        java.lang.String str34 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D36);
        double double38 = vector3D0.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D0.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        double double53 = rotation45.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation45.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.normalize();
        double double70 = org.apache.commons.math.geometry.Vector3D.angle(vector3D64, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.normalize();
        double double74 = vector3D72.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) 10.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder77.getA3();
        java.lang.String str81 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder77.getA3();
        double double87 = vector3D86.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.8605691650229957d, 2.6575295970997246d);
        double double92 = org.apache.commons.math.geometry.Vector3D.angle(vector3D86, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D69.add(0.3345571444794553d, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D0.add(vector3D93);
        double double95 = vector3D93.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-1.5707963267948966d) + "'", double2 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.7683919425686428d) + "'", double18 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XYX" + "'", str31, "XYX");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "XYX" + "'", str32, "XYX");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "XYX" + "'", str34, "XYX");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-0.7683919425686428d) + "'", double53 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0189832222323367d + "'", double70 == 1.0189832222323367d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.5707963267948966d) + "'", double74 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.5707963267948966d + "'", double87 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2.306492779467043d + "'", double92 == 2.306492779467043d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.0392161495913666d) + "'", double95 == (-0.0392161495913666d));
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (-0.8903223073341484d), (-1.1415926535897933d), (-0.05647313889782858d));
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyTo(rotation57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyInverseTo(rotation71);
        double double73 = rotation72.getQ2();
        org.apache.commons.math.geometry.Rotation rotation74 = rotation45.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation80.applyTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation45.applyTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation86.getAxis();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation39.applyInverseTo(rotation86);
        double double90 = rotation86.getQ2();
        double[][] doubleArray91 = rotation86.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.23869349855450123d + "'", double90 == 0.23869349855450123d);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.5107925913326916d), (-0.1447158152242767d));
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D5.add(vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        double double36 = vector3D35.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation19.applyTo(vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str39 = rotationOrder38.toString();
        double[] doubleArray40 = rotation19.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder38.getA2();
        double double42 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.scalarMultiply((-0.7683919425686427d));
        double double45 = vector3D41.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ZXY" + "'", str39, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.5707963267948966d + "'", double42 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.36259815178588733d, 1.9601685880784872d);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D34, vector3D37, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray66 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation65.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation82 = rotation75.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation81.applyTo(vector3D83);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D83, 0.5277475438952628d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation68.applyTo(vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation6.applyTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(1.246950552048578d, vector3D91);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.03726554125228992d) + "'", double7 == (-0.03726554125228992d));
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.566370614359173d, 2.1475455860530537d, 2.1349162105446426d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D13.subtract(1.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.add((-1.0d), vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D38, vector3D41, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D36.normalize();
        double double66 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D12, vector3D36);
        double double67 = vector3D36.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXY" + "'", str2, "YXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXY" + "'", str4, "YXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-2.0d) + "'", double67 == (-2.0d));
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((-4.212430843250595d), 0.531212308932249d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.negate();
        double double8 = vector3D5.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D40.negate();
        double double42 = vector3D40.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str45 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply(100.0d);
        double double51 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.47011525616512123d, vector3D15, 3.141592653589793d, vector3D40, 0.0d, vector3D50);
        double double53 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.scalarMultiply((double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(2.6575295970997246d, 2.5104165854707956d, 0.37481384288189196d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(1.4176019334124608d, vector3D1, 77.07826156637479d, vector3D5, 0.0016448502788564755d, vector3D50, 0.12144872085901345d, vector3D60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.070754463928991d + "'", double8 == 2.070754463928991d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2.0d + "'", double42 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.5707963267948966d + "'", double51 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        double[] doubleArray19 = rotation11.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (-2.0d), (-1.0d), 0.0d);
        double double24 = rotation23.getAngle();
        double double25 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation29.applyTo(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder34.getA2();
        java.lang.String str42 = rotationOrder34.toString();
        java.lang.String str43 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str47 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA3();
        java.lang.String str49 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str54 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D44.subtract(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder58.getA3();
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D65, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        double double75 = vector3D72.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder78.getA3();
        java.lang.String str82 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder78.getA2();
        double double89 = vector3D88.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D77.subtract(vector3D88);
        double double92 = vector3D77.getZ();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D77, 0.28742517866390543d);
        org.apache.commons.math.geometry.Rotation rotation95 = rotation68.applyTo(rotation94);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation57.applyTo(rotation68);
        double double97 = rotation96.getAngle();
        org.apache.commons.math.geometry.Rotation rotation98 = rotation26.applyTo(rotation96);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-0.657879182722611, 0.47402663624573416, 1.8024949709136886]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.153573489132929d + "'", double24 == 2.153573489132929d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.7384602626041288d + "'", double25 == 0.7384602626041288d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZXY" + "'", str43, "ZXY");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXY" + "'", str47, "ZXY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ZXY" + "'", str49, "ZXY");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXY" + "'", str54, "ZXY");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXY" + "'", str82, "ZXY");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.0d) + "'", double92 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2.339188269363539d + "'", double97 == 2.339188269363539d);
        org.junit.Assert.assertNotNull(rotation98);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(doubleArray26, 2.9188221422808427d);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation28.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (-0.0d), 2.23606797749979d, 2.0985845029684933d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder30.getA1();
        double[] doubleArray43 = rotation28.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder30.getA3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-0.0, 0.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.3390050494210448d, 2.379723745431982d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D28, vector3D31, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        double double64 = org.apache.commons.math.geometry.Vector3D.angle(vector3D55, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str74 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.orthogonal();
        double double80 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D59, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D78.scalarMultiply(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: zero norm for rotation defining vector");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.141592653589793d + "'", double64 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation57.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D41.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D61, (-0.9036922050915068d), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D68, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        double double80 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D82, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D76.add(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D76.negate();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "XZX" + "'", str84, "XZX");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.5609945453968015d, (-641.0d), (-0.7071067811865475d), (-919.4168818468384d), true);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.scalarMultiply(100.0d);
        double double8 = vector3D7.getX();
        double double9 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        double double11 = vector3D10.getZ();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray36 = rotation30.getAngles(rotationOrder31);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation25.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation64 = rotation30.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str74 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder65.getA1();
        double[] doubleArray80 = rotation30.getAngles(rotationOrder65);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation30.revert();
        double[][] doubleArray82 = rotation81.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray82);
        java.lang.String str84 = notARotationMatrixException83.toString();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-5.1370455602687403E-17, 1.0, -2.566370614359173]");
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str84, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray17 = notARotationMatrixException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Object[] objArray27 = cardanEulerSingularityException23.getArguments();
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.String str29 = notARotationMatrixException6.getPattern();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray47 = rotation46.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException51.getSuppressed();
        notARotationMatrixException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Object[] objArray61 = cardanEulerSingularityException59.getArguments();
        java.lang.String str62 = cardanEulerSingularityException59.getPattern();
        java.lang.Object[] objArray63 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException59.getSuppressed();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        notARotationMatrixException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.String str69 = cardanEulerSingularityException59.getPattern();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Throwable[] throwableArray71 = cardanEulerSingularityException59.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) throwableArray71);
        java.lang.Object[] objArray73 = notARotationMatrixException72.getArguments();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str29, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-0.7683919425686428d));
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Object[] objArray19 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException22.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Object[] objArray30 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray33 = cardanEulerSingularityException26.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray33);
        cardanEulerSingularityException13.addSuppressed((java.lang.Throwable) notARotationMatrixException34);
        java.lang.Throwable[] throwableArray36 = notARotationMatrixException34.getSuppressed();
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) notARotationMatrixException34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException45.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.String str51 = cardanEulerSingularityException49.getPattern();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) cardanEulerSingularityException49);
        notARotationMatrixException43.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.Throwable[] throwableArray54 = notARotationMatrixException43.getSuppressed();
        java.lang.String str55 = notARotationMatrixException43.getPattern();
        notARotationMatrixException34.addSuppressed((java.lang.Throwable) notARotationMatrixException43);
        java.lang.Throwable[] throwableArray57 = notARotationMatrixException34.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str55, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray57);
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        double double13 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) 1.0f, (double) 0);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D23, (double) 100.0f, vector3D31, (double) (short) -1, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D31.add((-1.0d), vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply(0.7604311401305615d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D31.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(2.0678198605632665d, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation75.applyTo(rotation80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation75.applyInverseTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.scalarMultiply((-0.07264806010080926d));
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D69, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D15, vector3D18, vector3D87);
        double[][] doubleArray90 = rotation89.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder91.getA1();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(rotationOrder91, 2.0678198605632665d, (-0.429556888950007d), (double) 100);
        double[] doubleArray97 = rotation89.getAngles(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-2.141592653589793, 0.0, -3.141592653589793]");
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        double double6 = rotation5.getAngle();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        double double9 = rotation5.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.012932544327696d + "'", double6 == 3.012932544327696d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.012932544327696d + "'", double7 == 3.012932544327696d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 3.012932544327696d + "'", double9 == 3.012932544327696d);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.8390715290764523d, (double) 'a');
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        java.lang.String str13 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D19.subtract(1.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D32.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.add((-1.0d), vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D44, vector3D47, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D9, vector3D18, vector3D47);
        double double72 = vector3D47.getNorm();
        double double73 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D47.negate();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D76.subtract(vector3D78);
        double double85 = vector3D78.getY();
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D78);
        double double87 = vector3D86.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder89.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder89.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder89.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D86.subtract((-0.7009645491358697d), vector3D92);
        double double94 = vector3D92.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D74.add(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D74.negate();
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXY" + "'", str6, "ZXY");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.6181409508714061d) + "'", double73 == (-0.6181409508714061d));
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.0d) + "'", double87 == (-0.0d));
        org.junit.Assert.assertNotNull(rotationOrder89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D1.negate();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str7 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder12.getA1();
        java.lang.String str17 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D24, (double) 100.0f, vector3D32, (double) (short) -1, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-1.1415926535897933d), vector3D9, 0.8286204267864343d, vector3D18, (-0.5254171326308468d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        double double80 = vector3D77.getY();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D9.add((-0.9714040953537869d), vector3D77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.normalize();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: cannot normalize a zero norm vector");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYZ" + "'", str7, "XYZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XZX" + "'", str13, "XZX");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XZX" + "'", str17, "XZX");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.6194998987790724d, 1.4010336624202355d, 0.9186914001662628d, (-2.915083223834298d), true);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.2551713383813414d), (-0.08153856787190739d), (double) 100, (-0.9902124943143233d), true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        double double15 = rotation12.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        double double29 = rotation28.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D45, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation28.applyTo(rotation55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str58 = rotationOrder57.toString();
        double[] doubleArray59 = rotation55.getAngles(rotationOrder57);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation55.applyTo(rotation65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str68 = rotationOrder67.toString();
        double[] doubleArray69 = rotation55.getAngles(rotationOrder67);
        double double70 = rotation55.getAngle();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation12.applyTo(rotation55);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation5.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D76, (-1.12493765766273d));
        org.apache.commons.math.geometry.Rotation rotation79 = rotation5.applyInverseTo(rotation78);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.009901603992996635d) + "'", double6 == (-0.009901603992996635d));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "XYX" + "'", str58, "XYX");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "XYX" + "'", str68, "XYX");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.5707963267948963d + "'", double70 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation79);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D4.getY();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double9 = vector3D8.getY();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D4.subtract(vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D4.subtract(1.0635272133923235d, vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.42487699275774343d + "'", double9 == 0.42487699275774343d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        double double6 = vector3D5.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        double double20 = rotation19.getAngle();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation19.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation27.applyTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation27.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.add((-1.0d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D41, (double) 100.0f, vector3D49, (double) (short) -1, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D49.add((-1.0d), vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation27.applyTo(vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation87 = rotation86.revert();
        double double88 = rotation87.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation27.applyTo(rotation87);
        double double90 = rotation89.getQ0();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation19.applyInverseTo(rotation89);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.14599455657272695d) + "'", double88 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.2003909367058787d) + "'", double90 == (-0.2003909367058787d));
        org.junit.Assert.assertNotNull(rotation91);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation56.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D40.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.scalarMultiply((-3.110368056629538d));
        double double63 = vector3D62.getDelta();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.4705227400680959d) + "'", double63 == (-0.4705227400680959d));
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray28 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray38 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.String str52 = cardanEulerSingularityException50.getPattern();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) notARotationMatrixException44);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Throwable[] throwableArray57 = notARotationMatrixException5.getSuppressed();
        java.lang.Object[] objArray58 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException61.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray66 = cardanEulerSingularityException65.getArguments();
        java.lang.String str67 = cardanEulerSingularityException65.getPattern();
        cardanEulerSingularityException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        java.lang.Object[] objArray69 = cardanEulerSingularityException65.getArguments();
        java.lang.Throwable[] throwableArray70 = cardanEulerSingularityException65.getSuppressed();
        java.lang.Throwable[] throwableArray71 = cardanEulerSingularityException65.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray71);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException72);
        java.lang.Throwable[] throwableArray74 = notARotationMatrixException5.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation56.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D40.subtract(vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation72.applyTo(vector3D74);
        double double76 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D60, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D60, 1.8350138259443276d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation78.applyTo(vector3D82);
        double double85 = rotation78.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation78.getAxis();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.4533522819483131d + "'", double76 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.0983442429133113d) + "'", double85 == (-0.0983442429133113d));
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.add(vector3D11);
        double double13 = vector3D11.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.negate();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D25.subtract((double) 0, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D33.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D31.add(2.0d, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder45.getA2();
        java.lang.String str53 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D31, (-10.53200198742562d), vector3D60, 0.9765213798493405d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D60.negate();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D11.subtract(2.1460183660255168d, vector3D73);
        double double76 = vector3D11.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.5707963267948966d + "'", double13 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXZ" + "'", str53, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.5707963267948966d + "'", double76 == 1.5707963267948966d);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        double double5 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation19.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation12.applyTo(rotation68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D6.subtract(vector3D71);
        double double73 = vector3D6.getAlpha();
        double double74 = vector3D6.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.5707963267948966d + "'", double73 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) ' ', (double) (short) 1);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        double double43 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation50.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation15.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation8.applyTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation64.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation64.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str70 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(vector3D71, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D68, vector3D71);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D71);
        double double76 = vector3D71.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation89 = rotation82.applyInverseTo(rotation88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation88.applyTo(vector3D90);
        double double92 = vector3D91.getY();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D91.negate();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D71.add(vector3D93);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZYZ" + "'", str70, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-0.21114476788661177d) + "'", double92 == (-0.21114476788661177d));
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        double double30 = vector3D29.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D66.subtract(1.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.subtract(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D56, vector3D59, vector3D81);
        double double83 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.8214428530345181d, vector3D4, (-10.53200198742562d), vector3D56);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D4, 27.47493735326811d);
        double double88 = rotation87.getQ1();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2.0d + "'", double30 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.5707963267948966d + "'", double83 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.9121025822798922d) + "'", double88 == (-0.9121025822798922d));
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA3();
        double double29 = vector3D28.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D16.add(0.3691205271584663d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D15.subtract(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.09618196756046529d), (double) '4', 27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        java.lang.String str15 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        double[][] doubleArray55 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D(0.2520878998432229d, 100.0022140464598d, (-8.868313204374247E-18d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation58.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) 100, 3.1330314046616845d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.normalize();
        double double9 = vector3D7.getY();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.normalize();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyTo(rotation35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyInverseTo(rotation49);
        double double51 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation23.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation23.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation16.applyTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation72.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D10.subtract(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D3.subtract(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) 10L, vector3D77, 1.0000000000000002d, vector3D80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1056478979494711d), 0.0d, 0.7316279195830642d);
        java.lang.String str7 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXZ" + "'", str2, "ZXZ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXZ" + "'", str7, "ZXZ");
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str2 = rotationOrder1.toString();
        java.lang.String str3 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        java.lang.String str5 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 7.880514097121173d, 785.3994663708453d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.47237079256989273d), vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XYX" + "'", str3, "XYX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XYX" + "'", str5, "XYX");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation18.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation33.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation18.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D4.add((double) (byte) 10, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str46 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D4.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D60.subtract((double) 0, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D66.add(2.0d, vector3D77);
        double double79 = vector3D66.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D66.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(2.630129714513133d, vector3D50, (-0.32035333425956525d), vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXY" + "'", str38, "ZXY");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation53.getAxis();
        double double55 = rotation53.getAngle();
        double double56 = rotation53.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.07972572548978678d + "'", double55 == 0.07972572548978678d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.03563598374487637d) + "'", double56 == (-0.03563598374487637d));
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation57.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D41.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D63, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D61, (-0.9036922050915068d), vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D68, vector3D75);
        double double77 = vector3D68.getZ();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.8414709848078965d + "'", double77 == 0.8414709848078965d);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.021791926217361424d), 2.0359245022540593d);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        double double16 = rotation8.getQ0();
        double double17 = rotation8.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation28.applyTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation28.applyInverseTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D21.add(1.8027186956254748d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation8.applyInverseTo(vector3D21);
        double double42 = rotation8.getQ2();
        double double43 = rotation8.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0955424909088009d) + "'", double16 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.6502970659532881d) + "'", double17 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.6502970659532881d) + "'", double42 == (-0.6502970659532881d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.7525070711305497d) + "'", double43 == (-0.7525070711305497d));
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), (double) 100L, (-1.5707963267948966d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 100L, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.scalarMultiply(0.7604311401305615d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D26.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder65.getA3();
        java.lang.String str69 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder65.getA2();
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((-0.6551684173807351d), vector3D12, 0.11078585244669703d, vector3D63, (-378.71766086458643d), vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(0.8390715290764523d, vector3D4, (double) (byte) 1, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D4.negate();
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D6);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) (byte) -1);
        double double10 = rotation9.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation9.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(2.5609945453968015d, 0.7316279195830642d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(1.6173610802715999d, vector3D11, 0.6870674358985721d, vector3D15);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9999999999999999d + "'", double10 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray55 = rotation49.getAngles(rotationOrder50);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation44.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation5.applyInverseTo(rotation49);
        double double58 = rotation49.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation59.revert();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.45973278686101987d + "'", double58 == 0.45973278686101987d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ1();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray8, 0.7604311401305615d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA1();
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation17.applyInverseTo(vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 100, (double) (short) 10, (double) 10L);
        double double31 = rotation30.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder32.getA3();
        double[] doubleArray37 = rotation30.getAngles(rotationOrder32);
        double[] doubleArray38 = rotation17.getAngles(rotationOrder32);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation11.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.add((-1.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D70.negate();
        double double72 = vector3D70.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.scalarMultiply(100.0d);
        double double81 = vector3D80.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.47011525616512123d, vector3D45, 3.141592653589793d, vector3D70, 0.0d, vector3D80);
        double double83 = vector3D82.getY();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation11.applyTo(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.45973278686101987d) + "'", double7 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.8662089827552298d) + "'", double31 == (-0.8662089827552298d));
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "XZX" + "'", str33, "XZX");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.5911320301150214, 2.1817925909340987, -1.025435474584856]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-2.335960244359247, 1.7765565406780053, 1.0856825956774865]");
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2.0d + "'", double72 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZXY" + "'", str75, "ZXY");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.5707963267948966d + "'", double81 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6654428555205447d, 0.6654428555205447d, 98.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA3();
        java.lang.String str19 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder15.getA3();
        double double25 = vector3D24.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation14.applyTo(vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation51.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation39.applyTo(rotation53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation39.getAxis();
        double double56 = rotation39.getQ0();
        double double57 = rotation39.getQ3();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation14.applyInverseTo(rotation39);
        double double59 = rotation14.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1.0d) + "'", double56 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.5629528985411225d + "'", double59 == 0.5629528985411225d);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(2.8156024785781764d, 0.8775825618903728d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(vector3D9);
        double double11 = vector3D10.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-3.011713490850235d) + "'", double11 == (-3.011713490850235d));
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D6, (double) 100.0f, vector3D14, (double) (short) -1, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D14.add((-1.0d), vector3D43);
        double double45 = vector3D14.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D14.add((double) 1.0f, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D2.add(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.getAxis();
        double double9 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.0042806113912205665d) + "'", double9 == (-0.0042806113912205665d));
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.590031694590281d, 0.2520878998432229d, (-0.21114476788661177d));
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D14.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.add((-1.0d), vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D43, vector3D46, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D17.subtract((double) 0, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation10.applyTo(vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation78.revert();
        double double80 = rotation78.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        double double87 = vector3D84.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.orthogonal();
        double double90 = vector3D89.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation78.applyTo(vector3D89);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = org.apache.commons.math.geometry.Vector3D.angle(vector3D0, vector3D91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.02347577466130089d) + "'", double80 == (-0.02347577466130089d));
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.0d) + "'", double90 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D52);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.add((-1.0d), vector3D74);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D72);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D72, (-1.0d));
        double double86 = rotation85.getQ2();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation53.applyInverseTo(rotation85);
        double double88 = rotation85.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation85.getAxis();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation((-54.26257800088148d), 1.278124800288793d, (-0.22896318350517658d), 0.6780443302572079d, true);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation85.applyInverseTo(rotation95);
        double double97 = rotation95.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation95.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7071067811865476d + "'", double54 == 0.7071067811865476d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.8775825618903728d + "'", double88 == 0.8775825618903728d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.012491065214738672d + "'", double97 == 0.012491065214738672d);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.11078585244669703d, (-0.5740247584530956d), 3.1330314046616845d, 0.5559678498602987d, false);
        double double6 = rotation5.getQ0();
        double double7 = rotation5.getQ2();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.11078585244669703d + "'", double6 == 0.11078585244669703d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.3114482587377294d, (double) (-1.0f), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        java.lang.String str12 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        java.lang.String str11 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.13182419629852823d), 2010.8322649434506d, (-0.006392032391590654d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = null;
        double[] doubleArray18 = rotation16.getAngles(rotationOrder17);
        double[][] doubleArray19 = rotation16.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray19, (-0.42073549240394825d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.732854049425872, 0.21306109639865567, 1.6003466217142444]");
        org.junit.Assert.assertNotNull(doubleArray19);
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", (java.lang.Object[]) doubleArray45);
        java.lang.Object[] objArray50 = notARotationMatrixException49.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str38 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder32.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D29.add(2.0985845029684933d, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(2.23606797749979d, vector3D25);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(0.8342233605065102d, (-0.5033082423383954d), 3.2087642143727657d, (-0.8414709848078965d), true);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation48.getAxis();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, 0.596443134110513d);
        double double52 = org.apache.commons.math.geometry.Vector3D.angle(vector3D25, vector3D49);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.5378050714624897d + "'", double30 == 0.5378050714624897d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "XYZ" + "'", str38, "XYZ");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.4202208431499685d + "'", double52 == 1.4202208431499685d);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        double double11 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D4, 0.0027048888022863306d, vector3D9);
        double double13 = vector3D9.getX();
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.080456683454306d + "'", double11 == 1.080456683454306d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D30, vector3D33, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D3.add(10.0d, vector3D33);
        double double58 = vector3D3.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.scalarMultiply(100.0d);
        double double67 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.scalarMultiply((double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D3.subtract((-0.8292004581690567d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.subtract(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D72.negate();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation((double) '#', (double) 10.0f, (double) (short) 100, 100.0d, true);
        double double90 = rotation89.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, 98.0d, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation89.applyInverseTo(vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D((-0.031224596960255053d), vector3D3, 0.9979079855178695d, vector3D72, 0.0d, vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.5707963267948966d + "'", double67 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2.6575295970997246d + "'", double90 == 2.6575295970997246d);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        double[][] doubleArray13 = rotation12.getMatrix();
        double[][] doubleArray14 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray14);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYZ", (java.lang.Object[]) doubleArray14);
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(doubleArray14, 0.297316321916546d);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(doubleArray14);
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        double double20 = rotation12.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.add((-1.0d), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D35, (double) 100.0f, vector3D43, (double) (short) -1, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D27.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        double double79 = vector3D76.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D76.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D80.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D43, (-0.7683919425686428d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation12.applyTo(vector3D43);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation6.applyTo(rotation12);
        double double85 = rotation84.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.7683919425686428d) + "'", double20 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.6761027630046266d + "'", double85 == 0.6761027630046266d);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        double double9 = vector3D2.getY();
        double double10 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D23, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation31.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder35.getA2();
        java.lang.String str43 = rotationOrder35.toString();
        java.lang.String str44 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D45.negate();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865474d, (double) (byte) 1, 0.3691205271584663d);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D33.add(2.617866403174436d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D3.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.orthogonal();
        double double58 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.8390715290764523d, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(0.8493620906833815d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D57.normalize();
        double double67 = vector3D57.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZXY" + "'", str43, "ZXY");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.5707963267948966d + "'", double58 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation14.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str29 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder20.getA3();
        double[] doubleArray31 = rotation14.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D58.negate();
        double double60 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D34, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation14.applyTo(vector3D59);
        double double62 = rotation14.getQ0();
        double double63 = rotation14.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-6.510988317503359E-16, 1.528154584162434, 2.7120357646397877]");
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "XZX" + "'", str33, "XZX");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2.0d + "'", double60 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.15388504775119377d + "'", double62 == 0.15388504775119377d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.7054316427744647d) + "'", double63 == (-0.7054316427744647d));
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA1();
        double double18 = vector3D17.getDelta();
        double double19 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D14, vector3D17);
        double double20 = vector3D17.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZYZ" + "'", str16, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.5707963267948966d + "'", double18 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.subtract(vector3D25);
        double double27 = vector3D25.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.5707963267948966d + "'", double27 == 1.5707963267948966d);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4.341241737144209E-18d, 2.0678198605632665d, 6.3007480475286926d, (-0.04104628521447248d), false);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D59.subtract(1.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.subtract(vector3D73);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D49, vector3D52, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D15.subtract(vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        double double80 = vector3D79.getDelta();
        double double81 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D15, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.add(2.1475455860530537d, vector3D83);
        double double85 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation14.applyTo(vector3D83);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation14.revert();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.04104628521447248d) + "'", double6 == (-0.04104628521447248d));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZXY" + "'", str78, "ZXY");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation87);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.4929138111311729d), 3.1382470946270726d, 0.9013223216152804d);
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.056443126183209305d, 0.09142765344934917d, (-0.24893698743024015d), (-0.052507379819883904d), false);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1024.0d), 0.999971733478154d, 4.879239129211843E-4d);
        java.lang.String str6 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYZ" + "'", str1, "XYZ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.57069622669537d, 0.9766388148078424d, 0.0d);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6551684173807351d), 2.638427581942488d, 143.7738589649261d);
        double double15 = rotation14.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.8261160777253279d + "'", double15 == 0.8261160777253279d);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.2415014828981374d, (-406.7116193600549d), 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D10.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D26.orthogonal();
        double double56 = vector3D55.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder58.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D60.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.normalize();
        double double63 = vector3D61.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D61.subtract(vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str72 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract((double) 100L, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, vector3D55, 2.5104165854707956d, vector3D67, 0.15135620392549756d, vector3D79);
        double double81 = vector3D67.getDelta();
        double double82 = vector3D67.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D3.subtract(vector3D67);
        double double84 = vector3D3.getZ();
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.5707963267948966d + "'", double56 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZXY" + "'", str65, "ZXY");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZYZ" + "'", str72, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.5707963267948966d + "'", double82 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        double double10 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D12.add(0.8390715290764523d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), (double) 0L, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D12.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D3.add(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((-0.16624968048555705d), vector3D26);
        double double30 = vector3D29.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.scalarMultiply(2.28147172247978d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.20966096335394535d + "'", double30 == 0.20966096335394535d);
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(0.8214428530345181d, 0.03335368554704087d, (-0.8301452433388954d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder20.getA2();
        double[] doubleArray29 = rotation11.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(0.12426313436139437d, vector3D4, (-57.493324223256394d), vector3D30);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D30, 101.90559923288122d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.5752220392306203, -0.5752220392306204, 2.141592653589793]");
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException50.getSuppressed();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Object[] objArray68 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException58.getArguments();
        java.lang.String str70 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray71 = cardanEulerSingularityException58.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D51.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D77.subtract(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation74.applyTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.scalarMultiply((-2.7755575615628914E-17d));
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D84, (-0.8414709848078965d));
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation86.getAxis();
        double[][] doubleArray88 = rotation86.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) doubleArray88);
        java.lang.Object[] objArray90 = notARotationMatrixException89.getArguments();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[[0.8331833726964404, 0.527235886788115, -0.16681662730355973], [-0.527235886788115, 0.6663667453928805, -0.527235886788115], [-0.16681662730355973, 0.527235886788115, 0.8331833726964404]]");
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.4533522819483131d), 24.882865501017502d, (-0.9944340607881093d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(0.5610177767380341d, 0.12637150995481888d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D14.add(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "YXZ" + "'", str6, "YXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation();
        double double3 = rotation2.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation10 = rotation9.revert();
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = rotation2.applyInverseTo(rotation10);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray13);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 0.7853981633974482d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray13);
        java.lang.Throwable[] throwableArray18 = notARotationMatrixException17.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException31.getSuppressed();
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        java.lang.Throwable[] throwableArray38 = notARotationMatrixException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.String str47 = cardanEulerSingularityException45.getPattern();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.Object[] objArray49 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException45.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException52 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation65.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation65.getAxis();
        double[][] doubleArray70 = rotation65.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray70);
        notARotationMatrixException52.addSuppressed((java.lang.Throwable) notARotationMatrixException71);
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) notARotationMatrixException52);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) notARotationMatrixException52);
        java.lang.String str75 = notARotationMatrixException52.getPattern();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str75, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray11);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException19);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray39);
        java.lang.Throwable[] throwableArray42 = notARotationMatrixException41.getSuppressed();
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        java.lang.String str45 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray48 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray49 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cardan angles singularity" + "'", str2, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Cardan angles singularity" + "'", str45, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        double double11 = rotation10.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D58, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D49.subtract(vector3D62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str70 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray78 = rotation77.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D81.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation77.applyTo(vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D67.subtract((double) 100.0f, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.scalarMultiply(0.3494625806709468d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder88.getA1();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D17, vector3D87, vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation10.applyTo(rotation90);
        double double92 = rotation90.getQ1();
        double double93 = rotation90.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.16624968048555705d) + "'", double11 == (-0.16624968048555705d));
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZXY" + "'", str70, "ZXY");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZXY" + "'", str80, "ZXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.569771540865024d + "'", double92 == 0.569771540865024d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + (-0.6716202288802354d) + "'", double93 == (-0.6716202288802354d));
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        double double12 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D4.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        double double28 = vector3D21.getY();
        double double29 = vector3D21.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D21.normalize();
        double double32 = vector3D21.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 1, (-1.0d), 98.0d);
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation42.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D45, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(0.10830291305827339d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.3345571444794553d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((-54.26257800088148d), vector3D15, (-0.24903954012484228d), vector3D33, (-0.0013651261847257446d), vector3D49);
        double double51 = vector3D49.getY();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.6654428555205447d + "'", double43 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-10.299368019216061d) + "'", double51 == (-10.299368019216061d));
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation29.revert();
        double[][] doubleArray67 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.subtract((double) 0, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation66.applyInverseTo(vector3D75);
        double[][] doubleArray83 = rotation66.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray8, 0.8775825618903728d);
        double double11 = rotation10.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.35307251181958943d) + "'", double11 == (-0.35307251181958943d));
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        double double16 = vector3D9.getY();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) (short) 1, (-1.0d), 98.0d);
        double double25 = rotation24.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation24.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D27, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D9.add((double) (byte) -1, vector3D27);
        double double31 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation4.applyInverseTo(vector3D9);
        double double33 = rotation4.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.6654428555205447d + "'", double25 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.2183772473628487d + "'", double33 == 2.2183772473628487d);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double8 = rotation7.getAngle();
        double double9 = rotation7.getQ0();
        double[][] doubleArray10 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.2112625254810094d + "'", double8 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.4485703331475911d + "'", double9 == 0.4485703331475911d);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(rotation11);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        double[][] doubleArray17 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray17, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation20.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder30.getA3();
        java.lang.String str34 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder30.getA2();
        double double41 = vector3D40.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation20.applyTo(vector3D40);
        double double44 = rotation20.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZYZ" + "'", str22, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZXY" + "'", str31, "ZXY");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.3691205271584663d + "'", double44 == 0.3691205271584663d);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation11.applyTo(vector3D18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.revert();
        double double21 = rotation11.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.3691205271584663d + "'", double21 == 0.3691205271584663d);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.686521587797805d, (-2.588499176537791d), 0.06477627904931682d, (-3.141592653589793d), false);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        double double20 = rotation5.getQ2();
        double double21 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D38);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D38, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA2();
        double[] doubleArray54 = rotation51.getAngles(rotationOrder52);
        java.lang.String str55 = rotationOrder52.toString();
        java.lang.String str56 = rotationOrder52.toString();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray57 = rotation5.getAngles(rotationOrder52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "XZY" + "'", str55, "XZY");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "XZY" + "'", str56, "XZY");
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-349325.91481434833d), (-0.5033082423383954d), 1.1002735867268008d);
        double double14 = rotation13.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.4633160987664107d + "'", double14 == 0.4633160987664107d);
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray24 = rotation23.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation44 = rotation30.applyTo(rotation42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        double double58 = rotation57.getQ2();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation30.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation79 = rotation65.applyTo(rotation77);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation30.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation23.applyTo(rotation79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation79.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D15.add(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.70605434589623d, 3.1364351454618995d, 6.938893903907228E-18d, 0.24476820490809906d, false);
        double double6 = rotation5.getQ0();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.70605434589623d + "'", double6 == 0.70605434589623d);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) (-1), (-0.476811323902129d), (-0.6205445805637455d), 0.5496694388267763d, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyTo(rotation29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        double double45 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.applyInverseTo(rotation44);
        double double47 = rotation44.getAngle();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation11.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation48.applyTo(rotation55);
        double double57 = rotation56.getQ0();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation5.applyInverseTo(rotation56);
        double[][] doubleArray59 = rotation58.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.8111383753205208d + "'", double57 == 0.8111383753205208d);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(doubleArray59);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Throwable[] throwableArray28 = notARotationMatrixException5.getSuppressed();
        java.lang.String str29 = notARotationMatrixException5.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str29, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.normalize();
        double double30 = org.apache.commons.math.geometry.Vector3D.angle(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D32.normalize();
        double double34 = vector3D32.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D32, (double) 10.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder37.getA3();
        java.lang.String str41 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder37.getA3();
        double double47 = vector3D46.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D(0.8605691650229957d, 2.6575295970997246d);
        double double52 = org.apache.commons.math.geometry.Vector3D.angle(vector3D46, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D29.add(0.3345571444794553d, vector3D51);
        double double54 = vector3D53.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0189832222323367d + "'", double30 == 1.0189832222323367d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.5707963267948966d) + "'", double34 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXY" + "'", str38, "ZXY");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.5707963267948966d + "'", double47 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2.306492779467043d + "'", double52 == 2.306492779467043d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.3064749276757589d + "'", double54 == 0.3064749276757589d);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.590031694590281d, 0.8390715290764523d, 0.5840734641020676d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D24, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D24);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-1.0d));
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyInverseTo(rotation39);
        double double42 = rotation41.getQ3();
        double double43 = rotation41.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.41371067928191213d + "'", double42 == 0.41371067928191213d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.41371067928191213d + "'", double43 == 0.41371067928191213d);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder2.getA2();
        java.lang.String str8 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder2.getA2();
        java.lang.String str11 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder2.getA3();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(97.02097113801663d, vector3D12, 0.9202635195876084d, vector3D19);
        double double21 = vector3D12.getZ();
        double double22 = vector3D12.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) (short) 1, (-1.0d), 98.0d);
        double double29 = rotation28.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation28.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        double double38 = rotation37.getQ1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray45 = rotation44.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation44.getAxis();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation37.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation28.applyTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 0L, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotation48.applyTo(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D52.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(0.761868908157811d, vector3D12, (-0.614653115741358d), vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZYZ" + "'", str11, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "XZX" + "'", str16, "XZX");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.6654428555205447d + "'", double29 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.496669722445646d + "'", double38 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.23606797749979d, (double) (-1L), (-0.7525070711305497d), (double) (byte) 1, false);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D10.getDelta();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation18.applyTo(vector3D20);
        double double22 = rotation18.getQ1();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation15.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation5.applyInverseTo(rotation15);
        double double25 = rotation24.getQ2();
        double double26 = rotation24.getAngle();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.7525070711305497d) + "'", double6 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.43488967909398024d + "'", double25 == 0.43488967909398024d);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.11078585244669703d, 1.5707963267948966d, (double) (byte) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation19.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation13.applyInverseTo(rotation60);
        double double63 = rotation60.getQ3();
        double double64 = rotation60.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation8.applyInverseTo(rotation60);
        double double66 = rotation65.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder67.getA2();
        double[] doubleArray73 = rotation65.getAngles(rotationOrder67);
        java.lang.String str74 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        double double77 = vector3D76.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.7604311401305615d + "'", double63 == 0.7604311401305615d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.23869349855450123d + "'", double64 == 0.23869349855450123d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2.1753991605364833d + "'", double66 == 2.1753991605364833d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.3608600607384158, 1.9716817996469662, -0.21856548626244626]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "XYX" + "'", str74, "XYX");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D24);
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D56, 1.278124800288793d);
        double double60 = vector3D56.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-20.0d) + "'", double57 == (-20.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation24.applyTo(rotation49);
        double[][] doubleArray51 = rotation24.getMatrix();
        double double52 = rotation24.getAngle();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation24.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.5707963267948963d + "'", double52 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(rotation53);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D29.subtract(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation25.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D64.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D58.add(9990.0d, vector3D74);
        double double76 = vector3D58.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.scalarMultiply(100.0d);
        double double7 = vector3D6.getX();
        double double8 = vector3D6.getX();
        double double9 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D35);
        double double38 = vector3D6.getY();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D6.scalarMultiply(0.6178548206313739d);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.5033082423383954d, (-0.9944340607881093d));
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.negate();
        double double46 = vector3D44.getY();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D40.subtract(0.5015459899437228d, vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10000.0d + "'", double38 == 10000.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.2628569025237593d + "'", double46 == 0.2628569025237593d);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder27.getA2();
        java.lang.String str32 = rotationOrder27.toString();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-111.1187887977885d), 1.3124732004186355d, 650.0349388427903d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 0.7604311401305615d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) 100, (-0.5114629390766603d), (-0.8414709848078965d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D3.add(vector3D12);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.normalize();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D61.subtract(1.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.subtract(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D51, vector3D54, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D25.subtract((double) 0, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation18.applyTo(vector3D84);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation18.applyInverseTo(vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D10.subtract(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D90.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), 0.23869349855450123d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Vector3D vector3D5 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double6 = org.apache.commons.math.geometry.Vector3D.angle(vector3D4, vector3D5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        java.lang.String str7 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        java.lang.String str12 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D8.add(0.5711944941453472d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D25);
        double double32 = vector3D25.getY();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, (-0.05546668618914311d), (-0.9132779260310951d));
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D46);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D20, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation48.applyTo(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) ' ', vector3D13, 0.13695094695195092d, vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZYZ" + "'", str7, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XYX" + "'", str12, "XYX");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation20.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (short) 1, (-1.0d), 98.0d);
        double double28 = rotation27.getQ3();
        org.apache.commons.math.geometry.Rotation rotation29 = rotation20.applyTo(rotation27);
        double double30 = rotation27.getAngle();
        double double31 = rotation27.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA3();
        java.lang.String str35 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder32.getA3();
        double[] doubleArray41 = rotation27.getAngles(rotationOrder32);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.6654428555205447d + "'", double28 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2.2064477193728065d + "'", double30 == 2.2064477193728065d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5277475438952628d + "'", double31 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation9.applyTo(vector3D13);
        double double17 = rotation9.getQ0();
        double double18 = rotation9.getQ2();
        double[][] doubleArray19 = rotation9.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.Object[] objArray24 = cardanEulerSingularityException22.getArguments();
        java.lang.String str25 = cardanEulerSingularityException22.getPattern();
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException22.getSuppressed();
        java.lang.String str29 = cardanEulerSingularityException22.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray40 = cardanEulerSingularityException36.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray40);
        cardanEulerSingularityException22.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        notARotationMatrixException20.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        java.lang.String str44 = notARotationMatrixException41.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.0955424909088009d) + "'", double17 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.6502970659532881d) + "'", double18 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str44, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-2.6347218965989545d), 1.918342529009908d);
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 44.73431728565376d, 2.379723745431982d, (-603.3649187928809d), true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        double double4 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D6, (-0.476811323902129d), vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double25 = org.apache.commons.math.geometry.Vector3D.angle(vector3D6, vector3D24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        double[][] doubleArray16 = rotation11.getMatrix();
        double double17 = rotation11.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        double double24 = vector3D21.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.orthogonal();
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(100.0d, 0.6654428555205447d, 0.0d);
        double double32 = vector3D31.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D26.subtract(vector3D31);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 0.5378050714624897d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str45 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D49.scalarMultiply(10.0d);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D33.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation11.applyTo(vector3D33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D57.add(vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.normalize();
        double double67 = vector3D65.getY();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D57.add(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D33.add(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.3691205271584663d + "'", double17 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 100.0022140464598d + "'", double32 == 100.0022140464598d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZXY" + "'", str37, "ZXY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ZXY" + "'", str45, "ZXY");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        notARotationMatrixException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray23 = notARotationMatrixException8.getSuppressed();
        java.lang.String str24 = notARotationMatrixException8.getPattern();
        java.lang.String str25 = notARotationMatrixException8.getPattern();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.04145438869418405d), (-0.7553239318203748d), 2.291758293585621d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray5 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray5, 1.898990647180086d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray5, 2.566370614359173d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D12.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.orthogonal();
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation9.applyTo(vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str21 = rotationOrder20.toString();
        java.lang.String str22 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder20.getA3();
        double[] doubleArray25 = rotation9.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder20.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.0d) + "'", double18 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[1.9741877734661284, -0.47848739462301776, 2.0587237947519674]");
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.11078585244669703d, 1.5707963267948966d, (double) (byte) 1);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.45973278686101987d), 788.3701330754276d, (-128.0d));
        double double13 = rotation12.getQ3();
        double double14 = rotation12.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.8036437989504776d) + "'", double13 == (-0.8036437989504776d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.08344852980719934d) + "'", double14 == (-0.08344852980719934d));
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA2();
        double double6 = vector3D5.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(27.47493735326811d, vector3D5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation54.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation19.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation13.applyInverseTo(rotation60);
        double double63 = rotation13.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        double[] doubleArray67 = rotation13.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D68, (-0.429556888950007d));
        double double73 = org.apache.commons.math.geometry.Vector3D.angle(vector3D5, vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XZY" + "'", str4, "XZY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.45973278686101987d) + "'", double63 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "XZX" + "'", str65, "XZX");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-2.227294405064556, 2.0413190668629926, -1.906858042085361]");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        double double35 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation7.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation57.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (-0.5033082423383954d));
        double double65 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(1.574525600288955d, vector3D60, 0.9685018602424225d, vector3D66, (-0.3775829393879908d), vector3D77);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D66, 2.5843417855249764d);
        double double81 = vector3D66.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1.0d) + "'", double65 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.2182358612485715d, (-0.09618196756046529d), (double) 100.0f, 0.6847869573979007d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        double[] doubleArray15 = rotation5.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA3();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5496694388267762d, 0.12637150995481888d, 0.429556888950007d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.2732790235297258d, 1.6134380694273578d, (-143.96727020572638d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation12);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, 0.9649660284921133d, 0.8415352216177445d, (-0.7339205705994797d));
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder38.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation20.getAxis();
        double[][] doubleArray22 = rotation20.getMatrix();
        double double23 = rotation20.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.08916778026708072d) + "'", double23 == (-0.08916778026708072d));
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation();
        double double9 = rotation8.getQ2();
        double double10 = rotation8.getQ3();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation7.applyInverseTo(rotation8);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation7.revert();
        double double13 = rotation7.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        java.lang.String str17 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, 100.0022140464598d, 0.5277475438952628d, 2.356194490192345d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder14.getA2();
        java.lang.String str32 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(2.8156024785781764d, 0.8775825618903728d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(1.4807974150702279d, vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA1();
        java.lang.String str48 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyInverseTo(rotation62);
        double double64 = rotation56.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation56.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation78 = rotation71.applyInverseTo(rotation77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation77.applyTo(vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotation77.getAxis();
        double double82 = org.apache.commons.math.geometry.Vector3D.angle(vector3D65, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((double) (-1.0f), vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D(0.30970294454245617d, vector3D42, 97.02097113801663d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D34.add(1.2732790235297258d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation7.applyTo(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.849647555864809d + "'", double13 == 0.849647555864809d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "YXZ" + "'", str46, "YXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "YXZ" + "'", str48, "YXZ");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.5114629390766603d + "'", double64 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.String str4 = cardanEulerSingularityException2.getPattern();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray6);
        java.lang.Object[] objArray8 = notARotationMatrixException7.getArguments();
        java.lang.Object[] objArray9 = notARotationMatrixException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray13);
        java.lang.Throwable[] throwableArray15 = notARotationMatrixException14.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D53.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D49, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D49);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation32.applyTo(rotation59);
        double[][] doubleArray61 = rotation32.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException62 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray61);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray61);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException64 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray61);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) doubleArray61);
        java.lang.String str66 = notARotationMatrixException65.getPattern();
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) notARotationMatrixException65);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException69 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray70 = cardanEulerSingularityException69.getArguments();
        java.lang.Object[] objArray71 = cardanEulerSingularityException69.getArguments();
        java.lang.String str72 = cardanEulerSingularityException69.getPattern();
        java.lang.Object[] objArray73 = cardanEulerSingularityException69.getArguments();
        java.lang.Throwable[] throwableArray74 = cardanEulerSingularityException69.getSuppressed();
        java.lang.Object[] objArray75 = cardanEulerSingularityException69.getArguments();
        java.lang.Object[] objArray76 = cardanEulerSingularityException69.getArguments();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException69.getSuppressed();
        java.lang.String str78 = cardanEulerSingularityException69.getPattern();
        java.lang.Object[] objArray79 = cardanEulerSingularityException69.getArguments();
        java.lang.String str80 = cardanEulerSingularityException69.getPattern();
        java.lang.Object[] objArray81 = cardanEulerSingularityException69.getArguments();
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException69);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) notARotationMatrixException14);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "XYX" + "'", str66, "XYX");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Euler angles singularity" + "'", str72, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D33, vector3D36, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D7.subtract((double) 0, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (-1.0f), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D70.add((-0.8412192543248603d), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D7.subtract(vector3D79);
        double double82 = vector3D81.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.002704888802286254d, 0.9999999999999999d, 0.9561956982716546d, false);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 1.47063388069739d, 0.9641189142896659d, 1.909372198055515d, false);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray7, 0.5559678498602987d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(doubleArray7, (-24.93977555585576d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(doubleArray7);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.negate();
        double double31 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        double double38 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D29, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation5.applyTo(vector3D37);
        double double40 = vector3D37.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-2.0d) + "'", double31 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-2.0d) + "'", double38 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D19, (double) 100.0f, vector3D27, (double) (short) -1, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D11.subtract(vector3D27);
        double double56 = vector3D11.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) '#', vector3D4, 0.0d, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D60.subtract(1.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.subtract(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D75.add((-1.0d), vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.negate();
        double double85 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.subtract(0.0d, vector3D89);
        double double92 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D83, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation59.applyTo(vector3D91);
        double double94 = vector3D93.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-2.0d) + "'", double85 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-2.0d) + "'", double92 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-0.6020912491308236d), (-0.9649660284921133d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        double[][] doubleArray26 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation34.revert();
        double double38 = rotation34.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZYZ" + "'", str31, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Object[] objArray5 = cardanEulerSingularityException3.getArguments();
        java.lang.String str6 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        java.lang.String str9 = cardanEulerSingularityException3.getPattern();
        java.lang.String str10 = cardanEulerSingularityException3.getPattern();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray28 = rotation27.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray28);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Object[] objArray34 = cardanEulerSingularityException32.getArguments();
        java.lang.String str35 = cardanEulerSingularityException32.getPattern();
        java.lang.Object[] objArray36 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray37 = cardanEulerSingularityException32.getSuppressed();
        notARotationMatrixException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Object[] objArray42 = cardanEulerSingularityException40.getArguments();
        java.lang.String str43 = cardanEulerSingularityException40.getPattern();
        java.lang.Object[] objArray44 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException40.getSuppressed();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException40.getSuppressed();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException3);
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str52 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str52, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        double double14 = vector3D13.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        double double57 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D26.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D26.subtract((-0.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D13.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D67.negate();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D67, (-2.7755575615628914E-17d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.orthogonal();
        double double81 = org.apache.commons.math.geometry.Vector3D.angle(vector3D66, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder84, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder84.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D67.add(100.00150912700792d, vector3D92);
        double double94 = vector3D93.getX();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D93.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.5607966601082315d + "'", double81 == 1.5607966601082315d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 101.00150912700792d + "'", double94 == 101.00150912700792d);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), (-0.24987572770084396d), (-0.476811323902129d));
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation11.applyTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation52.getAxis();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation52.revert();
        double double56 = rotation52.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation52.applyInverseTo(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        double double74 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(1.5607966601082315d, vector3D4, 2.677945044588987d, vector3D64, 0.28366218546322625d, vector3D71);
        double double78 = vector3D64.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.3103755182850353d + "'", double56 == 0.3103755182850353d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D6.add((-0.8412192543248603d), vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D2.subtract(1.278124800288793d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D2.orthogonal();
        double double19 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D2.normalize();
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.8623079947860166d + "'", double19 == 0.8623079947860166d);
        org.junit.Assert.assertNotNull(vector3D20);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, 10.0d, 1.8027186956254748d, (-0.4785186797839096d));
        double double70 = rotation69.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 3.0815982904279022d + "'", double70 == 3.0815982904279022d);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation10.revert();
        double double15 = rotation14.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.45072064175038395d) + "'", double15 == (-0.45072064175038395d));
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(16.62763166455332d, 16.62763166455332d, (double) '4', (double) 1, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation11.getAxis();
        double[][] doubleArray21 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation5.applyInverseTo(rotation11);
        double double23 = rotation11.getQ3();
        double double24 = rotation11.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.10830291305827339d + "'", double23 == 0.10830291305827339d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.0678198605632665d + "'", double24 == 2.0678198605632665d);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.negate();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D54.scalarMultiply(0.04145438869418405d);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        double double74 = org.apache.commons.math.geometry.Vector3D.angle(vector3D71, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D67, 0.0027048888022863306d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D61.add(1.0d, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D80.normalize();
        double double82 = vector3D80.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D80.subtract(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D75, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D75.normalize();
        java.lang.Class<?> wildcardClass91 = vector3D75.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.080456683454306d + "'", double74 == 1.080456683454306d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXY" + "'", str84, "ZXY");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.5079233958819608d, 0.42502526448939937d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (short) 1, (-1.0d), 98.0d);
        double double10 = rotation9.getQ3();
        double double11 = rotation9.getQ1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation18 = rotation9.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA1();
        double double26 = vector3D25.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D21.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation17.applyTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(27.47493735326811d, vector3D41);
        double double43 = vector3D37.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation17.applyTo(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D3.subtract(1.1712091244812974d, vector3D37);
        double double47 = vector3D37.getAlpha();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.6654428555205447d + "'", double10 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.5277475438952628d + "'", double11 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZYZ" + "'", str24, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.5707963267948966d + "'", double26 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 3.1364351454618995d + "'", double43 == 3.1364351454618995d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.61736114002488d + "'", double47 == 1.61736114002488d);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        java.lang.Object[] objArray11 = notARotationMatrixException10.getArguments();
        java.lang.Throwable[] throwableArray12 = notARotationMatrixException10.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.String str16 = cardanEulerSingularityException14.getPattern();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray30);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) notARotationMatrixException31);
        java.lang.Object[] objArray33 = cardanEulerSingularityException14.getArguments();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.String str35 = cardanEulerSingularityException14.getPattern();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYX" + "'", str6, "ZYX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray45);
        java.lang.Throwable[] throwableArray50 = notARotationMatrixException49.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str53 = cardanEulerSingularityException52.getPattern();
        java.lang.String str54 = cardanEulerSingularityException52.getPattern();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException52.getSuppressed();
        java.lang.String str57 = cardanEulerSingularityException52.getPattern();
        notARotationMatrixException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.String str59 = notARotationMatrixException49.toString();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str59, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.080456683454306d, (-0.5287508684135855d), 3.1330314046616845d);
        double double18 = rotation17.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D19.subtract(1.0d, vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D34, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D29, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray54 = rotation48.getAngles(rotationOrder49);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation43.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D71.add((-1.0d), vector3D73);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D79, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation82 = rotation48.applyTo(rotation81);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray84 = rotation48.getAngles(rotationOrder83);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, 10.0d, 1.8027186956254748d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder83.getA1();
        double[] doubleArray90 = rotation17.getAngles(rotationOrder83);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.4929138111311729d) + "'", double18 == (-0.4929138111311729d));
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-3.136677577065326, 2.0685230554669785, -2.6105111313948877]");
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 1, (-1.0d), 98.0d);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D7);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) (short) -1);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyTo(rotation28);
        double double31 = rotation16.getQ2();
        double double32 = rotation16.getQ1();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation10.applyInverseTo(rotation33);
        double[][] doubleArray35 = rotation34.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.6654428555205447d + "'", double6 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 32.0d + "'", double32 == 32.0d);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(doubleArray35);
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D15, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D15.subtract(vector3D34);
        java.lang.Class<?> wildcardClass36 = vector3D35.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-81.1783308126263d), 0.7071067811865474d);
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.1892698246741693d, 0.5840734641020676d);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.617866403174436d, (double) 10.0f, (-0.04104628521447248d), 0.6665981901433538d, true);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.6205445805637456d, (double) (short) 1, 2.638427581942488d, true);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, 0.04145438869418405d);
        org.apache.commons.math.geometry.Rotation rotation16 = rotation5.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder18.getA2();
        java.lang.String str24 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder18.getA1();
        double[] doubleArray28 = rotation16.getAngles(rotationOrder18);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 2.630600263688109d + "'", double6 == 2.630600263688109d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.7803524529878539d + "'", double17 == 0.7803524529878539d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZYZ" + "'", str24, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0967699773186332, 1.792110492894335, -1.1695007876315766]");
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException9);
        java.lang.Object[] objArray18 = notARotationMatrixException7.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Throwable[] throwableArray30 = notARotationMatrixException7.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) throwableArray30);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation6.getQ0();
        double double15 = rotation6.getAngle();
        double double16 = rotation6.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str18 = rotationOrder17.toString();
        java.lang.String str19 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA1();
        double[] doubleArray21 = rotation6.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 1.8350138259443276d, 0.24125648351783702d, 6.3007480475286926d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder17.getA2();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5114629390766603d + "'", double14 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2.0678198605632665d + "'", double15 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.3691205271584663d + "'", double16 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "XYX" + "'", str19, "XYX");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation6.applyTo(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D13.negate();
        double double15 = vector3D14.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D14.scalarMultiply(0.15135620392549756d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-2.7755575615628914E-17d) + "'", double15 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation57.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D41.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D60.scalarMultiply((-3.110368056629538d));
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D(0.9232154062269446d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((-35.0d), (double) (short) 100, (-10.53200198742562d));
        double double69 = vector3D68.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D63.subtract(vector3D68);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-10.53200198742562d) + "'", double69 == (-10.53200198742562d));
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException50.getSuppressed();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Object[] objArray68 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException58.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException71.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray76 = cardanEulerSingularityException75.getArguments();
        java.lang.String str77 = cardanEulerSingularityException75.getPattern();
        cardanEulerSingularityException71.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        java.lang.Object[] objArray79 = cardanEulerSingularityException75.getArguments();
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException75.getSuppressed();
        java.lang.Object[] objArray81 = cardanEulerSingularityException75.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException84 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray85 = cardanEulerSingularityException84.getArguments();
        java.lang.Throwable[] throwableArray86 = cardanEulerSingularityException84.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException88 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray89 = cardanEulerSingularityException88.getArguments();
        java.lang.String str90 = cardanEulerSingularityException88.getPattern();
        cardanEulerSingularityException84.addSuppressed((java.lang.Throwable) cardanEulerSingularityException88);
        java.lang.Object[] objArray92 = cardanEulerSingularityException88.getArguments();
        java.lang.Throwable[] throwableArray93 = cardanEulerSingularityException88.getSuppressed();
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException88.getSuppressed();
        java.lang.Object[] objArray95 = cardanEulerSingularityException88.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException96 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray95);
        cardanEulerSingularityException75.addSuppressed((java.lang.Throwable) notARotationMatrixException96);
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) notARotationMatrixException96);
        java.lang.Object[] objArray99 = cardanEulerSingularityException58.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Euler angles singularity" + "'", str77, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Euler angles singularity" + "'", str90, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
        org.junit.Assert.assertNotNull(throwableArray93);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[]");
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.012932544327696d + "'", double6 == 3.012932544327696d);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation12.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str42 = rotationOrder41.toString();
        double[] doubleArray43 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation39.applyTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation50.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (short) 0, 25.06596560241331d, 0.0027048888022863306d, false);
        double double58 = rotation57.getQ3();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder60.getA1();
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray67 = rotation59.getAngles(rotationOrder60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.CardanEulerSingularityException; message: Cardan angles singularity");
        } catch (org.apache.commons.math.geometry.CardanEulerSingularityException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0027048888022863306d + "'", double58 == 0.0027048888022863306d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation6.revert();
        double[][] doubleArray50 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", (java.lang.Object[]) doubleArray50);
        java.lang.Throwable[] throwableArray52 = notARotationMatrixException51.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.613563117918277d, 0.02143738182962339d, (-0.7071067811865474d), 811.3533568051935d, false);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-10.426860545076948d), 0.7760336155639872d, (-0.2879033166650653d), 0.0d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.applyTo(vector3D6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.20431139676264087d), (-0.752969672762625d), 1.4004193839319914d, 1.9897076525868147d, false);
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D11, (double) 100.0f, vector3D19, (double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D19.add((-1.0d), vector3D48);
        double double50 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D19.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D19.subtract((-0.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation7.applyTo(vector3D57);
        double[][] doubleArray60 = rotation7.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 1.6173610802715999d);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray60, 2.1678933499060977d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray60);
        java.lang.String str66 = notARotationMatrixException65.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXY" + "'", str54, "ZXY");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX" + "'", str66, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XZX");
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-919.4168818468384d), (-0.8903223073341484d));
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 0.45073280529073595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D2.scalarMultiply(0.5154025582583576d);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        double double12 = rotation4.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        java.lang.String str16 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str21 = rotationOrder13.toString();
        java.lang.String str22 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 1.5707963267948966d, 10000.0d, 0.24893698743024015d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (-0.4245292707565737d), 27.47493735326811d, 0.36259815178588733d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 2.0186255278998044d, (-0.3041288806189819d), 0.47011525616512123d);
        double[] doubleArray36 = rotation4.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder13.getA1();
        double double38 = vector3D37.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.44538811899676645d + "'", double12 == 0.44538811899676645d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[1.974187773466128, -0.4784873946230179, 2.058723794751967]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6035407492215862d, 2.2642302020795695d, (-0.0035470871188914787d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XYX" + "'", str3, "XYX");
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        double double5 = vector3D4.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.1447158152242767d), 0.12637150995481888d, (-0.9831961944536497d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation6.applyTo(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.negate();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation18.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.add((-1.0d), vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D32, (double) 100.0f, vector3D40, (double) (short) -1, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D40.add((-1.0d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation18.applyTo(vector3D69);
        double double72 = rotation18.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation18.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D11.add(1.0214487653061934d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D3.add(vector3D74);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.7683919425686428d) + "'", double72 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, 0.46903508512661635d, 0.10843323759201741d);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.4245292707565737d), 4.501410341272804d, 0.498184840722274d);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D12, (double) 100.0f, vector3D20, (double) (short) -1, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D20.add((-1.0d), vector3D49);
        double double51 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D20.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder67.getA3();
        java.lang.String str71 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D(0.7839109005632345d, vector3D53, (-2.0d), vector3D58, (double) (short) -1, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D5.add(3.105956669844917d, vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXY" + "'", str71, "ZXY");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException29.getArguments();
        java.lang.String str32 = cardanEulerSingularityException29.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        java.lang.String str40 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Object[] objArray50 = cardanEulerSingularityException48.getArguments();
        java.lang.String str51 = cardanEulerSingularityException48.getPattern();
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException48.getSuppressed();
        java.lang.String str54 = cardanEulerSingularityException48.getPattern();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray62 = rotation61.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray62);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray72);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        java.lang.Object[] objArray78 = cardanEulerSingularityException76.getArguments();
        java.lang.String str79 = cardanEulerSingularityException76.getPattern();
        java.lang.Object[] objArray80 = cardanEulerSingularityException76.getArguments();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException76.getSuppressed();
        notARotationMatrixException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException84 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray85 = cardanEulerSingularityException84.getArguments();
        java.lang.Object[] objArray86 = cardanEulerSingularityException84.getArguments();
        java.lang.String str87 = cardanEulerSingularityException84.getPattern();
        java.lang.Object[] objArray88 = cardanEulerSingularityException84.getArguments();
        java.lang.Throwable[] throwableArray89 = cardanEulerSingularityException84.getSuppressed();
        java.lang.Throwable[] throwableArray90 = cardanEulerSingularityException84.getSuppressed();
        cardanEulerSingularityException76.addSuppressed((java.lang.Throwable) cardanEulerSingularityException84);
        notARotationMatrixException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException84);
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException84);
        java.lang.Throwable[] throwableArray94 = cardanEulerSingularityException48.getSuppressed();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str96 = cardanEulerSingularityException37.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Euler angles singularity" + "'", str51, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Euler angles singularity" + "'", str87, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Euler angles singularity" + "'", str96, "Euler angles singularity");
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.scalarMultiply(100.0d);
        double double7 = vector3D6.getX();
        double double8 = vector3D6.getX();
        double double9 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D6.negate();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.negate();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(0.6918710786346925d, (-1.6637825785481737d), 0.45837097592276116d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D39.add(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D29, vector3D32, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D2.add(10.0d, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D60.normalize();
        double double62 = vector3D60.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D60.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder69.getA1();
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D79.negate();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.add(vector3D80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.scalarMultiply(100.0d);
        double double90 = vector3D89.getX();
        double double91 = vector3D89.getX();
        double double92 = vector3D89.getX();
        double double93 = vector3D89.getDelta();
        double double94 = vector3D89.getX();
        double double95 = vector3D89.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D89.scalarMultiply(2.9502157553926875d);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D81.subtract(100.0022140464598d, vector3D97);
        double double99 = vector3D98.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXY" + "'", str84, "ZXY");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 10000.0d + "'", double95 == 10000.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + (-2950281.4126025457d) + "'", double99 == (-2950281.4126025457d));
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        java.lang.String str12 = rotationOrder0.toString();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply((-0.9652558922076977d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZYZ" + "'", str13, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation4.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        double[][] doubleArray66 = rotation65.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.subtract(vector3D71);
        double double78 = vector3D71.getY();
        double double79 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D71.normalize();
        double double82 = vector3D71.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation65.applyInverseTo(vector3D83);
        double double85 = rotation65.getQ0();
        double double86 = rotation65.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 524.7609754926534d + "'", double85 == 524.7609754926534d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 524.7609754926534d + "'", double86 == 524.7609754926534d);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (-143.96727020572638d), (-0.45973278686101987d), 1.278124800288793d);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, 0.0d, 2.3114482587377294d, 0.8605691650229957d);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation50.applyInverseTo(rotation62);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-0.5960187205335067d) + "'", double51 == (-0.5960187205335067d));
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        double double24 = rotation23.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D40);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation23.applyTo(rotation50);
        double[][] doubleArray52 = rotation23.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException53 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray52);
        java.lang.Object[] objArray54 = notARotationMatrixException53.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException53);
        java.lang.Object[] objArray56 = notARotationMatrixException53.getArguments();
        java.lang.String str57 = notARotationMatrixException53.getPattern();
        java.lang.String str58 = notARotationMatrixException53.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str58, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4.128594500831825d, (-100.0022140464598d), 94.053434048068d, (-5113.358583779441d), false);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        double double8 = vector3D7.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.4242135627991309d, 0.5496694388267763d, 1.4721336309126734d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZY" + "'", str3, "XZY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D42, vector3D45, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D16.subtract((double) 0, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation9.applyTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D76);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder79.getA2();
        java.lang.String str85 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D76.add((-3.14088109773956d), vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D89.negate();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ZYZ" + "'", str85, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException12.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        double[][] doubleArray35 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray35);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException36);
        java.lang.String str38 = notARotationMatrixException36.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation47 = rotation46.revert();
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray48);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray48);
        java.lang.Object[] objArray51 = notARotationMatrixException50.getArguments();
        java.lang.String str52 = notARotationMatrixException50.getPattern();
        notARotationMatrixException36.addSuppressed((java.lang.Throwable) notARotationMatrixException50);
        java.lang.String str54 = notARotationMatrixException50.getPattern();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[[0.450732805290736, -0.7019747527151661, 0.5514266812416908], [-0.2979371073921011, 0.46400955251379594, 0.8342233605065102], [-0.8414709848078967, -0.5403023058681397, 2.220446049250313E-16]]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXY" + "'", str54, "ZXY");
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        double double11 = rotation10.getQ0();
        double double12 = rotation10.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.16624968048555705d) + "'", double11 == (-0.16624968048555705d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.16624968048555705d) + "'", double12 == (-0.16624968048555705d));
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D29, vector3D32, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D2.add(10.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        double double63 = vector3D60.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D60.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D65.add(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D69.negate();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D56, vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder72, (double) 0, (double) (short) 1, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D70.add(vector3D78);
        double double80 = vector3D79.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.negate();
        double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D79, vector3D93);
        double double95 = vector3D79.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXY" + "'", str73, "ZXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 3.141592653589793d + "'", double80 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.5707963267948966d + "'", double94 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 3.141592653589793d + "'", double95 == 3.141592653589793d);
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation24.applyTo(vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation24.applyTo(rotation49);
        double double51 = rotation24.getAngle();
        double double52 = rotation24.getQ1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.5707963267948963d + "'", double51 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D28, (double) 100.0f, vector3D36, (double) (short) -1, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D20.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D36, (-0.7683919425686428d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyTo(vector3D36);
        double double77 = rotation5.getQ0();
        double double78 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation5.applyInverseTo(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.5114629390766603d + "'", double77 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.7683919425686428d) + "'", double78 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "XYX" + "'", str80, "XYX");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Object[] objArray16 = cardanEulerSingularityException14.getArguments();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        java.lang.Object[] objArray18 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException14.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        double double37 = rotation36.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D53, vector3D57);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D48, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation62.revert();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation36.applyTo(rotation63);
        double[][] doubleArray65 = rotation36.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException66 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray65);
        java.lang.Object[] objArray67 = notARotationMatrixException66.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException68 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", objArray67);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException68);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation32.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        double double37 = org.apache.commons.math.geometry.Vector3D.angle(vector3D20, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D36);
        double double39 = vector3D4.getY();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA3();
        java.lang.String str33 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-0.24445647922771854d), (-0.3058692615856505d), (-0.40434811849845775d));
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder28.getA1();
        double double39 = vector3D38.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D37, vector3D39, vector3D42, vector3D64);
        double double66 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D68.subtract(1.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D64.add((double) 0.0f, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation11.applyTo(vector3D83);
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA2();
        java.lang.String str88 = rotationOrder85.toString();
        double[] doubleArray89 = rotation11.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D91.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 3.141592653589793d + "'", double66 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXZ" + "'", str88, "ZXZ");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((-0.44266332810163755d), 27.47493735326811d, (-1.2246467991473532E-16d), (-0.7710802937133043d), false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("Cardan angles singularity", (java.lang.Object[]) doubleArray7);
        java.lang.Object[] objArray9 = notARotationMatrixException8.getArguments();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[[1509.1362667761066, 0.6826579380974322, -42.37076552822522], [-0.6826579380974458, -0.608098355907964, -24.32429441636332], [-42.37076552822522, 24.32429441636332, 0.5810312827980273]]");
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation44.applyTo(vector3D46);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation53.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation44.applyTo(rotation65);
        double double69 = rotation44.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation44.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder71.getA2();
        double[] doubleArray79 = rotation44.getAngles(rotationOrder71);
        double[] doubleArray80 = rotation8.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 3.1364351454618995d, 107.5143815840712d, 0.4180214381946339d);
        java.lang.String str85 = rotationOrder71.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder71.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.10830291305827339d + "'", double69 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-2.9516420867200837, 1.419428439801259, 0.06262914659837245]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ZXZ" + "'", str85, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) 0L, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 0.5559678498602987d);
        double double5 = rotation4.getQ1();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.2744175283350592d) + "'", double5 == (-0.2744175283350592d));
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation36.getAxis();
        double double38 = rotation36.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyInverseTo(rotation50);
        double double52 = rotation44.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation44.applyTo(vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation75.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D68.add((-3.110368056629538d), vector3D76);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D63, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotation36.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.scalarMultiply((-0.4594686209785213d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.4212430843250595d) + "'", double38 == (-0.4212430843250595d));
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.7683919425686428d) + "'", double52 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZXY" + "'", str65, "ZXY");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray18 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray37 = cardanEulerSingularityException26.getArguments();
        java.lang.String str38 = cardanEulerSingularityException26.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str38, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        double double8 = vector3D7.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA1();
        double double12 = vector3D11.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D7.subtract(vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str25 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (-0.5114629390766603d), (-1.122967125689989d), (-0.2551713383813414d));
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.5707963267948966d + "'", double12 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "XYZ" + "'", str25, "XYZ");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray12 = rotation11.getMatrix();
        double double13 = rotation11.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder25.getA3();
        double[] doubleArray32 = rotation24.getAngles(rotationOrder25);
        double[] doubleArray33 = rotation11.getAngles(rotationOrder25);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation6.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.revert();
        double[][] doubleArray36 = rotation11.getMatrix();
        double double37 = rotation11.getQ1();
        double double38 = rotation11.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation11.getAxis();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.45973278686101987d) + "'", double13 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZYZ" + "'", str15, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-2.804640934446484, 0.47549431265859154, 0.9176116102223566]");
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.45973278686101987d) + "'", double37 == (-0.45973278686101987d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.13599489604735257d + "'", double38 == 0.13599489604735257d);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        double[][] doubleArray55 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(doubleArray55, (double) 1L);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation57.revert();
        double double59 = rotation58.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str70 = rotationOrder65.toString();
        double[] doubleArray71 = rotation64.getAngles(rotationOrder65);
        double[] doubleArray72 = rotation58.getAngles(rotationOrder65);
        double double73 = rotation58.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-0.13599489604735251d) + "'", double59 == (-0.13599489604735251d));
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ZYZ" + "'", str70, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.566370614359173, 1.0, -9.89537706590039E-17]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.13599489604735251d) + "'", double73 == (-0.13599489604735251d));
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.9985383670628745d + "'", double7 == 0.9985383670628745d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.031204323970714824d + "'", double8 == 0.031204323970714824d);
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        java.lang.String str6 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(0.04145438869418405d, 0.0d, 0.03251503442607181d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(0.5738046983621651d, vector3D9, (-0.5781899779970769d), vector3D14, 2.1528726726498926d, vector3D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XZX" + "'", str2, "XZX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZX" + "'", str6, "XZX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        double double9 = vector3D2.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray20 = rotation19.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation19.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D34.subtract(1.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D69.subtract(1.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.subtract(vector3D83);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D59, vector3D62, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D2.subtract((double) (byte) 0, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D89.negate();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-35.0d), 2.6575295970997246d, 0.07855369445570898d);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D90, vector3D94);
        double double96 = rotation95.getQ1();
        double double97 = rotation95.getQ2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.0011197763624739311d) + "'", double97 == (-0.0011197763624739311d));
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray8 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.String str11 = cardanEulerSingularityException1.getPattern();
        java.lang.String str12 = cardanEulerSingularityException1.getPattern();
        java.lang.String str13 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Euler angles singularity" + "'", str11, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str13, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.5281545841624364d, 0.5707963267948967d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA1();
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation26.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D19.add((-3.110368056629538d), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation57 = rotation42.applyTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D62.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D65.subtract((double) 0, vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str74 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str82 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder73.getA2();
        double double85 = vector3D84.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D65.add((double) 100L, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation42.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D27.add((-0.6883311189581703d), vector3D87);
        double double89 = vector3D88.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((-0.23708275547963084d), vector3D3, (-5.008138898616008E-18d), vector3D12, 2.339188269363539d, vector3D88);
        double double91 = vector3D3.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ZXY" + "'", str74, "ZXY");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXY" + "'", str82, "ZXY");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.688281122707858d) + "'", double89 == (-1.688281122707858d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.5281545841624364d + "'", double91 == 1.5281545841624364d);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 2.356194490192345d, 100.4491529857595d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder47.getA1();
        java.lang.String str56 = rotationOrder47.toString();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "YZX" + "'", str56, "YZX");
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D12, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D21.add((-0.8412192543248603d), vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D17.subtract(1.278124800288793d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10.0f, (double) 'a', (double) (short) 100);
        java.lang.String str40 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (-0.8292004581690567d), 0.7071067811865476d, 0.9988929054468333d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D17.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation14.applyTo(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZYZ" + "'", str35, "ZYZ");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZYZ" + "'", str40, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5224674736269327d, 0.9988929054468333d, 0.07855369445570898d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation30 = rotation29.revert();
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation22.applyInverseTo(rotation30);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation21.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation21.revert();
        double double36 = rotation21.getQ2();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        double double44 = rotation43.getQ0();
        double[][] doubleArray45 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation21.applyInverseTo(rotation43);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5033082423383954d + "'", double33 == 0.5033082423383954d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(rotation46);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        double double20 = rotation12.getQ0();
        double double21 = rotation12.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA1();
        java.lang.String str25 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation12.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D5.subtract((double) 1L, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D5.negate();
        double double31 = vector3D30.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.5114629390766603d + "'", double20 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.5114629390766603d + "'", double21 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "YXZ" + "'", str23, "YXZ");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "YXZ" + "'", str25, "YXZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1.5707963267948966d) + "'", double31 == (-1.5707963267948966d));
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.5708225783601752d, 650.0349388427903d, (-0.8790056663063665d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(0.42502526448939937d, 0.04145438869418405d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D3.add(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D21.orthogonal();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyInverseTo(rotation38);
        double double43 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.02143738182962339d + "'", double43 == 0.02143738182962339d);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        double double22 = vector3D21.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation5.applyInverseTo(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D(0.9574765279555026d, vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation31.getQ0();
        double double40 = rotation31.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str42 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder41.getA1();
        java.lang.String str44 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder41.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation31.applyInverseTo(vector3D46);
        double double48 = vector3D46.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D67.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D70.subtract((double) 0, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.subtract(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D78.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D76.add(2.0d, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation62.applyInverseTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D76.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str92 = rotationOrder91.toString();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder91.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D94 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D90, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(0.8178805821466244d, vector3D46, 1.144163849196767d, vector3D93);
        double double96 = org.apache.commons.math.geometry.Vector3D.angle(vector3D21, vector3D93);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5114629390766603d + "'", double39 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.5114629390766603d + "'", double40 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "YXZ" + "'", str42, "YXZ");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "YXZ" + "'", str44, "YXZ");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ZXY" + "'", str92, "ZXY");
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.5707963267948966d + "'", double96 == 1.5707963267948966d);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        double double40 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        double double55 = vector3D52.getDelta();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D52, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D4, (double) (byte) 10, vector3D47, (double) (short) -1, vector3D52, (double) ' ', vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.normalize();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        double double7 = vector3D6.getY();
        double double8 = vector3D6.getX();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyTo(rotation28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        double double44 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation16.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation51.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation16.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation66.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (-0.5033082423383954d));
        double double74 = vector3D73.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(1.574525600288955d, vector3D69, 0.9685018602424225d, vector3D75, (-0.3775829393879908d), vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D6.add(vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.0d) + "'", double74 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA1();
        double double9 = org.apache.commons.math.geometry.Vector3D.angle(vector3D0, vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply(100.0d);
        double double17 = vector3D16.getX();
        double double18 = vector3D16.getX();
        double double19 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D43.negate();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D45);
        double double48 = vector3D16.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA3();
        java.lang.String str52 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str57 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.normalize();
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D60);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.5707963267948966d + "'", double9 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10000.0d + "'", double48 == 10000.0d);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXY" + "'", str50, "ZXY");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.4721336309126734d, 0.06981453489777116d, 1.361310203000682E-5d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.7564240344749331d), vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D30, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D30);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D30, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        double[] doubleArray46 = rotation43.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (byte) 10, (double) 0.0f, (-128.0d));
        double[][] doubleArray55 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (short) 1, (-1.0d), 98.0d);
        double double67 = rotation66.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation66.getAxis();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation61.applyTo(rotation66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation69.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation54.applyTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(0.7389929959496068d, vector3D4, (-52.0d), vector3D12, (-0.09142402289123004d), vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.6654428555205447d + "'", double67 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (byte) 10, 1.0d, 0.0d);
        double[] doubleArray37 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.5137889913078371d, (-0.9036922050915068d), 0.999971733478154d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder30.getA3();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, 1.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D19, (double) 100.0f, vector3D27, (double) (short) -1, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D11.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D57);
        double double59 = rotation58.getAngle();
        double double60 = rotation58.getQ1();
        double double61 = rotation58.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder62.getA1();
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation58.applyTo(vector3D65);
        double double68 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D4, vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.5707963267948963d + "'", double59 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "YXZ" + "'", str63, "YXZ");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.590031694590281d, 0.8390715290764523d, 0.5840734641020676d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D24, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D24);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-1.0d));
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation7.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D43 = rotation41.applyTo(vector3D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.9949879346007117d), 1.8836428001690274E-6d, 1.5707963267948966d);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4212430843250595d), (-0.44266332810163755d), (-0.45973278686101987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str9 = rotationOrder8.toString();
        java.lang.String str10 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA3();
        double[] doubleArray17 = rotation7.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (-1.12493765766273d), (-0.858431163878729d), 1.4329119109954416d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-0.606594210907236, -0.1696980788134805, -0.5796781798539555]");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 25.06596560241331d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray17, 1.8228860923754615d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation23.getAxis();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        double double59 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation31.applyInverseTo(rotation58);
        double double61 = rotation58.getQ1();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation58.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation62.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str65 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        java.lang.String str67 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str72 = rotationOrder64.toString();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder64.getA2();
        double double74 = vector3D73.getY();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation62.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D24.add((-0.22891725792137424d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D73.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ZXY" + "'", str65, "ZXY");
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXY" + "'", str72, "ZXY");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6654501282278069d), 2.349555921538759d, (double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.XZY;
        double[] doubleArray32 = rotation30.getAngles(rotationOrder31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation17.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D34, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation37.revert();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.subtract(vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA3();
        double double53 = vector3D52.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D52.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D40.add(0.3691205271584663d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply(0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        double double65 = vector3D62.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D73.subtract((double) 0, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D83.subtract(0.0d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D81.subtract(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D79.add(2.0d, vector3D90);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D62, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation37.applyInverseTo(vector3D56);
        double double95 = vector3D94.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D94.orthogonal();
        double double97 = vector3D94.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D98 = rotation33.applyTo(vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXY" + "'", str51, "ZXY");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.8414709848078965d + "'", double95 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.065950263178233d + "'", double97 == 1.065950263178233d);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.7566633492309982d, 0.70605434589623d, (-0.09205634606228541d));
        double double4 = vector3D3.getY();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.70605434589623d + "'", double4 == 0.70605434589623d);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D2.subtract(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D11, (double) 100.0f, vector3D19, (double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D46, vector3D52);
        double double54 = vector3D52.getZ();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D7.negate();
        double double57 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(2.0d, (-0.5309649148733837d), 0.5493884591525647d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.negate();
        double double63 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D61);
        double double64 = vector3D7.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 98.0d + "'", double53 == 98.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5493884591525647d + "'", double63 == 0.5493884591525647d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.141592653589793d + "'", double64 == 3.141592653589793d);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.scalarMultiply((double) 0.0f);
        double double10 = vector3D3.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.add((-1.0d), vector3D58);
        double double60 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D29.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D29.subtract((-0.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation17.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D3.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.normalize();
        double double72 = vector3D71.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.49953734583289905d) + "'", double72 == (-0.49953734583289905d));
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.negate();
        double double29 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        double double36 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.add((-1.0d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D41, (double) 100.0f, vector3D49, (double) (short) -1, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D49.add((-1.0d), vector3D78);
        double double80 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D49.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D27.subtract(0.5114629390766603d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D(1.0553984905820601d, 0.8623079947860166d, (-0.9138363287001148d));
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D83.subtract(0.0d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D89);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-2.0d) + "'", double29 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-2.0d) + "'", double36 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, (-2.6615083595505498d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray12 = cardanEulerSingularityException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Object[] objArray30 = notARotationMatrixException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray40 = cardanEulerSingularityException36.getArguments();
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.String str42 = notARotationMatrixException19.getPattern();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray50 = rotation49.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray50);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray60 = rotation59.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException61 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray60);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException62 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray60);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        java.lang.Object[] objArray66 = cardanEulerSingularityException64.getArguments();
        java.lang.String str67 = cardanEulerSingularityException64.getPattern();
        java.lang.Object[] objArray68 = cardanEulerSingularityException64.getArguments();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException64.getSuppressed();
        notARotationMatrixException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException64);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray73 = cardanEulerSingularityException72.getArguments();
        java.lang.Object[] objArray74 = cardanEulerSingularityException72.getArguments();
        java.lang.String str75 = cardanEulerSingularityException72.getPattern();
        java.lang.Object[] objArray76 = cardanEulerSingularityException72.getArguments();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException72.getSuppressed();
        java.lang.Throwable[] throwableArray78 = cardanEulerSingularityException72.getSuppressed();
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        notARotationMatrixException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Object[] objArray82 = cardanEulerSingularityException72.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", objArray82);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException83);
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str42, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Euler angles singularity" + "'", str67, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Euler angles singularity" + "'", str75, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D5, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D18);
        double double23 = vector3D22.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (double) (byte) -1, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.negate();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((double) '#', vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((-2.8774418387984912d), vector3D10, 0.0d, vector3D30, 0.25077232336189154d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.scalarMultiply((-5113.358583779441d));
        org.apache.commons.math.geometry.Vector3D vector3D45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.5707963267948966d + "'", double23 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZYZ" + "'", str34, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-0.21114476788661177d), vector3D5);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA3();
        double double22 = vector3D21.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D9.add(0.3691205271584663d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.scalarMultiply(0.5153978362128364d);
        double double28 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D6.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D25.negate();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        java.lang.Object[] objArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException2 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZYZ", objArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        double double35 = rotation34.getQ2();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation7.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D72.subtract(1.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.subtract(vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D62, vector3D65, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation7.applyInverseTo(rotation88);
        double[][] doubleArray90 = rotation88.getMatrix();
        double[][] doubleArray91 = rotation88.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray91);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", (java.lang.Object[]) doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(doubleArray91, (-24.93977555585576d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation7.applyTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation20.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation28.revert();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation28.getAxis();
        double double38 = rotation28.getAngle();
        double double39 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation20.applyInverseTo(rotation28);
        double double41 = rotation20.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0678198605632665d + "'", double38 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.5114629390766603d + "'", double39 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.5387534149303419d) + "'", double41 == (-0.5387534149303419d));
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.3114482587377294d, 1.6134380694273582d, (-0.7860080026179649d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D24.subtract((double) 0, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D30.add(2.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation16.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D30.negate();
        double double45 = vector3D30.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.6126058204959273d, 0.13678051992484755d, 0.8152026922093308d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder50.getA3();
        java.lang.String str54 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder50.getA2();
        double double61 = vector3D60.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.normalize();
        double double63 = vector3D62.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D67);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D30, vector3D49, vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXY" + "'", str51, "ZXY");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZXY" + "'", str54, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.7385197090159134d, (-0.7182585569069458d));
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA2();
        double double6 = vector3D5.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(27.47493735326811d, vector3D5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str9 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D5.subtract(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XZY" + "'", str4, "XZY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getQ3();
        double[][] doubleArray36 = rotation32.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(doubleArray36, 4.141438273652066d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-10.53200198742562d), (-634.6978979926987d));
        double double8 = rotation7.getAngle();
        double double9 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 0, (double) (short) 10, (double) (short) -1, (double) '#', false);
        double double16 = rotation15.getQ0();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation7.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(4.341241737144209E-18d, 2.0678198605632665d, 6.3007480475286926d, (-0.04104628521447248d), false);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation7.applyTo(rotation23);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.0357975100483765d + "'", double8 == 2.0357975100483765d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0357975100483765d + "'", double9 == 2.0357975100483765d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(rotation24);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException17);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray37);
        java.lang.Throwable[] throwableArray40 = notARotationMatrixException39.getSuppressed();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException39);
        java.lang.Throwable[] throwableArray42 = notARotationMatrixException39.getSuppressed();
        java.lang.Throwable[] throwableArray43 = notARotationMatrixException39.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YZY", (java.lang.Object[]) throwableArray43);
        java.lang.String str45 = notARotationMatrixException44.toString();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YZY" + "'", str45, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YZY");
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D55, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation63.revert();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation63.getAxis();
        double double66 = rotation63.getQ1();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation37.applyTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation63.revert();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.26237485370392877d + "'", double66 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation59.revert();
        double double61 = rotation59.getQ3();
        double double62 = rotation59.getAngle();
        double double63 = rotation59.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.8415352216177445d + "'", double61 == 0.8415352216177445d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2.638427581942488d + "'", double62 == 2.638427581942488d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.8415352216177445d + "'", double63 == 0.8415352216177445d);
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D16, (double) 100.0f, vector3D24, (double) (short) -1, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D8.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, vector3D53);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(0.9166535214993772d, 0.45973278686101987d, (double) (byte) -1, 1.8228860923754615d, false);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(54.48484928630927d, vector3D54, (-1.4533522819483131d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.normalize();
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException16);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray36);
        java.lang.Throwable[] throwableArray39 = notARotationMatrixException38.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException38);
        java.lang.Throwable[] throwableArray41 = notARotationMatrixException38.getSuppressed();
        java.lang.Throwable[] throwableArray42 = notARotationMatrixException38.getSuppressed();
        java.lang.String str43 = notARotationMatrixException38.getPattern();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D15, (double) 100.0f, vector3D23, (double) (short) -1, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D7.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-1.0d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.negate();
        double double79 = vector3D77.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.zero;
        double double82 = vector3D81.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), vector3D23, (double) 1, vector3D77, (-0.5287508684135855d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.scalarMultiply(1.361310203000682E-5d);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D(0.8605691650229957d, vector3D85);
        double double87 = vector3D86.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2.0d + "'", double79 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2.3430031694671635E-5d + "'", double87 == 2.3430031694671635E-5d);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        double double9 = vector3D2.getY();
        double double10 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((-0.19537365596023334d));
        double double68 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D2.subtract(vector3D74);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.5707963267948966d + "'", double68 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.negate();
        double double19 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D12, vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.0128604214268008d), 0.5181089967534271d, 0.6205445805637456d, 107.5143815840712d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 3.1158711016865026d + "'", double8 == 3.1158711016865026d);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), 0.5033082423383954d, 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        double double13 = rotation12.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation12.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA2();
        double[] doubleArray21 = rotation12.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA2();
        double double27 = vector3D26.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation12.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D4.subtract((-0.19341124080029679d), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.scalarMultiply(0.6847869573979007d);
        double double32 = vector3D4.getZ();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.14599455657272695d) + "'", double13 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "XZX" + "'", str16, "XZX");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.911089704458946, 1.1032102335428604, 0.6658592074878087]");
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "XZX" + "'", str23, "XZX");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.9999736246184127d + "'", double32 == 0.9999736246184127d);
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        double double7 = vector3D6.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA2();
        java.lang.String str5 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XYX" + "'", str3, "XYX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XYX" + "'", str5, "XYX");
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D3, 100.0022140464598d);
        double double33 = rotation32.getQ2();
        double[][] doubleArray34 = rotation32.getMatrix();
        double double35 = rotation32.getAngle();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.2551713383813414d) + "'", double33 == (-0.2551713383813414d));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.5287508684135854d + "'", double35 == 0.5287508684135854d);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D9.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D25, (-0.7683919425686428d), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D2.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-143.96727020572638d), 2.1753991605364833d);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-0.429556888950007d), vector3D66, 97.02097113801663d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.subtract(vector3D75);
        double double82 = vector3D75.getY();
        double double83 = vector3D75.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D71.subtract(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(2.3114482587377294d, 1.6134380694273582d, (-0.7860080026179649d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D10.getDelta();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D10, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation15.applyTo(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(1.180914932111826d, vector3D4, (-0.1308559559744774d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str5 = cardanEulerSingularityException4.getPattern();
        java.lang.String str6 = cardanEulerSingularityException4.getPattern();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException4.getSuppressed();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YXY", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) throwableArray8);
        java.lang.Throwable[] throwableArray12 = notARotationMatrixException11.getSuppressed();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), 2010.8322649434506d, (-0.48235242686889757d));
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.26237485370392877d);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation19.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation70 = rotation12.applyTo(rotation68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation68.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(0.8390715290764523d, (double) 'a');
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA3();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D78, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(0.39865892577064643d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D73.add(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D84.negate();
        double double86 = vector3D85.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1.4434760001928124d) + "'", double86 == (-1.4434760001928124d));
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        double double46 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation18.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation53.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation18.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation11.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract(1.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.subtract(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation67.applyTo(vector3D85);
        double double87 = vector3D86.getY();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D5.add(vector3D86);
        org.apache.commons.math.geometry.RotationOrder rotationOrder90 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder90.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder90.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.negate();
        double double94 = vector3D92.getY();
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D(0.4485703331475911d, vector3D5, 0.26081761410019294d, vector3D92);
        double double96 = vector3D95.getZ();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-634.6978979926987d) + "'", double87 == (-634.6978979926987d));
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotationOrder90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.3310578300723806d + "'", double96 == 0.3310578300723806d);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-919.4168818468384d), 0.0d, 0.28366218546322625d, 99.14244106273873d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        java.lang.String str5 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D22.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation68 = rotation61.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation67.applyTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D51.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D51);
        double double73 = vector3D51.getY();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(1.3456649064771664d, vector3D51);
        double double75 = vector3D74.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.3456649064771664d + "'", double75 == 1.3456649064771664d);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.9311619336758188d), 1.692529618849575d);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        double double21 = rotation13.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.add((-1.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D36, (double) 100.0f, vector3D44, (double) (short) -1, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D28.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        double double80 = vector3D77.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D44, (-0.7683919425686428d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation13.applyTo(vector3D44);
        double double85 = rotation13.getQ1();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation7.applyTo(rotation13);
        double double87 = rotation7.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation7.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7683919425686428d) + "'", double21 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.3691205271584663d + "'", double85 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.04104628521447248d) + "'", double87 == (-0.04104628521447248d));
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.7910247108947177d, 1.9601685880784872d, 107.5143815840712d);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        double double46 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D39, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.negate();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(1.0d, vector3D45);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D45, 0.2253073452914015d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 98.0d + "'", double46 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        double double15 = rotation14.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract(1.0d, vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation40.revert();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation14.applyTo(rotation41);
        double[][] doubleArray43 = rotation14.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Object[] objArray48 = cardanEulerSingularityException46.getArguments();
        java.lang.String str49 = cardanEulerSingularityException46.getPattern();
        java.lang.Object[] objArray50 = cardanEulerSingularityException46.getArguments();
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Throwable[] throwableArray52 = notARotationMatrixException44.getSuppressed();
        java.lang.Object[] objArray53 = notARotationMatrixException44.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException54 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray53);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D18.add((-1.0d), vector3D47);
        double double49 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D18.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D18.subtract((-0.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation6.applyTo(vector3D56);
        double[][] doubleArray59 = rotation6.getMatrix();
        double double60 = rotation6.getQ3();
        double double61 = rotation6.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.1934112408002968d) + "'", double60 == (-0.1934112408002968d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.1934112408002968d) + "'", double61 == (-0.1934112408002968d));
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str4 = rotationOrder3.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), (double) 100L, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D2, vector3D7);
        double double15 = rotation14.getQ0();
        double double16 = rotation14.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.7071067811865476d + "'", double15 == 0.7071067811865476d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.5707963267948963d + "'", double16 == 1.5707963267948963d);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Object[] objArray14 = cardanEulerSingularityException12.getArguments();
        java.lang.String str15 = cardanEulerSingularityException12.getPattern();
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException12.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        double[][] doubleArray35 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException36 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray35);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException36);
        java.lang.Throwable[] throwableArray38 = notARotationMatrixException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str42 = cardanEulerSingularityException41.getPattern();
        java.lang.Object[] objArray43 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException46.getSuppressed();
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        notARotationMatrixException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        java.lang.Object[] objArray50 = notARotationMatrixException36.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(doubleArray57, 2.2112625254810094d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException60 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray57);
        notARotationMatrixException36.addSuppressed((java.lang.Throwable) notARotationMatrixException60);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Cardan angles singularity" + "'", str42, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        double double65 = vector3D63.getY();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double9 = rotation8.getAngle();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation17 = rotation8.applyInverseTo(rotation15);
        double[][] doubleArray18 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 35.0d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXZ", (java.lang.Object[]) doubleArray18);
        java.lang.Object[] objArray22 = notARotationMatrixException21.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        java.lang.String str28 = cardanEulerSingularityException25.getPattern();
        java.lang.Object[] objArray29 = cardanEulerSingularityException25.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray29);
        java.lang.Object[] objArray31 = notARotationMatrixException30.getArguments();
        java.lang.Object[] objArray32 = notARotationMatrixException30.getArguments();
        java.lang.Throwable[] throwableArray33 = notARotationMatrixException30.getSuppressed();
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) notARotationMatrixException30);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.2112625254810094d + "'", double9 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[[-0.8045276033247638, 0.0, 0.5939152595181499], [0.0, 0.9999999999999993, 0.0], [-0.5939152595181499, 0.0, -0.8045276033247638]]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        java.lang.String str8 = cardanEulerSingularityException2.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.String str12 = cardanEulerSingularityException10.getPattern();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException10.getArguments();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Object[] objArray35 = notARotationMatrixException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray45 = cardanEulerSingularityException41.getArguments();
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray47 = notARotationMatrixException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException49 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray50 = cardanEulerSingularityException49.getArguments();
        java.lang.Throwable[] throwableArray51 = cardanEulerSingularityException49.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        java.lang.String str55 = cardanEulerSingularityException53.getPattern();
        cardanEulerSingularityException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Object[] objArray57 = cardanEulerSingularityException53.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Throwable[] throwableArray62 = cardanEulerSingularityException60.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException63 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray62);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException65 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray66 = cardanEulerSingularityException65.getArguments();
        java.lang.Throwable[] throwableArray67 = cardanEulerSingularityException65.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException69 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray70 = cardanEulerSingularityException69.getArguments();
        java.lang.String str71 = cardanEulerSingularityException69.getPattern();
        cardanEulerSingularityException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException69);
        notARotationMatrixException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException65);
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) notARotationMatrixException63);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Throwable[] throwableArray76 = notARotationMatrixException24.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray79 = cardanEulerSingularityException78.getArguments();
        java.lang.Object[] objArray80 = cardanEulerSingularityException78.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str83 = cardanEulerSingularityException82.getPattern();
        java.lang.String str84 = cardanEulerSingularityException82.getPattern();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException82.getSuppressed();
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException78);
        java.lang.Object[] objArray88 = notARotationMatrixException24.getArguments();
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException24);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Euler angles singularity" + "'", str55, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Euler angles singularity" + "'", str71, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8342233605065102d, (-10.53200198742562d), (double) 10.0f);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7071067811865475d), 0.9999999999999999d, (double) (short) 1);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D45.subtract(1.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.subtract(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D35, vector3D38, vector3D60);
        double double62 = vector3D60.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D60.add((double) 0.0f, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D0.add((double) 0.0f, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.negate();
        double double83 = vector3D82.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.0d) + "'", double83 == (-0.0d));
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException2.getSuppressed();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        java.lang.Object[] objArray5 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException12.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.String str18 = cardanEulerSingularityException16.getPattern();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.Object[] objArray20 = cardanEulerSingularityException16.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray20);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException29.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.String str35 = cardanEulerSingularityException33.getPattern();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.Object[] objArray38 = notARotationMatrixException27.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.String str46 = cardanEulerSingularityException44.getPattern();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Object[] objArray48 = cardanEulerSingularityException44.getArguments();
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.String str50 = cardanEulerSingularityException44.getPattern();
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        java.lang.Object[] objArray55 = cardanEulerSingularityException53.getArguments();
        java.lang.String str56 = cardanEulerSingularityException53.getPattern();
        java.lang.Object[] objArray57 = cardanEulerSingularityException53.getArguments();
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException53.getSuppressed();
        java.lang.Object[] objArray59 = cardanEulerSingularityException53.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray64);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Throwable[] throwableArray69 = cardanEulerSingularityException67.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException71 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray72 = cardanEulerSingularityException71.getArguments();
        java.lang.String str73 = cardanEulerSingularityException71.getPattern();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException71);
        notARotationMatrixException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.Object[] objArray76 = notARotationMatrixException65.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException78 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray79 = cardanEulerSingularityException78.getArguments();
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException78.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException82 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray83 = cardanEulerSingularityException82.getArguments();
        java.lang.String str84 = cardanEulerSingularityException82.getPattern();
        cardanEulerSingularityException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        java.lang.Object[] objArray86 = cardanEulerSingularityException82.getArguments();
        notARotationMatrixException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException82);
        java.lang.String str88 = notARotationMatrixException65.getPattern();
        cardanEulerSingularityException53.addSuppressed((java.lang.Throwable) notARotationMatrixException65);
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException53);
        java.lang.Object[] objArray91 = cardanEulerSingularityException53.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException92 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray91);
        java.lang.String str93 = notARotationMatrixException92.getPattern();
        java.lang.Object[] objArray94 = notARotationMatrixException92.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException95 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ", objArray94);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException96 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", objArray94);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) notARotationMatrixException96);
        java.lang.Object[] objArray98 = notARotationMatrixException6.getArguments();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Euler angles singularity" + "'", str35, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str88, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str93, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation48 = rotation41.applyInverseTo(rotation47);
        double double49 = rotation48.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D65, vector3D69);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D65);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation74.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation48.applyTo(rotation75);
        double[][] doubleArray77 = rotation48.getMatrix();
        double double78 = rotation48.getQ2();
        double double79 = rotation48.getQ3();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation32.applyTo(rotation48);
        double double81 = rotation48.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (byte) 10, 2.0d, Double.NaN, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D9, (double) 100.0f, vector3D17, (double) (short) -1, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D47, (double) (-1L));
        double double50 = vector3D47.getX();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str58 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA1();
        java.lang.String str60 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder57.getA3();
        double[] doubleArray62 = rotation56.getAngles(rotationOrder57);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D46, vector3D47, vector3D63, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D69, vector3D73);
        double double75 = vector3D69.getY();
        double double76 = vector3D69.getX();
        double double77 = vector3D69.getDelta();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "YXZ" + "'", str58, "YXZ");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "YXZ" + "'", str60, "YXZ");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.06488269338667595d, 0.7385197090159134d, (-0.8036437989504776d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D8, (double) (-1));
        double double11 = vector3D8.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D2.subtract((-1.688281122707858d), vector3D8);
        double double13 = vector3D12.getY();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.15135620392549756d + "'", double11 == 0.15135620392549756d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1071.5456196067707d) + "'", double13 == (-1071.5456196067707d));
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        double double60 = vector3D59.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D12.subtract((double) 10.0f, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D68.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D62.subtract(vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder74.getA1();
        java.lang.String str80 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D64.add(vector3D81);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "YXY" + "'", str80, "YXY");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-0.8942012921495908d));
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 2.2112625254810094d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) doubleArray6);
        java.lang.Throwable[] throwableArray10 = notARotationMatrixException9.getSuppressed();
        java.lang.Throwable[] throwableArray11 = notARotationMatrixException9.getSuppressed();
        java.lang.String str12 = notARotationMatrixException9.getPattern();
        java.lang.String str13 = notARotationMatrixException9.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXZ" + "'", str13, "ZXZ");
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        java.lang.String str25 = cardanEulerSingularityException21.toString();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str25, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation66 = rotation29.revert();
        double[][] doubleArray67 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.subtract((double) 0, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation66.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation5.getAxis();
        double[][] doubleArray15 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 1.5607966601082315d);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 1.2474454753632944d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 0.6654428555205447d, 0.6654428555205447d, 98.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder35.getA3();
        java.lang.String str39 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder35.getA3();
        double double45 = vector3D44.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation34.applyTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(27.47493735326811d, vector3D55);
        double double57 = vector3D51.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D46.add(0.0d, vector3D51);
        double double59 = vector3D46.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation19.applyTo(vector3D46);
        double double61 = vector3D60.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZYZ" + "'", str21, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ZXY" + "'", str39, "ZXY");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 3.1364351454618995d + "'", double57 == 3.1364351454618995d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.9999999999999998d + "'", double61 == 0.9999999999999998d);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.42955688895000704d), 0.496669722445646d);
        double double3 = vector3D2.getY();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.3661479576990645d) + "'", double3 == (-0.3661479576990645d));
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D8);
        double double15 = vector3D8.getY();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, (-0.05546668618914311d), (-0.9132779260310951d));
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D25, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D29);
        java.lang.Class<?> wildcardClass32 = vector3D29.getClass();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (byte) 10, 2.0d, Double.NaN, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D9, (double) 100.0f, vector3D17, (double) (short) -1, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation5.applyInverseTo(vector3D56);
        double double58 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2.0d + "'", double58 == 2.0d);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyInverseTo(rotation38);
        double double43 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA2();
        java.lang.String str47 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder44.getA1();
        double[] doubleArray49 = rotation5.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder44.getA3();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.33931220530841594d + "'", double43 == 0.33931220530841594d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "XZY" + "'", str47, "XZY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-0.692484455049887, -0.04691477410505512, -0.003689408947591821]");
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D25.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation70.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D54.subtract(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation86.applyTo(vector3D88);
        double double90 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D74, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D88);
        double[][] doubleArray92 = rotation91.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(doubleArray92, 0.13322414396144652d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(doubleArray92, (-0.8749876620099952d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.4533522819483131d + "'", double90 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(doubleArray92);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D68, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D75.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation71.applyTo(vector3D75);
        double double83 = vector3D75.getNorm();
        double double84 = vector3D75.getZ();
        double double85 = vector3D75.getZ();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYZ" + "'", str67, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply(1.4721336309126734d);
        double double15 = vector3D12.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        double double33 = vector3D31.getDelta();
        double double34 = vector3D31.getY();
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D(2.009786123187427d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        double double45 = vector3D42.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D38.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D31.add(0.8414709848078965d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.scalarMultiply((-0.3853836343738811d));
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D51.orthogonal();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.4242135627991309d, 0.33931220530841594d, 0.6205445805637456d, true);
        double double6 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        double double16 = vector3D9.getY();
        double double17 = vector3D9.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.add((-1.0d), vector3D35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D41, vector3D43, vector3D46, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation5.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        double double78 = rotation77.getAngle();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation77.revert();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.negate();
        double double84 = vector3D83.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation79.applyTo(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation5.applyInverseTo(vector3D85);
        double double87 = vector3D85.getY();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 3.012932544327696d + "'", double78 == 3.012932544327696d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.0d) + "'", double84 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.5075744969103078d) + "'", double87 == (-0.5075744969103078d));
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D11.subtract((double) 10.0f, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA3();
        java.lang.String str70 = rotationOrder68.toString();
        double[] doubleArray71 = rotation67.getAngles(rotationOrder68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D11.add(vector3D72);
        double double74 = vector3D72.getY();
        java.lang.Class<?> wildcardClass75 = vector3D72.getClass();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "XYX" + "'", str70, "XYX");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.9765213798493405d + "'", double74 == 0.9765213798493405d);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Rotation rotation29 = rotation15.applyTo(rotation27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation35.applyInverseTo(rotation41);
        double double43 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation15.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation50.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation15.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation65.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D8.subtract((-2.7755575615628914E-17d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D1.add((double) (byte) 0, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D8.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D8, 100.4491529857595d);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray72);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(doubleArray72);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D2.subtract(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D11, (double) 100.0f, vector3D19, (double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        double double53 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D46, vector3D52);
        double double54 = vector3D52.getZ();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D7, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D7.negate();
        double double57 = vector3D7.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(2.0d, (-0.5309649148733837d), 0.5493884591525647d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.negate();
        double double63 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D(100.0022140464598d, 2.0d, 0.5738046983621651d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D61.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D67.scalarMultiply((-0.7853981633974482d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 98.0d + "'", double53 == 98.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.5493884591525647d + "'", double63 == 0.5493884591525647d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str26 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract((double) (-1L), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D46.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D49.subtract((double) 0, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D57.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D55.add(2.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation41.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D55.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D69, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D73, vector3D77);
        double double79 = org.apache.commons.math.geometry.Vector3D.angle(vector3D27, vector3D73);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D73, (-0.9595496299847904d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXY" + "'", str71, "ZXY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.5707963267948966d + "'", double79 == 1.5707963267948966d);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8762551259675299d, 0.7853981633974484d, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D18.subtract((double) 0, vector3D23);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D24, (-1.0d));
        double double27 = rotation26.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation36.applyTo(vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation56 = rotation49.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation55.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation55.getAxis();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation36.applyTo(rotation55);
        double double61 = rotation60.getQ0();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation60.revert();
        double double63 = rotation60.getQ0();
        double double64 = rotation60.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation68 = rotation67.revert();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation60.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation26.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation10.applyInverseTo(rotation70);
        double double73 = rotation72.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYX" + "'", str6, "ZYX");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.8775825618903728d + "'", double27 == 0.8775825618903728d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ZXY" + "'", str39, "ZXY");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.48235242686889757d) + "'", double61 == (-0.48235242686889757d));
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.48235242686889757d) + "'", double63 == (-0.48235242686889757d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2.1349162105446426d + "'", double64 == 2.1349162105446426d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.1358682901035784d + "'", double73 == 3.1358682901035784d);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation4.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation62.revert();
        double double66 = rotation62.getQ1();
        double[][] doubleArray67 = rotation62.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-378.71766086458643d) + "'", double66 == (-378.71766086458643d));
        org.junit.Assert.assertNotNull(doubleArray67);
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.3114482587377294d, 0.8605691650229957d);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.639428741271982d, 0.613563117918277d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.negate();
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(5.745303663565185E-4d, 1.9189994267166148d);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D9.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D6.add(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation71.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D55.subtract(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        double double84 = vector3D83.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double91 = vector3D90.getX();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D87.subtract(0.0d, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D85.subtract(vector3D87);
        double double94 = vector3D87.getY();
        double double95 = vector3D87.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D74, vector3D76, vector3D83, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D((-0.5114629390766603d), vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D6.add(0.10830291305827339d, vector3D97);
        double double99 = vector3D97.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + (-0.0d) + "'", double99 == (-0.0d));
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D6.subtract((double) 0, vector3D64);
        double double66 = vector3D64.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.6279500665709146d, 0.8390715290764523d, (-2.4546359825450494d));
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str9 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray10 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.5037268791615577d, 0.5154025582583576d, (-1.4711276743037347d));
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(0.5079233958819608d, (double) (byte) 100, 649.9580153489533d, 0.28366218546322625d, false);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D40, vector3D43, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation66.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D78);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D79, (-1.5707963267948966d));
        double[][] doubleArray82 = rotation81.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation66.applyInverseTo(rotation81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation83.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation14.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.normalize();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZYZ" + "'", str77, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D15.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYZ" + "'", str8, "XYZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.153573489132929d, (double) 1, (-54.50256143565405d), 0.5707963267948967d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        java.lang.String str8 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 64.0d, (-0.2003909367058787d), 0.0d);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.applyInverseTo(rotation13);
        double double15 = rotation14.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-45.050649150694454d) + "'", double15 == (-45.050649150694454d));
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        double double4 = vector3D2.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.add(2.306492779467043d, vector3D2);
        double double9 = vector3D2.getY();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((-35.0d), (double) (short) 100, (-10.53200198742562d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D2.add(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D2.negate();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.949327365002713d, 10.618890631312926d, 1.920946278942357E-4d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.2573179145927016d, 0.3345571444794553d, 97.0d);
        double double11 = rotation10.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.22926598717476432d) + "'", double11 == (-0.22926598717476432d));
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.add((-1.0d), vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D37, vector3D40, vector3D62);
        double double64 = vector3D62.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D62.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        double double73 = vector3D70.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D70.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D62.add(vector3D75);
        double double77 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D11, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D62.orthogonal();
        double double80 = vector3D62.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.141592653589793d + "'", double64 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-3401.3628100906258d), 18.533491989947702d, 2.1460183660255168d, 2.7755575615628914E-17d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str17 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation14.applyTo(vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation33.applyTo(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation33.getAxis();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation14.applyTo(rotation33);
        double double39 = rotation38.getQ0();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation5.applyInverseTo(rotation40);
        double double42 = rotation41.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.add((-1.0d), vector3D61);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D59, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D59);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D59, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA2();
        double[] doubleArray75 = rotation72.getAngles(rotationOrder73);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, 0.0d, 1.4533522819483131d, 0.496669722445646d);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, 1.080456683454306d, (double) 1, 0.012535694387858676d);
        double double84 = rotation83.getQ2();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation41.applyInverseTo(rotation83);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.48235242686889757d) + "'", double39 == (-0.48235242686889757d));
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1628.8450262695176d + "'", double42 == 1628.8450262695176d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.24186177485288693d + "'", double84 == 0.24186177485288693d);
        org.junit.Assert.assertNotNull(rotation85);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYZ" + "'", str2, "XYZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYZ" + "'", str6, "XYZ");
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation((-1.5707963267948966d), (-128.0d), (double) 100, (-634.6978979926987d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str61 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder52.getA3();
        double[] doubleArray63 = rotation51.getAngles(rotationOrder52);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D44.add(0.0d, vector3D64);
        double double66 = vector3D44.getAlpha();
        double double67 = vector3D44.getNorm();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.0839714812479087, -0.3012102754101647, -0.40674968370342685]");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.0d) + "'", double66 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.01922540788126261d), 1.786749131547214d, 524.7609754926534d, 1.6890618655345513d, true);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.negate();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str47 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.scalarMultiply(100.0d);
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), vector3D39, (-143.96727020572638d), vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder56.getA3();
        java.lang.String str60 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder56.getA3();
        double double66 = vector3D65.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D39, 2.0985845029684933d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation35.applyInverseTo(vector3D39);
        double double69 = org.apache.commons.math.geometry.Vector3D.angle(vector3D29, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-0.9996514452085571d), vector3D70);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.5262902691431163d) + "'", double36 == (-0.5262902691431163d));
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXY" + "'", str47, "ZXY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXY" + "'", str60, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.5707963267948966d + "'", double66 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.505260009229146d + "'", double69 == 1.505260009229146d);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.122967125689989d), (-0.9649660284921133d), 0.15388504775119377d, 0.0d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.6918710786346925d), 0.7604311401305615d, (-0.5912044389450646d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D7);
        double double14 = vector3D7.getY();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, (-0.05546668618914311d), (-0.9132779260310951d));
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D24.negate();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D3.add(vector3D30);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str6 = cardanEulerSingularityException5.getPattern();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyTo(rotation28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        double double44 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation16.applyInverseTo(rotation43);
        double double46 = rotation43.getQ1();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation43.revert();
        double[][] doubleArray48 = rotation47.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray48);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException49);
        java.lang.String str51 = notARotationMatrixException49.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: XZX" + "'", str51, "org.apache.commons.math.geometry.NotARotationMatrixException: XZX");
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.8414709848078965d, (-0.9138363287001148d), 0.428182669496151d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-0.12637150995481888d), 0.14599455657272695d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-143.96727020572638d), (-0.1934112408002968d), (-634.6978979926987d));
        double double18 = vector3D17.getY();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D17);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation19.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.1934112408002968d) + "'", double18 == (-0.1934112408002968d));
        org.junit.Assert.assertNotNull(rotation20);
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (double) 0.0f, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D3.add(1.8350138259443276d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D25.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.add((-1.0d), vector3D29);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D29, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation37.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str41 = rotationOrder40.toString();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA3();
        double double43 = vector3D42.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        double double52 = vector3D46.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D46.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D11.add(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA3();
        double double70 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D57.add(0.3691205271584663d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.scalarMultiply(0.5153978362128364d);
        double double76 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D46.add(vector3D73);
        double double78 = vector3D77.getZ();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ZXY" + "'", str41, "ZXY");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(vector3D7, 0.5707963267948967d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double[][] doubleArray5 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation4.revert();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, (double) 1.0f, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024012d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.normalize();
        double double19 = org.apache.commons.math.geometry.Vector3D.angle(vector3D13, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation4.applyTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply((-0.004742997713180494d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.8793567727719179d + "'", double19 == 0.8793567727719179d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation5.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.7683919425686428d) + "'", double15 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (byte) 10, 2.0d, Double.NaN, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D9, (double) 100.0f, vector3D17, (double) (short) -1, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply(1.5786086678549978d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray18 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Object[] objArray36 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray45 = rotation44.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray45);
        java.lang.String str48 = notARotationMatrixException47.getPattern();
        java.lang.Throwable[] throwableArray49 = notARotationMatrixException47.getSuppressed();
        java.lang.Object[] objArray50 = notARotationMatrixException47.getArguments();
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) notARotationMatrixException47);
        java.lang.Throwable[] throwableArray52 = notARotationMatrixException47.getSuppressed();
        java.lang.Throwable[] throwableArray53 = notARotationMatrixException47.getSuppressed();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray13);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray23);
        java.lang.String str26 = notARotationMatrixException25.getPattern();
        java.lang.String str27 = notARotationMatrixException25.getPattern();
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) notARotationMatrixException25);
        java.lang.Throwable[] throwableArray29 = notARotationMatrixException25.getSuppressed();
        java.lang.Object[] objArray30 = notARotationMatrixException25.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Object[] objArray24 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.String str39 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray42 = notARotationMatrixException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.String str50 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str54 = cardanEulerSingularityException48.getPattern();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.String str59 = cardanEulerSingularityException57.getPattern();
        java.lang.String str60 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray64 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA2();
        java.lang.String str7 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        java.lang.String str10 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA3();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(97.02097113801663d, vector3D11, 0.9202635195876084d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D24, (double) 100.0f, vector3D32, (double) (short) -1, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D32.add((-1.0d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.scalarMultiply(0.8354149633266263d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D19.add(3.0419236247578776d, vector3D65);
        double double67 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder69.getA2();
        java.lang.String str77 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder69.getA2();
        double double81 = vector3D80.getNorm();
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D19, vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZYZ" + "'", str7, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XZX" + "'", str15, "XZX");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 97.94123465760424d + "'", double67 == 97.94123465760424d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXZ" + "'", str77, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        double[] doubleArray19 = rotation11.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (-2.0d), (-1.0d), 0.0d);
        double double24 = rotation23.getAngle();
        double double25 = rotation23.getQ1();
        org.apache.commons.math.geometry.Rotation rotation26 = rotation23.revert();
        double double27 = rotation26.getQ0();
        double double28 = rotation26.getAngle();
        double double29 = rotation26.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-0.657879182722611, 0.47402663624573416, 1.8024949709136886]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.153573489132929d + "'", double24 == 2.153573489132929d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.7384602626041288d + "'", double25 == 0.7384602626041288d);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.4741598817790379d) + "'", double27 == (-0.4741598817790379d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.153573489132929d + "'", double28 == 2.153573489132929d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-0.4741598817790379d) + "'", double29 == (-0.4741598817790379d));
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        java.lang.String str6 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZX" + "'", str6, "XZX");
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotation31.applyTo(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation31.getAxis();
        double[][] doubleArray36 = rotation31.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        double double54 = rotation53.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D70, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D70);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation79.revert();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation53.applyTo(rotation80);
        double[][] doubleArray82 = rotation53.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException83 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray82);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray82);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) notARotationMatrixException84);
        java.lang.String str86 = notARotationMatrixException37.getPattern();
        java.lang.String str87 = notARotationMatrixException37.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Euler angles singularity" + "'", str86, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str87, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder5.getA2();
        java.lang.String str13 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str26 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.applyTo(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D46.scalarMultiply((double) (-1L));
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(24.882865501017502d, vector3D18, (-1.0d), vector3D27, 1.5707963267948961d, vector3D43, 0.5277475438952628d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D2.add(0.5114629390766603d, vector3D48);
        double double52 = vector3D48.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXZ" + "'", str13, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYZ" + "'", str26, "XYZ");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.0d) + "'", double49 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-3.141592653589793d) + "'", double52 == (-3.141592653589793d));
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation10.getAxis();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.applyTo(rotation10);
        double double14 = rotation10.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation10.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation10.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 100, (double) (short) 10, (double) 10L);
        double double22 = rotation21.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA3();
        double[] doubleArray28 = rotation21.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D46, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA3();
        double[] doubleArray59 = rotation54.getAngles(rotationOrder56);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, 0.26237485370392877d, 0.8415352216177445d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, 0.0027048888022863306d, 2.0985845029684933d, 2.23606797749979d);
        double[] doubleArray72 = rotation21.getAngles(rotationOrder56);
        double[] doubleArray73 = rotation10.getAngles(rotationOrder56);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder56.getA1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.45072064175038395d + "'", double14 == 0.45072064175038395d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.8662089827552298d) + "'", double22 == (-0.8662089827552298d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "XZX" + "'", str24, "XZX");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-0.5911320301150214, 2.1817925909340987, -1.025435474584856]");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.61062773871641, -0.5752220392306202, 0.5752220392306203]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D24, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.add((-1.0d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D38, (double) 100.0f, vector3D46, (double) (short) -1, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D46.add((-1.0d), vector3D75);
        double double77 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D46.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D24.subtract(0.5114629390766603d, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D79, 0.5153978362128364d);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D79, 0.06847869573979007d);
        double[][] doubleArray85 = rotation84.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException86 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) doubleArray85);
        java.lang.Class<?> wildcardClass87 = notARotationMatrixException86.getClass();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-2.0d) + "'", double26 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-2.0d) + "'", double33 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str2 = rotationOrder1.toString();
        java.lang.String str3 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        java.lang.String str5 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 7.880514097121173d, 785.3994663708453d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        double double53 = vector3D17.getX();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(vector3D17, (double) 'a');
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation55.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(0.7384602626041288d, vector3D11, 1.9189994267166148d, vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XYX" + "'", str3, "XYX");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "XYX" + "'", str5, "XYX");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(0.7316279195830642d, (-0.5819684858338714d), 3.0494479105138855E-17d, 3.1382470946270726d, true);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation20.revert();
        double double22 = rotation20.getQ3();
        org.apache.commons.math.geometry.Rotation rotation23 = rotation5.applyInverseTo(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.9583802632332237d + "'", double22 == 0.9583802632332237d);
        org.junit.Assert.assertNotNull(rotation23);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.scalarMultiply((double) 0.0f);
        double double10 = vector3D3.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.add((-1.0d), vector3D58);
        double double60 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D29.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D29.subtract((-0.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation17.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D3.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, vector3D74);
        double double76 = vector3D74.getZ();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D74);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D70, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, 10.0d, 1.8228860923754615d, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Rotation rotation86 = rotation79.applyInverseTo(rotation85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation79.getAxis();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.normalize();
        double double18 = vector3D17.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.negate();
        double double20 = vector3D17.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.5707963267948966d + "'", double18 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.String str9 = cardanEulerSingularityException7.getPattern();
        cardanEulerSingularityException3.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray11 = cardanEulerSingularityException7.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", objArray11);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYZ", objArray11);
        java.lang.String str14 = notARotationMatrixException13.toString();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYZ" + "'", str14, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYZ");
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation16.applyTo(rotation28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation43 = rotation36.applyInverseTo(rotation42);
        double double44 = rotation43.getQ2();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation16.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation16.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation10.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D60.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation57.applyTo(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation5.applyTo(vector3D69);
        double double71 = rotation5.getQ2();
        double double72 = rotation5.getQ2();
        double double73 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.6870674358985721d + "'", double71 == 0.6870674358985721d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.6870674358985721d + "'", double72 == 0.6870674358985721d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2.042108152999217d + "'", double73 == 2.042108152999217d);
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        org.apache.commons.math.geometry.Vector3D vector3D1 = null;
        org.apache.commons.math.geometry.Vector3D vector3D3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) 10L, vector3D1, 0.46364760900080615d, vector3D3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D3, (-1024.0d));
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.6918710786346925d), 0.7604311401305615d, (-0.5912044389450646d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(0.42487699275774343d, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D11, (double) 100.0f, vector3D19, (double) (short) -1, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D19.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D48, vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation65 = rotation58.applyInverseTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation64.applyTo(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D48.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        double double77 = vector3D76.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D78.subtract(vector3D80);
        double double87 = vector3D80.getY();
        double double88 = vector3D80.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D67, vector3D69, vector3D76, vector3D80);
        double double90 = vector3D67.getY();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D6.subtract(3.141592653589793d, vector3D67);
        double double92 = vector3D67.getNorm();
        double double93 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D67.orthogonal();
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.21114476788661177d) + "'", double90 == (-0.21114476788661177d));
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0d + "'", double92 == 1.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.17054888923331002d + "'", double93 == 0.17054888923331002d);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.negate();
        double double58 = vector3D56.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.scalarMultiply(100.0d);
        double double66 = vector3D65.getAlpha();
        double double67 = vector3D65.getDelta();
        double double68 = org.apache.commons.math.geometry.Vector3D.angle(vector3D56, vector3D65);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ZXY" + "'", str60, "ZXY");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.5707963267948966d + "'", double66 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.5707963267948966d + "'", double68 == 1.5707963267948966d);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.4180214381946339d, 0.5153978362128364d, (-634.6978979926987d));
        double double12 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.9280907887935167d, 2.0186255278998044d, 1.5707963267948961d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA3();
        double double19 = vector3D18.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.normalize();
        double double21 = vector3D18.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.scalarMultiply(100.0d);
        double double29 = vector3D28.getAlpha();
        double double30 = vector3D28.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.add(vector3D28);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D16, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray44 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation43.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D33.add(44.73549720146294d, vector3D45);
        double double47 = org.apache.commons.math.geometry.Vector3D.angle(vector3D7, vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "YXZ" + "'", str5, "YXZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 3.140547103067702d + "'", double12 == 3.140547103067702d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.5707963267948966d + "'", double29 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.0186255278998044d + "'", double32 == 2.0186255278998044d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2.4423126543791276d + "'", double47 == 2.4423126543791276d);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray11 = rotation10.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray11);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray11);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException19);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray39);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray39);
        java.lang.Throwable[] throwableArray42 = notARotationMatrixException41.getSuppressed();
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException41);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray53 = rotation52.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException54 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray53);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException55 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray53);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException58.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException61 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray60);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException63.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.String str69 = cardanEulerSingularityException67.getPattern();
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        notARotationMatrixException61.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        notARotationMatrixException55.addSuppressed((java.lang.Throwable) notARotationMatrixException61);
        java.lang.Object[] objArray73 = notARotationMatrixException55.getArguments();
        notARotationMatrixException41.addSuppressed((java.lang.Throwable) notARotationMatrixException55);
        java.lang.String str75 = notARotationMatrixException41.getPattern();
        java.lang.String str76 = notARotationMatrixException41.getPattern();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cardan angles singularity" + "'", str2, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.3114482587377294d, 0.8605691650229957d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA1();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9766388148078424d, 0.7566633492309982d, (-0.7668590775719992d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-1.0d), (double) 10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation18.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation18.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.add((-1.0d), vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D32, (double) 100.0f, vector3D40, (double) (short) -1, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D40.add((-1.0d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation18.applyTo(vector3D69);
        double double72 = vector3D71.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation8.applyTo(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D71.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (short) 1, (-1.0d), 98.0d);
        double double17 = rotation16.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA1();
        java.lang.String str23 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D19.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) (byte) 10, 1.0d, 0.0d);
        double double36 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((-0.8790056663063665d), 1.0708381896608017d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(1.6173610802715999d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation35.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((-0.2551713383813414d), vector3D19, 0.24893698743024015d, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (short) 1, (-1.0d), 98.0d);
        java.lang.String str50 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(0.4180214381946339d, 0.5153978362128364d, (-634.6978979926987d));
        double double57 = org.apache.commons.math.geometry.Vector3D.angle(vector3D52, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((-0.07646176564152811d), vector3D42, (-0.29505041818708266d), vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.6654428555205447d + "'", double17 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "YXZ" + "'", str21, "YXZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "YXZ" + "'", str23, "YXZ");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.638427581942488d + "'", double36 == 2.638427581942488d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "YXZ" + "'", str50, "YXZ");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 3.140547103067702d + "'", double57 == 3.140547103067702d);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.09618196756046529d), 0.5707963267948967d);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.scalarMultiply(100.0d);
        double double7 = vector3D6.getX();
        double double8 = vector3D6.getX();
        double double9 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D33.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation37.revert();
        double double39 = rotation38.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.7071067811865474d) + "'", double39 == (-0.7071067811865474d));
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        java.lang.String str5 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D22.add((-1.0d), vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation68 = rotation61.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation67.applyTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D51.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D10.normalize();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D10, (-0.24903954012484228d));
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(2.0147983581473317d, vector3D10);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D10, 0.29982993928556756d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.14247398601495026d, 0.8354149633266263d, 0.0d);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D4, 100.0022140464598d);
        double double34 = rotation33.getQ2();
        double[][] doubleArray35 = rotation33.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(doubleArray35, (double) ' ');
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray35);
        java.lang.Throwable[] throwableArray39 = notARotationMatrixException38.getSuppressed();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.2551713383813414d) + "'", double34 == (-0.2551713383813414d));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation13.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        double double25 = vector3D24.getY();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D6.add((-0.6551684173807351d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.negate();
        org.apache.commons.math.geometry.Vector3D vector3D32 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (double) 0.0f, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D26.subtract(0.13322414396144652d, vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA1();
        double double38 = vector3D37.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D43.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D46.subtract((double) 0, vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str55 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str63 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder54.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder54.getA2();
        double double66 = vector3D65.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D46.add((double) 100L, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D67.orthogonal();
        double double69 = org.apache.commons.math.geometry.Vector3D.angle(vector3D37, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D32.add(0.005259088864518715d, vector3D67);
        double double71 = vector3D67.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((-0.25291598322993725d), vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.8846219209894443d + "'", double25 == 0.8846219209894443d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZYZ" + "'", str36, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ZXY" + "'", str55, "ZXY");
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXY" + "'", str63, "ZXY");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.5707963267948966d + "'", double69 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation62.getAxis();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation4.applyTo(rotation62);
        double double65 = rotation64.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation64.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder67.getA2();
        java.lang.String str73 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation64.applyTo(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZYZ" + "'", str73, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.negate();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D10.subtract((double) 0, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D16.add(2.0d, vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder30.getA2();
        java.lang.String str38 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder30.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D47.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D16, (-10.53200198742562d), vector3D45, 0.9765213798493405d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D45.negate();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D58);
        double double60 = vector3D1.getNorm();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXZ" + "'", str38, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray19 = cardanEulerSingularityException13.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray19);
        java.lang.Throwable[] throwableArray21 = notARotationMatrixException20.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D52, vector3D56);
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D47, vector3D52);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation61.revert();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation35.applyTo(rotation62);
        double[][] doubleArray64 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray64);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException67.getArguments();
        java.lang.String str70 = cardanEulerSingularityException67.getPattern();
        java.lang.Object[] objArray71 = cardanEulerSingularityException67.getArguments();
        notARotationMatrixException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.Object[] objArray73 = cardanEulerSingularityException67.getArguments();
        notARotationMatrixException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        java.lang.String str75 = notARotationMatrixException20.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "XZX" + "'", str75, "XZX");
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation4.getAxis();
        double double7 = vector3D6.getNorm();
        double double8 = vector3D6.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-2.6615083595505498d) + "'", double8 == (-2.6615083595505498d));
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.2879033166650653d), 0.6654428555205447d);
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, 3.1284619299391068d);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.083536921369911d, 0.5738046983621651d);
        double double3 = vector3D2.getDelta();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.573804698362165d + "'", double3 == 0.573804698362165d);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.08171766869455624d, 0.5116251420385008d);
        double double3 = vector3D2.getY();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.07117444479191848d + "'", double3 == 0.07117444479191848d);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        double double12 = org.apache.commons.math.geometry.Vector3D.angle(vector3D9, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D5, 0.0027048888022863306d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        double double23 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D15.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D15.scalarMultiply(2.2259647441756316d);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((-2.0d), (-634.6978979926987d), (double) (short) 1, (double) 1L, false);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D42.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D45.subtract((double) 0, vector3D50);
        double double52 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation36.applyInverseTo(vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder56.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusK;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D15, (-0.12637150995481888d), vector3D51, 2.0678198605632665d, vector3D64, 0.15135620392549756d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D10, vector3D15);
        double double70 = vector3D10.getY();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.0952905926857031d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.subtract(vector3D79);
        double double86 = vector3D79.getY();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str90 = rotationOrder89.toString();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder89.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D91.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D79.subtract((-0.2551713383813414d), vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.13599489604735257d), vector3D10, (-16.507805876379134d), vector3D74, 0.04137164368110027d, vector3D79);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D79, 0.3310578300723806d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.080456683454306d + "'", double12 == 1.080456683454306d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.5707963267948966d + "'", double16 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "XZX" + "'", str90, "XZX");
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(0.12637150995481888d, 13.903082980735348d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(0.5496694388267763d, vector3D5);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.add((-1.0d), vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D34, vector3D36, vector3D39, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.scalarMultiply(0.5277475438952628d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(100.0022140464598d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D70.subtract(1.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D83.subtract(vector3D84);
        double double86 = org.apache.commons.math.geometry.Vector3D.angle(vector3D68, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D10.subtract(vector3D84);
        double double88 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D6, vector3D87);
        double double89 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(0.02143738182962339d, vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.5707963267948966d + "'", double86 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 7.572637263022346d + "'", double88 == 7.572637263022346d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.0d) + "'", double89 == (-1.0d));
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D14.scalarMultiply((-0.07264806010080926d));
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation23.getAxis();
        double double25 = rotation23.getQ0();
        double double26 = rotation23.getQ0();
        double double27 = rotation23.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray33 = rotation32.getMatrix();
        double double34 = rotation32.getAngle();
        double double35 = rotation32.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.add((-1.0d), vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D51.subtract((double) (-1L), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation32.applyTo(vector3D64);
        double double66 = vector3D65.getY();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation23.applyTo(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D17.subtract(vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D17.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2.638427581942488d + "'", double34 == 2.638427581942488d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.8415352216177445d + "'", double35 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXY" + "'", str62, "ZXY");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.29505041818708266d) + "'", double66 == (-0.29505041818708266d));
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
    }
}

