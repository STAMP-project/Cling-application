import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation13.applyTo(vector3D15);
        double[][] doubleArray17 = rotation13.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray17);
        java.lang.Object[] objArray19 = notARotationMatrixException18.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.String str34 = cardanEulerSingularityException32.getPattern();
        cardanEulerSingularityException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        java.lang.Object[] objArray36 = cardanEulerSingularityException32.getArguments();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        java.lang.String str42 = cardanEulerSingularityException39.getPattern();
        java.lang.Object[] objArray43 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException39.getSuppressed();
        java.lang.String str45 = cardanEulerSingularityException39.getPattern();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray53 = rotation52.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException54 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray53);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray63 = rotation62.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException64 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray63);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray63);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException67 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray68 = cardanEulerSingularityException67.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException67.getArguments();
        java.lang.String str70 = cardanEulerSingularityException67.getPattern();
        java.lang.Object[] objArray71 = cardanEulerSingularityException67.getArguments();
        java.lang.Throwable[] throwableArray72 = cardanEulerSingularityException67.getSuppressed();
        notARotationMatrixException65.addSuppressed((java.lang.Throwable) cardanEulerSingularityException67);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray76 = cardanEulerSingularityException75.getArguments();
        java.lang.Object[] objArray77 = cardanEulerSingularityException75.getArguments();
        java.lang.String str78 = cardanEulerSingularityException75.getPattern();
        java.lang.Object[] objArray79 = cardanEulerSingularityException75.getArguments();
        java.lang.Throwable[] throwableArray80 = cardanEulerSingularityException75.getSuppressed();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException75.getSuppressed();
        cardanEulerSingularityException67.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        notARotationMatrixException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException75);
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.Throwable[] throwableArray87 = notARotationMatrixException18.getSuppressed();
        java.lang.Object[] objArray88 = notARotationMatrixException18.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZY", objArray88);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Euler angles singularity" + "'", str78, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.4434760001928124d), 1.1638323258325938d, (-3.110368056629538d), 0.3013122628264297d, false);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D13.subtract(1.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.add((-1.0d), vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D38, vector3D41, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D12.subtract((double) 0, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation5.applyTo(vector3D71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(vector3D75, (-3.110368056629538d));
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.negate();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        java.lang.String str8 = rotationOrder6.toString();
        double[] doubleArray9 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 0.7042369761831051d, 0.07932499020447392d, 1.4054902563068818d);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray15);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str2 = cardanEulerSingularityException1.getPattern();
        java.lang.String str3 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str6 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Class<?> wildcardClass8 = cardanEulerSingularityException1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Euler angles singularity" + "'", str2, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        java.lang.String str11 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray13);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException22.getSuppressed();
        java.lang.Object[] objArray29 = cardanEulerSingularityException22.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray29);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", objArray29);
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) notARotationMatrixException31);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray42 = rotation41.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException43 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray42);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException47 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray48 = cardanEulerSingularityException47.getArguments();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException47.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.String str58 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        notARotationMatrixException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) notARotationMatrixException50);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray70 = rotation69.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray70);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray70);
        java.lang.Throwable[] throwableArray73 = notARotationMatrixException72.getSuppressed();
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) notARotationMatrixException72);
        java.lang.Object[] objArray75 = notARotationMatrixException44.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException76 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", objArray75);
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) notARotationMatrixException76);
        java.lang.String str78 = notARotationMatrixException76.getPattern();
        java.lang.Throwable[] throwableArray79 = notARotationMatrixException76.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "XYZ" + "'", str78, "XYZ");
        org.junit.Assert.assertNotNull(throwableArray79);
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        double double4 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        double double8 = vector3D7.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.add(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        double double11 = vector3D10.getNorm();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.26237485370392877d + "'", double4 == 0.26237485370392877d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.5153978362128364d + "'", double8 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9999999999999999d + "'", double11 == 0.9999999999999999d);
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        double double9 = vector3D2.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.subtract(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D68.subtract(vector3D69);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D43, vector3D45, vector3D48, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D11.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D2.add((double) 1.0f, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.negate();
        double double75 = vector3D72.getZ();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation82.getAxis();
        double double84 = rotation82.getQ0();
        double double85 = rotation82.getQ0();
        double double86 = rotation82.getQ2();
        double double87 = rotation82.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((-0.5287508684135855d), (-0.08153856787190739d));
        double double91 = vector3D90.getX();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation82.applyInverseTo(vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D72.add(0.6178548206313739d, vector3D90);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.8605691650229957d + "'", double91 == 0.8605691650229957d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((-0.21114476788661177d), vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D6.scalarMultiply(0.5738046983621651d);
        double double9 = vector3D8.getY();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str21 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D12.add(2.0985845029684933d, vector3D22);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D8.scalarMultiply(44.73431728565376d);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation32.getAxis();
        double double34 = rotation32.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        double[] doubleArray37 = rotation32.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        double double48 = vector3D41.getY();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D50, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation32.applyTo(vector3D58);
        double double60 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D59);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.0d) + "'", double9 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5378050714624897d + "'", double13 == 0.5378050714624897d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "XYZ" + "'", str21, "XYZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-1.688281122707858d), 1.5710935071716126d, 0.33501082047034175d);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation61.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str67 = rotationOrder66.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(vector3D68, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(vector3D65, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        double double78 = vector3D75.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D75.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation71.applyTo(vector3D75);
        double double83 = rotation71.getQ1();
        double double84 = rotation71.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.YZX;
        double[] doubleArray86 = rotation71.getAngles(rotationOrder85);
        java.lang.String str87 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder85, (-0.5387534149303419d), (-23.78472746733843d), 1.8228860923754615d);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZYZ" + "'", str67, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-0.05546668618914311d) + "'", double83 == (-0.05546668618914311d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.28742517866390543d + "'", double84 == 0.28742517866390543d);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-0.5823032504476577, -0.03189044953605607, 0.10632821406868524]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "YZX" + "'", str87, "YZX");
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D23.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D63.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D53.subtract(0.5114629390766603d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D63.add((double) '4', vector3D78);
        double double80 = vector3D63.getDelta();
        double double81 = vector3D63.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str83 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D63.subtract(vector3D87);
        double double89 = vector3D87.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "XZX" + "'", str83, "XZX");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.5707963267948966d + "'", double89 == 1.5707963267948966d);
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException4.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray12 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Throwable[] throwableArray14 = cardanEulerSingularityException8.getSuppressed();
        java.lang.Object[] objArray15 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray15);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", objArray15);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.String str33 = cardanEulerSingularityException31.getPattern();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray45 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray47);
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) notARotationMatrixException48);
        java.lang.String str50 = notARotationMatrixException48.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) notARotationMatrixException48);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException48);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(true);
        java.lang.String str56 = cardanEulerSingularityException55.getPattern();
        java.lang.Object[] objArray57 = cardanEulerSingularityException55.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", objArray57);
        java.lang.Object[] objArray59 = notARotationMatrixException58.getArguments();
        java.lang.Throwable[] throwableArray60 = notARotationMatrixException58.getSuppressed();
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException58);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.Object[] objArray65 = cardanEulerSingularityException63.getArguments();
        java.lang.String str66 = cardanEulerSingularityException63.getPattern();
        java.lang.Object[] objArray67 = cardanEulerSingularityException63.getArguments();
        java.lang.Throwable[] throwableArray68 = cardanEulerSingularityException63.getSuppressed();
        java.lang.String str69 = cardanEulerSingularityException63.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation83 = rotation76.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation82.applyTo(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation82.getAxis();
        double[][] doubleArray87 = rotation82.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException88 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray87);
        cardanEulerSingularityException63.addSuppressed((java.lang.Throwable) notARotationMatrixException88);
        java.lang.Object[] objArray90 = notARotationMatrixException88.getArguments();
        java.lang.String str91 = notARotationMatrixException88.getPattern();
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) notARotationMatrixException88);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str50, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Cardan angles singularity" + "'", str56, "Cardan angles singularity");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Euler angles singularity" + "'", str66, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Euler angles singularity" + "'", str69, "Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Euler angles singularity" + "'", str91, "Euler angles singularity");
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, (-0.7668590775719992d), (-0.4703697977745994d));
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder7.getA2();
        java.lang.String str15 = rotationOrder7.toString();
        java.lang.String str16 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA3();
        java.lang.String str22 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str27 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D17.subtract(vector3D28);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D28);
        double double31 = vector3D28.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D46.subtract(1.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D59.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.add((-1.0d), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D35, (double) 100.0f, vector3D43, (double) (short) -1, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D43.add((-1.0d), vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D75);
        // The following exception was thrown during execution in test generation
        try {
            double double77 = org.apache.commons.math.geometry.Vector3D.angle(vector3D28, vector3D76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-10.53200198742562d), 100.0d, (-0.6502970659532881d));
        java.lang.String str15 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder18.getA2();
        java.lang.String str26 = rotationOrder18.toString();
        java.lang.String str27 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.negate();
        double double30 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D53, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D35.subtract(0.496669722445646d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply(649.9580153489533d);
        double double70 = vector3D69.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D28.add(2.677945044588987d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D73.subtract(vector3D75);
        double double82 = vector3D75.getY();
        double double83 = vector3D75.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D75);
        double double85 = vector3D84.getAlpha();
        double double86 = vector3D84.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D69.subtract(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D17, vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.5707963267948966d) + "'", double70 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.negate();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D25, 2.153573489132929d, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, 788.3701330754276d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation42.getAxis();
        double[][] doubleArray44 = rotation42.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(doubleArray44, 0.24893698743024015d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray44);
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D1.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D1);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        double double26 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D11, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        double double33 = vector3D30.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D30.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D34.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D41.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D37, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D60.subtract(1.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.subtract(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D75.add((-1.0d), vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D49, (double) 100.0f, vector3D57, (double) (short) -1, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D41.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D35.add(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D11.subtract(vector3D86);
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 98.0d + "'", double26 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 97.0d + "'", double88 == 97.0d);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D((-2.4546359825450494d), (double) (-1L), 2.1349162105446426d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D0, vector3D4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = vector3D0.normalize();
        double double2 = vector3D0.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) 10.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder5.getA3();
        java.lang.String str9 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder5.getA3();
        double double15 = vector3D14.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA1();
        java.lang.String str20 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyTo(rotation34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation29.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.orthogonal();
        double double41 = vector3D40.getY();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D22.add((-0.6551684173807351d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.negate();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (double) 0.0f, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D42.subtract(0.13322414396144652d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D0, vector3D48);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-1.5707963267948966d) + "'", double2 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXY" + "'", str6, "ZXY");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.5707963267948966d + "'", double15 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "YXZ" + "'", str18, "YXZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "YXZ" + "'", str20, "YXZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.8846219209894443d + "'", double41 == 0.8846219209894443d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        double double67 = vector3D64.getY();
        double double68 = vector3D64.getAlpha();
        double double69 = vector3D64.getY();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D71.subtract(vector3D73);
        double double80 = vector3D73.getY();
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D73.subtract((-0.2551713383813414d), vector3D86);
        double double89 = vector3D86.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder90 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder90.getA1();
        java.lang.String str92 = rotationOrder90.toString();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder90.getA2();
        double double94 = vector3D93.getY();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D86.add(vector3D93);
        double double96 = vector3D93.getAlpha();
        double double97 = vector3D93.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D98 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D93);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2.356194490192345d + "'", double68 == 2.356194490192345d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "XZX" + "'", str84, "XZX");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "XYZ" + "'", str92, "XYZ");
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.5707963267948966d + "'", double96 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.5707963267948966d + "'", double97 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ0();
        double double8 = rotation5.getQ0();
        double double9 = rotation5.getQ2();
        double double10 = rotation5.getQ0();
        double double11 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        double[][] doubleArray49 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray49);
        java.lang.Object[] objArray51 = notARotationMatrixException50.getArguments();
        java.lang.Object[] objArray52 = notARotationMatrixException50.getArguments();
        java.lang.String str53 = notARotationMatrixException50.getPattern();
        java.lang.Object[] objArray54 = notARotationMatrixException50.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException57.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.String str63 = cardanEulerSingularityException61.getPattern();
        cardanEulerSingularityException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        java.lang.Object[] objArray65 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray66 = cardanEulerSingularityException61.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException67 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray66);
        java.lang.String str68 = notARotationMatrixException67.getPattern();
        notARotationMatrixException50.addSuppressed((java.lang.Throwable) notARotationMatrixException67);
        java.lang.Throwable[] throwableArray70 = notARotationMatrixException67.getSuppressed();
        java.lang.String str71 = notARotationMatrixException67.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str53, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Euler angles singularity" + "'", str63, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXZ" + "'", str68, "ZXZ");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXZ" + "'", str71, "ZXZ");
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D12, (double) 100.0f, vector3D20, (double) (short) -1, vector3D40);
        double double48 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        double double63 = vector3D60.getDelta();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D60, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D72.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D68, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D12, (double) (byte) 10, vector3D55, (double) (short) -1, vector3D60, (double) ' ', vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D4.add(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.scalarMultiply(0.6205445805637456d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(44.73549720146294d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA3();
        double double88 = vector3D87.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D83.subtract(1.9897076525868147d, vector3D87);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.5707963267948966d + "'", double88 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.31890831542544945d), (-3.353277963429478d), 1.2246467991473532E-16d, 0.0016912913051548343d, false);
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation14.applyInverseTo(vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) '#', 100.0d, (-634.6978979926987d));
        double double31 = rotation30.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D47, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D42, vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray67 = rotation61.getAngles(rotationOrder62);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation56.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation68.getAxis();
        double double70 = rotation68.getQ3();
        org.apache.commons.math.geometry.Rotation rotation71 = rotation30.applyTo(rotation68);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation14.applyTo(rotation68);
        double double73 = rotation72.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZYZ" + "'", str21, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.16624968048555705d) + "'", double31 == (-0.16624968048555705d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.4212430843250595d) + "'", double70 == (-0.4212430843250595d));
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-0.7327603968692816d) + "'", double73 == (-0.7327603968692816d));
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException16);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray36);
        java.lang.Throwable[] throwableArray39 = notARotationMatrixException38.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException38);
        java.lang.String str41 = notARotationMatrixException10.getPattern();
        java.lang.Object[] objArray42 = notARotationMatrixException10.getArguments();
        java.lang.String str43 = notARotationMatrixException10.getPattern();
        java.lang.String str44 = notARotationMatrixException10.toString();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str44, "org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        double[] doubleArray30 = rotation25.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        java.lang.String str35 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder27.getA2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZYZ" + "'", str4, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D36, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation47 = rotation20.applyInverseTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation46.revert();
        double[][] doubleArray49 = rotation46.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) doubleArray49);
        java.lang.Object[] objArray51 = notARotationMatrixException50.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[[1.0, 0.0, -0.0], [-0.0, -0.9036922050915068, -0.428182669496151], [0.0, 0.428182669496151, -0.9036922050915068]]");
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7009645491358697d), 2.23606797749979d, 0.5738046983621651d, 0.8659616593396997d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str12 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (-0.5114629390766603d), (-1.122967125689989d), (-0.2551713383813414d));
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation5.applyInverseTo(vector3D17);
        double double20 = vector3D19.getY();
        double double21 = vector3D19.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XYZ" + "'", str12, "XYZ");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 4.128594500831825d + "'", double20 == 4.128594500831825d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.28059885546571417d + "'", double21 == 0.28059885546571417d);
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract((double) 100L, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D23, vector3D58);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D58, (-0.1308559559744774d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.normalize();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZYZ" + "'", str53, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.orthogonal();
        double double5 = vector3D2.getZ();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.09603374004259421d) + "'", double5 == (-0.09603374004259421d));
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder9.getA2();
        java.lang.String str17 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        double[] doubleArray27 = rotation8.getAngles(rotationOrder9);
        double double28 = rotation8.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXZ" + "'", str17, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 1.9999999999999998, 0.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.0d + "'", double28 == 2.0d);
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.1447158152242767d), (-0.6109003586506148d));
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Object[] objArray24 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.String str39 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray42 = notARotationMatrixException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.String str50 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str54 = cardanEulerSingularityException48.getPattern();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.String str59 = cardanEulerSingularityException57.getPattern();
        java.lang.String str60 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.String str63 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str63, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 3.116520608132782d, (-2.0134972630000876d));
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation11.applyTo(vector3D18);
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D22.subtract(1.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D37.add((-1.0d), vector3D39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D37, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(vector3D37, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation50.applyInverseTo(vector3D59);
        double double61 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D19, vector3D59);
        java.lang.Class<?> wildcardClass62 = vector3D59.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.8354149633266263d + "'", double20 == 0.8354149633266263d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyTo(rotation35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyInverseTo(rotation49);
        double double51 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation23.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation23.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation16.applyTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation72.getAxis();
        double double76 = org.apache.commons.math.geometry.Vector3D.angle(vector3D9, vector3D75);
        double double77 = vector3D9.getNorm();
        double double78 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D9);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder80.getA2();
        java.lang.String str86 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder80.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder80.getA1();
        double[] doubleArray90 = rotation79.getAngles(rotationOrder80);
        double[][] doubleArray91 = rotation79.getMatrix();
        double double92 = rotation79.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.2474454753632944d + "'", double76 == 1.2474454753632944d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.9055246760900035d + "'", double78 == 0.9055246760900035d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ZYZ" + "'", str86, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[3.074817027284758, 0.6652716507048929, -3.074817027284758]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.3258077643858055d + "'", double92 == 0.3258077643858055d);
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str8 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException11.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        java.lang.String str17 = cardanEulerSingularityException15.getPattern();
        cardanEulerSingularityException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Object[] objArray19 = cardanEulerSingularityException15.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray19);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException20);
        java.lang.Throwable throwable22 = null;
        // The following exception was thrown during execution in test generation
        try {
            notARotationMatrixException20.addSuppressed(throwable22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.negate();
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D3, (-0.8414709848078965d), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D7.scalarMultiply((-2.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation44.applyTo(rotation56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        double double72 = rotation71.getQ2();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation44.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation79.applyTo(rotation84);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation44.applyTo(rotation85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation85.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder89 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder89.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.scalarMultiply((double) (-1L));
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D87, 0.6654428555205447d, vector3D92);
        double double94 = vector3D93.getX();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D36.add((-16.507805876379134d), vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D93.scalarMultiply(0.9166535214993772d);
        double double98 = vector3D93.getX();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZX" + "'", str6, "XZX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.0d + "'", double33 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-54.50256143565405d) + "'", double94 == (-54.50256143565405d));
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-54.50256143565405d) + "'", double98 == (-54.50256143565405d));
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException50.getSuppressed();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Object[] objArray68 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException58.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException72 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray73 = cardanEulerSingularityException72.getSuppressed();
        cardanEulerSingularityException58.addSuppressed((java.lang.Throwable) cardanEulerSingularityException72);
        java.lang.Object[] objArray75 = cardanEulerSingularityException72.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9113108625632632d), 0.9285846546495912d, (-524.7609754926534d), 0.005022802342728373d, true);
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double1 = vector3D0.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        double double8 = vector3D5.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D5.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D5.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D0.subtract(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D0.scalarMultiply(2.2259647441756316d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusJ;
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        double double23 = vector3D20.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D20.scalarMultiply((double) 0.0f);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D15.subtract(vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder30.getA3();
        java.lang.String str34 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder30.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder30.getA2();
        double double41 = vector3D40.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D20.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.3494625806709468d, 0.5153978362128364d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 1.5707963267948966d, (-1.0d), (double) ' ');
        java.lang.String str53 = rotationOrder47.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder47.getA3();
        double double55 = org.apache.commons.math.geometry.Vector3D.angle(vector3D46, vector3D54);
        double double56 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D43, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D0.add(vector3D54);
        java.lang.Class<?> wildcardClass58 = vector3D0.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.5707963267948966d + "'", double1 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.5707963267948966d + "'", double16 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZXY" + "'", str31, "ZXY");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "XYZ" + "'", str53, "XYZ");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0553984905820601d + "'", double55 == 1.0553984905820601d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.6134380694273582d, (-3.456634865158842d), 0.3967963165953361d, 99.14468149546441d, true);
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA2();
        java.lang.String str12 = rotationOrder0.toString();
        java.lang.String str13 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5344102370113529d, (-0.22112372634864869d), 3.1364351454618995d);
        double double20 = rotation19.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZYZ" + "'", str13, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.6156482688191875d + "'", double20 == 2.6156482688191875d);
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation4.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        java.lang.String str15 = rotationOrder13.toString();
        double[] doubleArray16 = rotation4.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 0.5344102370113529d, (double) 100, (-0.4073364259823062d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation20.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XYZ" + "'", str15, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-2.005116664603875, -0.14875510171395484, 0.9711919943660552]");
        org.junit.Assert.assertNotNull(vector3D21);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.07932499020447392d, 3.0494479105138855E-17d, 0.5738046983621651d, 96.01789757297325d, true);
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        double double42 = vector3D11.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D11.add((double) 1.0f, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D11.negate();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D11.scalarMultiply(0.4035296764024832d);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.negate();
        double double75 = vector3D73.getAlpha();
        double double76 = org.apache.commons.math.geometry.Vector3D.angle(vector3D49, vector3D73);
        double double77 = vector3D49.getZ();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 3.141592653589793d + "'", double75 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 3.141592653589793d + "'", double76 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.2064477193728065d, 0.4458189760355009d, (-74.54563732201893d), 35.0d, false);
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str33 = rotationOrder32.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.scalarMultiply(100.0d);
        double double39 = vector3D38.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation52.applyTo(vector3D54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D54, 0.5277475438952628d, vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D31, vector3D38, vector3D58, vector3D61);
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D58, 3.2087642143727657d);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((-1.201043898292386d), vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D66.normalize();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ZXY" + "'", str33, "ZXY");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.5707963267948966d + "'", double39 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), 3.2087642143727657d, 1.278124800288793d, (-0.45973278686101987d), true);
        double double6 = rotation5.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D26.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D22, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray42 = rotation36.getAngles(rotationOrder37);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation31.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.add((-1.0d), vector3D61);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D67, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation70 = rotation36.applyTo(rotation69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray72 = rotation36.getAngles(rotationOrder71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 0.8286204267864343d, (-0.13182419629852823d), 1.2623191674671845d);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 13.903082980735348d, 0.13322414396144652d, (-57.493324223256394d));
        org.apache.commons.math.geometry.Rotation rotation82 = rotation5.applyInverseTo(rotation81);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.920083961292588d + "'", double6 == 0.920083961292588d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotation82);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D42, vector3D45, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D16.subtract((double) 0, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation9.applyTo(vector3D75);
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D76);
        double[][] doubleArray78 = rotation77.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(doubleArray78, 0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(doubleArray78, 143.7738589649261d);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(1.257863040663775d, (-0.7853981633974484d), 1.590031694590281d, 0.7183075869834017d, false);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation88.getAxis();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation82.applyInverseTo(rotation88);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotation90);
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder10.getA1();
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation9.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(98.0d, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        double double27 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D26);
        double double28 = vector3D3.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.4054902563068818d + "'", double27 == 1.4054902563068818d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-0.7444502588142154d) + "'", double28 == (-0.7444502588142154d));
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str17 = rotationOrder16.toString();
        java.lang.String str18 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA1();
        double[] doubleArray20 = rotation5.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder16.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XYX" + "'", str17, "XYX");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.2221514782627723d, 0.0d);
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-10.53200198742562d), 100.0d, (-0.6502970659532881d));
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.981403820949318d, 2.067819860563266d, 0.06847869573979007d);
        double double19 = rotation18.getQ1();
        double double20 = rotation18.getQ1();
        double double21 = rotation18.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.4560672077994221d) + "'", double19 == (-0.4560672077994221d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-0.4560672077994221d) + "'", double20 == (-0.4560672077994221d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.4560672077994221d) + "'", double21 == (-0.4560672077994221d));
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, 0.7562444081294376d, 0.15135620392549756d, (double) (-1.0f));
        double double70 = rotation69.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.04828171524713434d) + "'", double70 == (-0.04828171524713434d));
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-1024.0d), (-0.5740247584530956d), 0.012535694387858676d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.subtract((double) 0, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D20.add(2.0d, vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder34.getA2();
        java.lang.String str42 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D51.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D20, (-10.53200198742562d), vector3D49, 0.9765213798493405d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D49.normalize();
        double double64 = vector3D49.getX();
        double double65 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(0.7423983938032201d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D3.add((-0.2744175283350592d), vector3D66);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXZ" + "'", str42, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation6.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation6.applyTo(vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str27 = rotationOrder26.toString();
        java.lang.String str28 = rotationOrder26.toString();
        double[] doubleArray29 = rotation6.getAngles(rotationOrder26);
        java.lang.String str30 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(1.0189832222323367d, vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.7683919425686428d) + "'", double14 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "XYX" + "'", str28, "XYX");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XYX" + "'", str30, "XYX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        double double7 = rotation6.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder8.getA2();
        java.lang.String str16 = rotationOrder8.toString();
        java.lang.String str17 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder8.getA1();
        double[] doubleArray20 = rotation6.getAngles(rotationOrder8);
        double double21 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyTo(rotation44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation59 = rotation52.applyInverseTo(rotation58);
        double double60 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation32.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation67.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation32.applyTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation26.applyInverseTo(rotation73);
        double double76 = rotation26.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        double[] doubleArray80 = rotation26.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder77.getA3();
        double[] doubleArray84 = rotation6.getAngles(rotationOrder77);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder77.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.496669722445646d + "'", double7 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.9867228626928285, -0.5707963267948966, 1.5707963267948963]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.14599455657272695d) + "'", double21 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.45973278686101987d) + "'", double76 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "XZX" + "'", str78, "XZX");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-2.227294405064556, 2.0413190668629926, -1.906858042085361]");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.911089704458946, 1.1032102335428604, 0.6658592074878087]");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 0.24595425961233014d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.5744733109263925d, 0.3021426917485543d);
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D35.subtract((double) 0, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str44 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str52 = rotationOrder43.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder43.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder43.getA2();
        double double55 = vector3D54.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D35.add((double) 100L, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation12.applyTo(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D60.subtract(1.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.subtract(vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D77.subtract(0.0d, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D75.add((-1.0d), vector3D77);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D75, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D75);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D75, (-1.0d));
        double double89 = rotation88.getQ2();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation88.revert();
        double double91 = rotation88.getQ3();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation58.applyInverseTo(rotation88);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZXY" + "'", str44, "ZXY");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(rotation92);
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str7 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray15);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException26 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray25);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException29.getArguments();
        java.lang.String str32 = cardanEulerSingularityException29.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        notARotationMatrixException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Object[] objArray39 = cardanEulerSingularityException37.getArguments();
        java.lang.String str40 = cardanEulerSingularityException37.getPattern();
        java.lang.Object[] objArray41 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException37.getSuppressed();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException37.getSuppressed();
        cardanEulerSingularityException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Object[] objArray47 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException50.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.String str56 = cardanEulerSingularityException54.getPattern();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Throwable[] throwableArray58 = cardanEulerSingularityException54.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException60 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray61 = cardanEulerSingularityException60.getArguments();
        java.lang.Object[] objArray62 = cardanEulerSingularityException60.getArguments();
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException60);
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray72 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException73 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray72);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray72);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException76 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray77 = cardanEulerSingularityException76.getArguments();
        java.lang.Object[] objArray78 = cardanEulerSingularityException76.getArguments();
        java.lang.String str79 = cardanEulerSingularityException76.getPattern();
        java.lang.Object[] objArray80 = cardanEulerSingularityException76.getArguments();
        java.lang.Throwable[] throwableArray81 = cardanEulerSingularityException76.getSuppressed();
        notARotationMatrixException74.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        java.lang.String str83 = cardanEulerSingularityException76.getPattern();
        java.lang.Throwable[] throwableArray84 = cardanEulerSingularityException76.getSuppressed();
        cardanEulerSingularityException54.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException76);
        java.lang.Throwable[] throwableArray87 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str88 = cardanEulerSingularityException1.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Euler angles singularity" + "'", str40, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Euler angles singularity" + "'", str79, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Euler angles singularity" + "'", str83, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str88, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D9.subtract(1.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D22.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.add((-1.0d), vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D34, vector3D37, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D0.subtract(vector3D32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str63 = rotationOrder62.toString();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA3();
        double double65 = vector3D64.getDelta();
        double double66 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D0, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.scalarMultiply(0.34167868741064544d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXY" + "'", str63, "ZXY");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation72.revert();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation74.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) ' ', (double) '4', (double) 'a');
        double[] doubleArray85 = rotation74.getAngles(rotationOrder76);
        double[][] doubleArray86 = rotation74.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str88 = rotationOrder87.toString();
        java.lang.String str89 = rotationOrder87.toString();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder87.getA2();
        double[] doubleArray91 = rotation74.getAngles(rotationOrder87);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (-0.006392032391590654d), 0.8111383753205208d, 1.9999333306670476E-4d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation95.getAxis();
        double[][] doubleArray97 = rotation95.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ZXY" + "'", str77, "ZXY");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-0.0, 0.0, 0.010518226214961658]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ZXY" + "'", str88, "ZXY");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ZXY" + "'", str89, "ZXY");
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-0.0, 0.0, 0.010518226214961658]");
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        java.lang.Object[] objArray31 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException27.getSuppressed();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.String str34 = cardanEulerSingularityException27.getPattern();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException27.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Throwable[] throwableArray40 = cardanEulerSingularityException38.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException42 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray43 = cardanEulerSingularityException42.getArguments();
        java.lang.String str44 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Object[] objArray46 = cardanEulerSingularityException42.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.subtract(1.0d, vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D81.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D77, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D77);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation86.revert();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation60.applyTo(rotation87);
        double[][] doubleArray89 = rotation60.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException90 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray89);
        java.lang.Object[] objArray91 = notARotationMatrixException90.getArguments();
        cardanEulerSingularityException42.addSuppressed((java.lang.Throwable) notARotationMatrixException90);
        java.lang.String str93 = cardanEulerSingularityException42.getPattern();
        cardanEulerSingularityException27.addSuppressed((java.lang.Throwable) cardanEulerSingularityException42);
        java.lang.Object[] objArray95 = cardanEulerSingularityException42.getArguments();
        java.lang.String str96 = cardanEulerSingularityException42.getPattern();
        java.lang.String str97 = cardanEulerSingularityException42.getPattern();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Euler angles singularity" + "'", str44, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Euler angles singularity" + "'", str93, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Euler angles singularity" + "'", str96, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Euler angles singularity" + "'", str97, "Euler angles singularity");
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D1, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.subtract(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D13, (double) 100.0f, vector3D21, (double) (short) -1, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D5.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D5.add(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder76.getA3();
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D5, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D81, (-0.009999666686665238d));
        double[][] doubleArray85 = rotation84.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(doubleArray85, 1.4721336309126734d);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation87.getAxis();
        double double89 = rotation87.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder9.getA3();
        java.lang.String str13 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder9.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder9.getA2();
        double double20 = vector3D19.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D8.subtract(vector3D19);
        double double23 = vector3D8.getZ();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D8, 0.28742517866390543d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D29, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D29.subtract(vector3D47);
        double double57 = vector3D56.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-0.7936280035504817d), 30.452894880775844d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D56, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation25.applyTo(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        double double70 = vector3D67.getDelta();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D67, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D61.subtract(13.903082980735348d, vector3D67);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.0d) + "'", double23 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.4129886590656342d) + "'", double57 == (-1.4129886590656342d));
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation6.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation6.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray17 = rotation15.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D(0.5496694388267763d, 0.12637150995481888d, 0.5496694388267762d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray32 = rotation31.getMatrix();
        double double33 = rotation31.getAngle();
        double double34 = rotation31.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.add((-1.0d), vector3D52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract((double) (-1L), vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation31.applyTo(vector3D63);
        double double65 = vector3D64.getY();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(2.6106277387164094d, vector3D20, (-0.8775964419745874d), vector3D25, 0.9451557939522999d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D25.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.638427581942488d + "'", double33 == 2.638427581942488d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.8415352216177445d + "'", double34 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.29505041818708266d) + "'", double65 == (-0.29505041818708266d));
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA2();
        double[] doubleArray32 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder30.getA2();
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation59 = rotation52.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation46.applyTo(rotation58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyInverseTo(rotation72);
        double double74 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation46.applyInverseTo(rotation73);
        double double76 = rotation73.getAngle();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation40.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation84 = rotation83.revert();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation77.applyTo(rotation84);
        double double86 = rotation85.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865475d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply((-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotation85.applyInverseTo(vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D91.negate();
        double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D33, vector3D93);
        double double95 = vector3D33.getDelta();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.8111383753205208d + "'", double86 == 0.8111383753205208d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.5707963267948966d + "'", double94 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1.5707963267948966d + "'", double95 == 1.5707963267948966d);
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Object[] objArray11 = cardanEulerSingularityException5.getArguments();
        java.lang.String str12 = cardanEulerSingularityException5.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException15.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.String str21 = cardanEulerSingularityException19.getPattern();
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        java.lang.Object[] objArray23 = cardanEulerSingularityException19.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D54, vector3D58);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D49, vector3D54);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation37.applyTo(rotation64);
        double[][] doubleArray66 = rotation37.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException67 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray66);
        java.lang.Object[] objArray68 = notARotationMatrixException67.getArguments();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) notARotationMatrixException67);
        java.lang.Object[] objArray70 = notARotationMatrixException67.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException71 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray70);
        java.lang.Object[] objArray72 = notARotationMatrixException71.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation86 = rotation79.applyInverseTo(rotation85);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation85.revert();
        double[][] doubleArray88 = rotation85.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray88);
        notARotationMatrixException71.addSuppressed((java.lang.Throwable) notARotationMatrixException89);
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) notARotationMatrixException89);
        java.lang.String str92 = cardanEulerSingularityException5.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Euler angles singularity" + "'", str21, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str92, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        double double15 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder17.getA1();
        double[] doubleArray24 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation30.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation30.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        double double56 = org.apache.commons.math.geometry.Vector3D.angle(vector3D39, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation16.applyTo(vector3D39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation70.applyTo(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation70.getAxis();
        double[][] doubleArray75 = rotation70.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException76 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray75);
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(doubleArray75, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str80 = rotationOrder79.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D81, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation84 = rotation78.applyInverseTo(rotation83);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation16.applyInverseTo(rotation83);
        double double86 = rotation85.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = null;
        double[] doubleArray88 = rotation85.getAngles(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.9999999999999998, -0.0, -0.9999999999999998]");
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ZYZ" + "'", str80, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.7817163787754635d) + "'", double86 == (-0.7817163787754635d));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.9383970928029475, 1.7975803847849183, -1.2968541557692397]");
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract((double) (-1L), vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.subtract(1.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.subtract(vector3D79);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D53, vector3D55, vector3D58, vector3D80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str83 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA3();
        double double85 = vector3D84.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D53, vector3D87, vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D16.scalarMultiply(3.2087642143727657d);
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D16.scalarMultiply(0.8775825618903728d);
        double double97 = vector3D96.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D98 = new org.apache.commons.math.geometry.Vector3D(0.6665981901433538d, vector3D96);
        double double99 = vector3D96.getZ();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ZXY" + "'", str83, "ZXY");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.3334901919713656d), 5096.0d, 0.3021426917485543d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA3();
        double[] doubleArray11 = rotation6.getAngles(rotationOrder7);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-0.09858173294375969, -0.04714912102955699, 0.3178594029164832]");
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray49 = rotation43.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation38.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation13.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder76.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D58, 1.4951200884960367d, vector3D64, 3.141592653589793d, vector3D74, 0.15135620392549756d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D((-0.22896318350517658d), 0.2609765966779753d);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D58, vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZYZ" + "'", str62, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "XZX" + "'", str77, "XZX");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        java.lang.String str8 = cardanEulerSingularityException2.getPattern();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray16 = rotation15.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray16);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Object[] objArray32 = cardanEulerSingularityException30.getArguments();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray34 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException30.getSuppressed();
        notARotationMatrixException28.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException38 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray39 = cardanEulerSingularityException38.getArguments();
        java.lang.Object[] objArray40 = cardanEulerSingularityException38.getArguments();
        java.lang.String str41 = cardanEulerSingularityException38.getPattern();
        java.lang.Object[] objArray42 = cardanEulerSingularityException38.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException38.getSuppressed();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException38.getSuppressed();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException38);
        java.lang.Object[] objArray48 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray49 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException51.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException55 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray56 = cardanEulerSingularityException55.getArguments();
        java.lang.String str57 = cardanEulerSingularityException55.getPattern();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException55);
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException55.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException61 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray62 = cardanEulerSingularityException61.getArguments();
        java.lang.Object[] objArray63 = cardanEulerSingularityException61.getArguments();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException61);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray73 = rotation72.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException75 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray73);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException77 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray78 = cardanEulerSingularityException77.getArguments();
        java.lang.Object[] objArray79 = cardanEulerSingularityException77.getArguments();
        java.lang.String str80 = cardanEulerSingularityException77.getPattern();
        java.lang.Object[] objArray81 = cardanEulerSingularityException77.getArguments();
        java.lang.Throwable[] throwableArray82 = cardanEulerSingularityException77.getSuppressed();
        notARotationMatrixException75.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.String str84 = cardanEulerSingularityException77.getPattern();
        java.lang.Throwable[] throwableArray85 = cardanEulerSingularityException77.getSuppressed();
        cardanEulerSingularityException55.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException77);
        java.lang.Throwable[] throwableArray88 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) throwableArray88);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Euler angles singularity" + "'", str41, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Euler angles singularity" + "'", str80, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Euler angles singularity" + "'", str84, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        double double4 = vector3D3.getZ();
        java.lang.Class<?> wildcardClass5 = vector3D3.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (short) 1, (-1.0d), 98.0d);
        double double9 = rotation8.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation8.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D10);
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D11, (double) (short) -1);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(0.10830291305827339d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.normalize();
        double double17 = vector3D15.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        double double21 = org.apache.commons.math.geometry.Vector3D.angle(vector3D11, vector3D15);
        double double22 = vector3D15.getY();
        double double23 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D(1.0d, 3.1382470946270726d, (-0.9902124943143233d));
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((-0.7714519549705618d), vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.5277475438952628d, 1.2474454753632944d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation41.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str45 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder44.getA1();
        java.lang.String str49 = rotationOrder44.toString();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder44.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        double double57 = vector3D54.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D54.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.add(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D59.scalarMultiply(27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D59.negate();
        double double67 = org.apache.commons.math.geometry.Vector3D.angle(vector3D50, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.scalarMultiply(0.26237485370392877d);
        double double76 = vector3D71.getY();
        double double77 = vector3D71.getY();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D50.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((-52.0d), vector3D27, 3.140547103067702d, vector3D34, (-2.588499176537791d), vector3D42, (-0.9902124943143233d), vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.6654428555205447d + "'", double9 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.257863040663775d + "'", double21 == 1.257863040663775d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.5707963267948966d) + "'", double23 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "XZX" + "'", str45, "XZX");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "XZX" + "'", str49, "XZX");
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 3.141592653589793d + "'", double67 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D29.normalize();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D16, vector3D30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation32.getAxis();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(vector3D33, 1.8600586893795792d);
        double double36 = vector3D33.getAlpha();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 3.141592653589793d + "'", double36 == 3.141592653589793d);
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9999633527322347d, 0.0012965156303606186d, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = rotation20.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D32.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D35.subtract((double) 0, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D43.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D41.add(2.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation27.applyInverseTo(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D41.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str57 = rotationOrder56.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder56.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D59, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double68 = vector3D67.getY();
        double double69 = org.apache.commons.math.geometry.Vector3D.angle(vector3D59, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation14.applyInverseTo(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZXY" + "'", str57, "ZXY");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.42487699275774343d + "'", double68 == 0.42487699275774343d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2.1460183660255168d + "'", double69 == 2.1460183660255168d);
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.14599455657272695d), 3.1330314046616845d, 0.005022802342728373d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D8);
        double double15 = vector3D8.getY();
        double double16 = vector3D8.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D8.normalize();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(vector3D18, (double) 0L);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((-0.095984644627102d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D3.add(vector3D18);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.0952905926857031d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        double double13 = vector3D6.getY();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D38.negate();
        double double40 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        double double47 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D38, vector3D46);
        double double48 = vector3D46.getDelta();
        double double49 = vector3D46.getY();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA2();
        double double55 = vector3D54.getY();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D14.subtract((-0.6883311189581703d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D2.add(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D2, 1.2489510605799288d);
        double double60 = vector3D2.getZ();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-2.0d) + "'", double40 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-2.0d) + "'", double47 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.46046474586818387d) + "'", double60 == (-0.46046474586818387d));
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Object[] objArray11 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException12 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray11);
        java.lang.Throwable[] throwableArray13 = notARotationMatrixException12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = notARotationMatrixException12.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException17 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray18 = cardanEulerSingularityException17.getArguments();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException17.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray19);
        java.lang.Object[] objArray21 = notARotationMatrixException20.getArguments();
        notARotationMatrixException12.addSuppressed((java.lang.Throwable) notARotationMatrixException20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation36.applyTo(vector3D38);
        double[][] doubleArray40 = rotation36.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException41 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray40);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException42 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray40);
        notARotationMatrixException20.addSuppressed((java.lang.Throwable) notARotationMatrixException42);
        java.lang.Object[] objArray44 = notARotationMatrixException42.getArguments();
        java.lang.Throwable[] throwableArray45 = notARotationMatrixException42.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation7 = rotation6.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D10 = null;
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder12.getA1();
        double double20 = vector3D19.getY();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        double double28 = vector3D25.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.normalize();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(11.210556722005117d, vector3D8, (-0.04145438869418405d), vector3D10, (-0.2551713383813414d), vector3D19, 0.450732805290736d, vector3D25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str5 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.9652558922076977d), 0.0d, 0.0d);
        java.lang.String str10 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZYZ" + "'", str5, "ZYZ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D11);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) doubleArray6);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.3691205271584663d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D30.subtract((double) 0, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D36.add(2.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation22.applyInverseTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D36.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation9.applyTo(vector3D36);
        double double52 = rotation9.getQ3();
        double double53 = rotation9.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-0.3058692615856504d) + "'", double52 == (-0.3058692615856504d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.7620179160984355d + "'", double53 == 0.7620179160984355d);
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.String str28 = notARotationMatrixException5.getPattern();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Object[] objArray52 = cardanEulerSingularityException50.getArguments();
        java.lang.String str53 = cardanEulerSingularityException50.getPattern();
        java.lang.Object[] objArray54 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException50.getSuppressed();
        notARotationMatrixException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException58 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray59 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray60 = cardanEulerSingularityException58.getArguments();
        java.lang.String str61 = cardanEulerSingularityException58.getPattern();
        java.lang.Object[] objArray62 = cardanEulerSingularityException58.getArguments();
        java.lang.Throwable[] throwableArray63 = cardanEulerSingularityException58.getSuppressed();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException58.getSuppressed();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException58);
        java.lang.Object[] objArray68 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray69 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray70 = cardanEulerSingularityException58.getArguments();
        java.lang.Object[] objArray71 = cardanEulerSingularityException58.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str28, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Euler angles singularity" + "'", str61, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray25 = rotation24.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        double double59 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation31.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder67, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA1();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation79 = rotation72.applyInverseTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation80 = rotation66.applyTo(rotation78);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation31.applyInverseTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation24.applyTo(rotation80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation80.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (-1.0f), vector3D17, 2.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D12.add(0.6205445805637456d, vector3D84);
        double double86 = vector3D12.getDelta();
        java.lang.Class<?> wildcardClass87 = vector3D12.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1.5707963267948966d) + "'", double86 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        double[] doubleArray10 = rotation6.getAngles(rotationOrder7);
        java.lang.String str11 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 0.13599489604735257d, (-0.9505369429339884d), (-0.7182585569069458d));
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder7.getA3();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[NaN, NaN, NaN]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply(100.0d);
        double double59 = vector3D58.getX();
        double double60 = vector3D58.getX();
        double double61 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.subtract(1.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.add((-1.0d), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.negate();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D85.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D58, vector3D87);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation51.applyInverseTo(rotation89);
        double double91 = rotation51.getQ0();
        java.lang.Class<?> wildcardClass92 = rotation51.getClass();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.9036922050915068d), 2.153573489132929d, 13.903082980735348d);
        double double16 = rotation15.getQ2();
        double double17 = rotation15.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.03736466592466642d + "'", double16 == 0.03736466592466642d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.328362928996493d) + "'", double17 == (-0.328362928996493d));
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        java.lang.Class<?> wildcardClass14 = rotationOrder0.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D3.subtract(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((-1.0d), vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D5, (double) 100.0f, vector3D13, (double) (short) -1, vector3D33);
        double double41 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        double double56 = vector3D53.getDelta();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D53, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D65.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D61, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D5, (double) (byte) 10, vector3D48, (double) (short) -1, vector3D53, (double) ' ', vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D53.subtract(3.2087642143727657d, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract((double) 100L, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D77.subtract(2.23606797749979d, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D89.normalize();
        double double91 = vector3D89.getZ();
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D89, 0.9775196787031525d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZYZ" + "'", str81, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 118.43805429998542d + "'", double91 == 118.43805429998542d);
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray17 = notARotationMatrixException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.Object[] objArray27 = cardanEulerSingularityException23.getArguments();
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        java.lang.String str29 = notARotationMatrixException6.getPattern();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray37);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray47 = rotation46.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException51 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray52 = cardanEulerSingularityException51.getArguments();
        java.lang.Object[] objArray53 = cardanEulerSingularityException51.getArguments();
        java.lang.String str54 = cardanEulerSingularityException51.getPattern();
        java.lang.Object[] objArray55 = cardanEulerSingularityException51.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException51.getSuppressed();
        notARotationMatrixException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException51);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Object[] objArray61 = cardanEulerSingularityException59.getArguments();
        java.lang.String str62 = cardanEulerSingularityException59.getPattern();
        java.lang.Object[] objArray63 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException59.getSuppressed();
        java.lang.Throwable[] throwableArray65 = cardanEulerSingularityException59.getSuppressed();
        cardanEulerSingularityException51.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        notARotationMatrixException38.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Object[] objArray69 = cardanEulerSingularityException59.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", objArray69);
        java.lang.String str71 = notARotationMatrixException70.getPattern();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str29, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Euler angles singularity" + "'", str62, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XYX" + "'", str71, "XYX");
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), 2.356194490192345d, (-634.6978979926987d), 0.42487699275774343d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation5.applyInverseTo(rotation25);
        double double27 = rotation25.getQ0();
        double double28 = rotation25.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D47.subtract((double) 0, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D55.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D53.add(2.0d, vector3D64);
        double double66 = vector3D65.getX();
        double double67 = vector3D65.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-8.868313204374247E-18d), vector3D65, 0.9649660284921133d, vector3D72, 0.04909141830635927d, vector3D77);
        double double79 = org.apache.commons.math.geometry.Vector3D.angle(vector3D38, vector3D65);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation92 = rotation85.applyInverseTo(rotation91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation91.applyTo(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D94, (-0.6181409508714061d));
        org.apache.commons.math.geometry.Vector3D vector3D97 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D38, vector3D94);
        double double98 = org.apache.commons.math.geometry.Vector3D.angle(vector3D34, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D99 = rotation25.applyInverseTo(vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-10.53200198742562d) + "'", double27 == (-10.53200198742562d));
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.1071487177940904d + "'", double79 == 1.1071487177940904d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.1002735867268008d + "'", double98 == 1.1002735867268008d);
        org.junit.Assert.assertNotNull(vector3D99);
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        double double37 = rotation36.getQ3();
        double double38 = rotation36.getQ0();
        double double39 = rotation36.getQ1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (double) 100, 0.0d, (double) (short) -1, true);
        double double46 = rotation45.getQ0();
        double double47 = rotation45.getQ0();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation36.applyTo(rotation45);
        double double49 = rotation48.getQ1();
        double double50 = rotation48.getQ2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.4212430843250595d) + "'", double37 == (-0.4212430843250595d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.7710802937133043d) + "'", double38 == (-0.7710802937133043d));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.22891725792137424d) + "'", double39 == (-0.22891725792137424d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-0.7752318353896578d) + "'", double49 == (-0.7752318353896578d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.4235110818795417d + "'", double50 == 0.4235110818795417d);
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        java.lang.String str8 = cardanEulerSingularityException2.getPattern();
        java.lang.String str9 = cardanEulerSingularityException2.getPattern();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Object[] objArray33 = cardanEulerSingularityException31.getArguments();
        java.lang.String str34 = cardanEulerSingularityException31.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException31.getSuppressed();
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) cardanEulerSingularityException31);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Object[] objArray41 = cardanEulerSingularityException39.getArguments();
        java.lang.String str42 = cardanEulerSingularityException39.getPattern();
        java.lang.Object[] objArray43 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray44 = cardanEulerSingularityException39.getSuppressed();
        java.lang.Throwable[] throwableArray45 = cardanEulerSingularityException39.getSuppressed();
        cardanEulerSingularityException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        notARotationMatrixException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException39);
        java.lang.Object[] objArray49 = cardanEulerSingularityException39.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray49);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException53 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray54 = cardanEulerSingularityException53.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException55 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", objArray54);
        java.lang.Throwable[] throwableArray56 = notARotationMatrixException55.getSuppressed();
        java.lang.Object[] objArray57 = notARotationMatrixException55.getArguments();
        java.lang.String str58 = notARotationMatrixException55.getPattern();
        notARotationMatrixException50.addSuppressed((java.lang.Throwable) notARotationMatrixException55);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Euler angles singularity" + "'", str9, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity" + "'", str58, "org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity");
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        double double64 = rotation61.getQ2();
        org.apache.commons.math.geometry.Rotation rotation65 = rotation61.revert();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract((double) 100L, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation65.applyTo(vector3D73);
        double double76 = vector3D75.getDelta();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 3.2087642143727657d + "'", double64 == 3.2087642143727657d);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 25.06596560241331d + "'", double66 == 25.06596560241331d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZYZ" + "'", str68, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.1332400838831356d) + "'", double76 == (-1.1332400838831356d));
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        double double21 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation4.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation11.revert();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation37.getAxis();
        double double39 = rotation37.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.5114629390766603d) + "'", double39 == (-0.5114629390766603d));
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (double) 0.0f, 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D21.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D24.subtract((double) 0, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D32.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D30.add(2.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation16.applyInverseTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D30.normalize();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D44, 2.2573179145927016d);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D44);
        double double48 = vector3D3.getZ();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.7071067811865476d + "'", double48 == 0.7071067811865476d);
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation12.revert();
        double[][] doubleArray15 = rotation14.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(doubleArray15, 0.24893698743024015d);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.3345571444794553d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(doubleArray18, 0.5559678498602987d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(doubleArray18, (-0.1447158152242767d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertNotNull(doubleArray18);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation54 = rotation47.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation41.applyTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation6.applyInverseTo(rotation55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str58 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder57.getA2();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder68.getA3();
        double[] doubleArray75 = rotation67.getAngles(rotationOrder68);
        org.apache.commons.math.geometry.Rotation rotation76 = rotation55.applyTo(rotation67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder77.getA2();
        double double84 = vector3D83.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation76.applyTo(vector3D83);
        double double86 = vector3D85.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((-0.4212430843250595d), vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D85.normalize();
        java.lang.Class<?> wildcardClass90 = vector3D89.getClass();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZYZ" + "'", str58, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ZYZ" + "'", str78, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5707963267948966d + "'", double84 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2010.8322649434506d + "'", double86 == 2010.8322649434506d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8342233605065102d, (-10.53200198742562d), (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYZ" + "'", str8, "XYZ");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "XYZ" + "'", str9, "XYZ");
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation9 = rotation5.applyTo(rotation8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.07117444479191848d, 101.0d, (-2.4483478721605554d));
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.9977858108936668d, 0.07972572548978678d);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        double double33 = rotation32.getQ0();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation32.revert();
        double double35 = rotation32.getQ0();
        double double36 = rotation32.getAngle();
        double double37 = rotation32.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder38.getA1();
        double[] doubleArray44 = rotation32.getAngles(rotationOrder38);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.48235242686889757d) + "'", double33 == (-0.48235242686889757d));
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.48235242686889757d) + "'", double35 == (-0.48235242686889757d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1349162105446426d + "'", double36 == 2.1349162105446426d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.6345851256474963d + "'", double37 == 0.6345851256474963d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.8080078080679347, 2.1336574599214417, -0.7124382255794856]");
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, 100.0022140464598d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.scalarMultiply((-16.507805876379134d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation10.applyInverseTo(rotation16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D22.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D25.subtract((double) 0, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D33.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D31.add(2.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation17.applyInverseTo(vector3D31);
        double double45 = vector3D31.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D31.normalize();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str10 = rotationOrder0.toString();
        java.lang.String str11 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        java.lang.String str13 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D(3.1330314046616845d, 9990.00005005005d, (-1.0027048888022863d));
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.12637150995481888d, 13.903082980735348d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(0.5738046983621651d, 16.62763166455332d, 0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D(3.2087642143727657d, vector3D10, 0.6838267645076843d, vector3D15, 0.09138363287001147d, vector3D21, 5096.0d, vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA1();
        java.lang.String str33 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D26.add(vector3D34);
        double double36 = vector3D34.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D44.add(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(0.3849691255605494d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D(0.38914040780458603d, vector3D4, (-0.6918710786346925d), vector3D34, (-2.14269974814296d), vector3D48);
        double double51 = vector3D4.getAlpha();
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "XZX" + "'", str29, "XZX");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "XZX" + "'", str33, "XZX");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 3.141592653589793d + "'", double51 == 3.141592653589793d);
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation30 = rotation29.revert();
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation22.applyInverseTo(rotation30);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation21.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation21.revert();
        double double36 = rotation35.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D61.negate();
        double double63 = vector3D62.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D62.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D62.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D66, (-143.96727020572638d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D79.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D74.add(0.05009910281020563d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation35.applyTo(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5033082423383954d + "'", double33 == 0.5033082423383954d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2.0d + "'", double63 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D17.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D30.subtract(1.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D43.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.add((-1.0d), vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D19, (double) 100.0f, vector3D27, (double) (short) -1, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D27.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation5.applyTo(vector3D56);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation65 = rotation64.revert();
        double double66 = rotation65.getQ3();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation5.applyTo(rotation65);
        double double68 = rotation67.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str70 = rotationOrder69.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA3();
        java.lang.String str72 = rotationOrder69.toString();
        double[] doubleArray73 = rotation67.getAngles(rotationOrder69);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.14599455657272695d) + "'", double66 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-0.2003909367058787d) + "'", double68 == (-0.2003909367058787d));
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "XZX" + "'", str70, "XZX");
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "XZX" + "'", str72, "XZX");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[2.827251007389539, 2.32508619303765, -0.7438535077854417]");
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D9.subtract(vector3D11);
        double double18 = vector3D11.getY();
        double double19 = vector3D11.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.subtract(vector3D25);
        double double32 = vector3D25.getY();
        double double33 = vector3D25.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D25.normalize();
        double double36 = vector3D25.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D21.add(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation5.applyTo(vector3D21);
        java.lang.Class<?> wildcardClass39 = vector3D38.getClass();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.1934586046207122d), 1.5880945911846174d, 0.3893722612835905d, 0.0d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation9.applyTo(vector3D13);
        double double17 = rotation9.getQ0();
        double double18 = rotation9.getQ2();
        double[][] doubleArray19 = rotation9.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException20 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) doubleArray19);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(doubleArray19, 0.17054888923331002d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.0955424909088009d) + "'", double17 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.6502970659532881d) + "'", double18 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(doubleArray19);
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation18.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation44.revert();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation18.applyTo(rotation45);
        double[][] doubleArray47 = rotation18.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException50 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException51 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray47);
        java.lang.Throwable[] throwableArray52 = notARotationMatrixException51.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException53 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", (java.lang.Object[]) throwableArray52);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException54 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) throwableArray52);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        double double9 = vector3D8.getNorm();
        double double10 = vector3D8.getZ();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        java.lang.String str7 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 100L, 0.9971377788697264d, 1.0708381896608017d, (-0.1308559559744774d), true);
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 10, (double) 1.0f, (double) 100);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024012d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D10.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyTo(vector3D10);
        double double16 = vector3D15.getAlpha();
        double double17 = vector3D15.getAlpha();
        double double18 = vector3D15.getY();
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.3671022286053819d + "'", double16 == 0.3671022286053819d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.3671022286053819d + "'", double17 == 0.3671022286053819d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0191417515798475d + "'", double18 == 3.0191417515798475d);
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.03563598374487637d), 0.2996643961824783d, 1.0122694247155644d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply((-0.5254171326308468d));
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D3, 16.591478928911346d);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 10.0d, 0.10830291305827339d);
        double double9 = rotation8.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray16 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation22.applyTo(rotation34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        double double50 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation22.applyInverseTo(rotation49);
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation70 = rotation63.applyInverseTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation71 = rotation57.applyTo(rotation69);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation22.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation15.applyTo(rotation71);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation73.revert();
        double double75 = rotation73.getQ2();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation8.applyTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation8.getAxis();
        double double78 = rotation8.getQ2();
        double double79 = rotation8.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.9103552519805896d + "'", double9 == 0.9103552519805896d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 794.7876615041731d + "'", double75 == 794.7876615041731d);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.9103552519805896d + "'", double78 == 0.9103552519805896d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2.5795200655443864d + "'", double79 == 2.5795200655443864d);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.006470259292667449d), 4.879239129211843E-4d);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation48.revert();
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray51, 3.2087642143727657d);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation35.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((-2.4546359825450494d), 0.0d, 0.8152026922093308d, 54.54841155384128d, false);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        double double62 = rotation54.getQ2();
        double double63 = rotation54.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1475455860530537d + "'", double36 == 2.1475455860530537d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.03563598374487637d) + "'", double62 == (-0.03563598374487637d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.017118832690706173d + "'", double63 == 0.017118832690706173d);
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        java.lang.String str10 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-100.0022140464598d), 71.3547214721909d);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.9487155286603564d), 0.0d, 2.5149749549662412d, (-33003.29069562033d), false);
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.normalize();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (byte) 1);
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.479425538604203d) + "'", double7 == (-0.479425538604203d));
        org.junit.Assert.assertNotNull(rotation8);
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        double double53 = rotation51.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str60 = rotationOrder59.toString();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder59.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D62.subtract(1.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D75.subtract(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.add((-1.0d), vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.negate();
        double double87 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D61, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D57, (-0.8414709848078965d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation51.applyInverseTo(vector3D88);
        double double90 = rotation51.getAngle();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation51.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.11078585244669703d + "'", double53 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "YXZ" + "'", str56, "YXZ");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "XZX" + "'", str60, "XZX");
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2.0d + "'", double87 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2.1475455860530537d + "'", double90 == 2.1475455860530537d);
        org.junit.Assert.assertNotNull(rotation91);
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2.0678198605632665d + "'", double15 == 2.0678198605632665d);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8846219209894443d, 0.3468870131236222d, 0.43827018252177924d, (-0.429556888950007d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str7 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder6.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply(100.0d);
        double double13 = vector3D12.getX();
        double double14 = vector3D12.getX();
        double double15 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((-1.0d), vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D39.negate();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation5.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D12.negate();
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D49, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA3();
        java.lang.String str54 = rotationOrder52.toString();
        double[] doubleArray55 = rotation51.getAngles(rotationOrder52);
        java.lang.String str56 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D12.add(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ZXY" + "'", str7, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "XYX" + "'", str54, "XYX");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "XYX" + "'", str56, "XYX");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(0.2182358612485715d, (-0.09618196756046529d), (double) 100.0f, 0.6847869573979007d, true);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertTrue(Double.isNaN(double14));
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        double double5 = vector3D3.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        double double11 = org.apache.commons.math.geometry.Vector3D.angle(vector3D8, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D4, 0.0027048888022863306d, vector3D9);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D4, 0.7604311401305615d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        double[] doubleArray17 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation14.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.orthogonal();
        double double27 = vector3D26.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D18.add((-0.23040281861256878d), vector3D26);
        double double29 = vector3D18.getY();
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.080456683454306d + "'", double11 == 1.080456683454306d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.5759040533149034, 0.7603658595352092, -1.56568860027489]");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.5707963267948966d + "'", double27 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        double[][] doubleArray55 = rotation4.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) (short) 1, (-1.0d), 98.0d);
        double double61 = rotation60.getQ3();
        double double62 = rotation60.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation4.applyTo(rotation60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation60.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str66 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        java.lang.String str68 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, 107.5143815840712d, 0.5277475438952628d, (double) ' ');
        double[] doubleArray73 = rotation60.getAngles(rotationOrder65);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.6654428555205447d + "'", double61 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.5277475438952628d + "'", double62 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "XZX" + "'", str66, "XZX");
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "XZX" + "'", str68, "XZX");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[1.8859977887264037, 1.6074714139783994, 2.669271365476806]");
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D12.subtract((double) 0, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D18.add(2.0d, vector3D29);
        double double31 = vector3D30.getX();
        double double32 = vector3D30.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D((-8.868313204374247E-18d), vector3D30, 0.9649660284921133d, vector3D37, 0.04909141830635927d, vector3D42);
        double double44 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        double double51 = vector3D48.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D48.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder54.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D53.add(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D53.scalarMultiply(27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D53.negate();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D30.add(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D53.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation76 = rotation69.applyInverseTo(rotation75);
        double double77 = rotation69.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder78.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D83.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D79, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation69.applyTo(vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D92.normalize();
        double double94 = org.apache.commons.math.geometry.Vector3D.angle(vector3D88, vector3D93);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D62.subtract(0.8375817726542631d, vector3D93);
        double double96 = vector3D62.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.1071487177940904d + "'", double44 == 1.1071487177940904d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.7683919425686428d) + "'", double77 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0189832222323367d + "'", double94 == 1.0189832222323367d);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1.0d + "'", double96 == 1.0d);
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D51.add((double) 0.0f, vector3D68);
        double double71 = vector3D70.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.scalarMultiply((-0.6502970659532881d));
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((-0.3058692615856504d), vector3D73);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D73, 0.8605691650229957d);
        double double77 = rotation76.getQ1();
        double[][] doubleArray78 = rotation76.getMatrix();
        double double79 = rotation76.getQ2();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 3.141592653589793d + "'", double71 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.41712946130102657d) + "'", double77 == (-0.41712946130102657d));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.Rotation rotation11 = rotation10.revert();
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 2.3114482587377294d, (double) (-1.0f), (double) (short) 10);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (-0.858431163878729d), 0.5496694388267762d, 0.5181089967534271d);
        double[] doubleArray30 = rotation11.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder31.getA2();
        java.lang.String str37 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder31.getA1();
        java.lang.String str44 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotation11.applyInverseTo(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.666978294355362, 0.530964914873383, 1.1283155162826222]");
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZYZ" + "'", str37, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ZYZ" + "'", str44, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation17.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(2.8156024785781764d, 0.8775825618903728d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(vector3D22);
        double double24 = vector3D23.getAlpha();
        double double25 = org.apache.commons.math.geometry.Vector3D.angle(vector3D11, vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-3.011713490850235d) + "'", double24 == (-3.011713490850235d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.693679221335902d + "'", double25 == 1.693679221335902d);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) (short) 1, (-1.0d), 98.0d);
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation15.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA1();
        java.lang.String str22 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D18.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (byte) 10, 1.0d, 0.0d);
        double double35 = rotation34.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((-0.8790056663063665d), 1.0708381896608017d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D(1.6173610802715999d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation34.applyTo(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((-0.2551713383813414d), vector3D18, 0.24893698743024015d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.6654428555205447d + "'", double16 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "YXZ" + "'", str20, "YXZ");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "YXZ" + "'", str22, "YXZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.638427581942488d + "'", double35 == 2.638427581942488d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.479425538604203d, (-0.02947405916724674d));
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D7.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D13.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D26.subtract(1.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.subtract(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.add((-1.0d), vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D15, (double) 100.0f, vector3D23, (double) (short) -1, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D7.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        double double59 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D56.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D60.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D23, (-0.7683919425686428d), vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D23.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((-0.08916778026708072d), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D65.negate();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D66.normalize();
        double double68 = vector3D67.getZ();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        double double9 = vector3D8.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D8.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder11.getA1();
        double double19 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D10, vector3D18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D10.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-0.0d) + "'", double19 == (-0.0d));
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        org.apache.commons.math.geometry.Vector3D vector3D0 = null;
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, 2.0d, 0.24893698743024015d, (double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder11.getA1();
        double double25 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D3, vector3D24);
        // The following exception was thrown during execution in test generation
        try {
            double double26 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D0, vector3D3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0952905926857031d, (double) 10.0f, (-406.7116193600549d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(2.23606797749979d, (double) (-1L), (-0.7525070711305497d), (double) (byte) 1, false);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation23.applyTo(rotation35);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation50 = rotation43.applyInverseTo(rotation49);
        double double51 = rotation50.getQ2();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation23.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(rotationOrder59, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation71 = rotation64.applyInverseTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation72 = rotation58.applyTo(rotation70);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation23.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation73.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.orthogonal();
        double double76 = vector3D75.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation16.applyInverseTo(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D10.add(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-0.7525070711305497d) + "'", double17 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotation71);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.9902124943143233d) + "'", double76 == (-0.9902124943143233d));
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        double double19 = rotation11.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation32.applyTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation32.getAxis();
        double double37 = org.apache.commons.math.geometry.Vector3D.angle(vector3D20, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D36);
        double double39 = vector3D36.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.5114629390766603d + "'", double19 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-0.42955688895000704d) + "'", double39 == (-0.42955688895000704d));
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        double double16 = rotation8.getQ0();
        double double17 = rotation8.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation8.applyInverseTo(vector3D19);
        double double21 = rotation8.getQ3();
        double[][] doubleArray22 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation8.getAxis();
        double double24 = vector3D23.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.0955424909088009d) + "'", double16 == (-0.0955424909088009d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.04145438869418405d + "'", double17 == 0.04145438869418405d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7525070711305497d) + "'", double21 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.507135616659228d) + "'", double24 == (-1.507135616659228d));
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        double double10 = rotation9.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation16.applyTo(rotation21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation16.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.add((-1.0d), vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D30, (double) 100.0f, vector3D38, (double) (short) -1, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D38.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation16.applyTo(vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation76 = rotation75.revert();
        double double77 = rotation76.getQ3();
        org.apache.commons.math.geometry.Rotation rotation78 = rotation16.applyTo(rotation76);
        double double79 = rotation78.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation9.applyTo(rotation78);
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder82.getA2();
        java.lang.String str90 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation94.getAxis();
        org.apache.commons.math.geometry.Rotation rotation96 = rotation80.applyTo(rotation94);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9103552519805896d + "'", double10 == 0.9103552519805896d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.14599455657272695d) + "'", double77 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(rotation78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.2003909367058787d) + "'", double79 == (-0.2003909367058787d));
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.6245193364780535d + "'", double81 == 0.6245193364780535d);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ZXZ" + "'", str90, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(rotation96);
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder33.getA2();
        double double38 = vector3D37.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder40.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D42.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D42, 0.15135620392549756d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder50.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D56.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA1();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation72 = rotation65.applyInverseTo(rotation71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation71.applyTo(vector3D73);
        double[][] doubleArray75 = rotation71.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException76 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray75);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException77 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray75);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(doubleArray75, 25.06596560241331d);
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(doubleArray75, 1.8228860923754615d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotation81.getAxis();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D57, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation49.applyInverseTo(vector3D82);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(rotationOrder86, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotation90.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        double double95 = vector3D94.getY();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D91.subtract(vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D(1.5626956329092445d, vector3D31, 0.0d, vector3D37, 2.275653189032593d, vector3D82, 0.8506508083520399d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D97.normalize();
        double double99 = vector3D98.getDelta();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "XZX" + "'", str34, "XZX");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotation72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.42487699275774343d + "'", double95 == 0.42487699275774343d);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D98);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.15097780788633347d + "'", double99 == 0.15097780788633347d);
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.String str6 = cardanEulerSingularityException3.getPattern();
        java.lang.Object[] objArray7 = cardanEulerSingularityException3.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", objArray7);
        java.lang.String str9 = notARotationMatrixException8.getPattern();
        java.lang.Throwable[] throwableArray10 = notARotationMatrixException8.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) throwableArray10);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZYZ" + "'", str9, "ZYZ");
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D5.subtract(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D23, (double) 100.0f, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(vector3D37, 3.2087642143727657d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D45.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) 100L, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D47.subtract(0.37481384288189196d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D(0.6654428555205447d, vector3D37, 1.4807974150702279d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D37.scalarMultiply((-0.883932023180614d));
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1056478979494711d), 0.0d, 0.7316279195830642d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.normalize();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXZ" + "'", str2, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.34752552507020934d), 754.8721825660073d, 25.055003913957254d, (-0.10483202296503055d), true);
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.08153856787190739d), 0.5116251420385008d, (-0.429556888950007d));
        double double4 = vector3D3.getAlpha();
        double double5 = vector3D3.getNorm();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.7288389105174133d + "'", double4 == 1.7288389105174133d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6729992160923566d + "'", double5 == 0.6729992160923566d);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str32 = rotationOrder31.toString();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply(100.0d);
        double double38 = vector3D37.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D53, 0.5277475438952628d, vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D37, vector3D57, vector3D60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D57, 3.2087642143727657d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D57.normalize();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, 0.2874427939781007d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ZXY" + "'", str32, "ZXY");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.5707963267948966d + "'", double38 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        double[][] doubleArray26 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation34);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(doubleArray37, 0.3468870131236222d);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(doubleArray37, 2.0895581284690947d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZYZ" + "'", str31, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        org.apache.commons.math.geometry.Rotation rotation1 = new org.apache.commons.math.geometry.Rotation();
        double double2 = rotation1.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        double[][] doubleArray10 = rotation9.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation11 = rotation1.applyInverseTo(rotation9);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray12);
        java.lang.Object[] objArray14 = notARotationMatrixException13.getArguments();
        java.lang.String str15 = notARotationMatrixException13.toString();
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[[0.450732805290736, -0.7019747527151661, 0.5514266812416908], [-0.2979371073921011, 0.46400955251379594, 0.8342233605065102], [-0.8414709848078967, -0.5403023058681397, 2.220446049250313E-16]]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str15, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D2.negate();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.6502970659532881d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = new org.apache.commons.math.geometry.Vector3D((-0.1934112408002968d), vector3D19, (-0.19537365596023334d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA2();
        double double29 = vector3D28.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.orthogonal();
        double double31 = vector3D28.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D53, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D35.subtract(0.496669722445646d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D35.negate();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.scalarMultiply(649.9580153489533d);
        double double70 = vector3D69.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D74.subtract(vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D69.add(1.5501807665642404d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(0.7683919425686428d, vector3D2, (-3401.3628100906258d), vector3D23, 2.6991118430775183d, vector3D28, 0.3345571444794553d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D(0.03736466592466642d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double92 = rotation91.getQ0();
        double double93 = rotation91.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation91.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D28.add(vector3D94);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1.5707963267948966d) + "'", double70 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.24893698743024015d + "'", double92 == 0.24893698743024015d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.8415352216177445d + "'", double93 == 0.8415352216177445d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4.341241737144209E-18d, 2.0678198605632665d, 6.3007480475286926d, (-0.04104628521447248d), false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        double double26 = rotation11.getQ2();
        double double27 = rotation11.getQ0();
        double double28 = rotation11.getAngle();
        double double29 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 0.0f, (double) 100, 0.0d, (double) (short) -1, true);
        double double37 = rotation36.getQ0();
        double double38 = rotation36.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation52 = rotation45.applyInverseTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotation51.applyTo(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation51.getAxis();
        double[][] doubleArray56 = rotation51.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(doubleArray56, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(vector3D62, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation65 = rotation59.applyInverseTo(rotation64);
        double double66 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation67 = rotation36.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation5.applyTo(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZYZ" + "'", str61, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.7683919425686427d) + "'", double66 == (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder7.getA1();
        double double13 = vector3D12.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation6.applyInverseTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str19 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder18.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        java.lang.String str26 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.subtract(1.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.subtract(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D57, vector3D60, vector3D82);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D22, vector3D31, vector3D60);
        double double85 = vector3D60.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D89 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, 100.0022140464598d);
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, vector3D12, Double.NaN, vector3D60, (-0.0d), vector3D89);
        double double92 = vector3D12.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXY" + "'", str19, "ZXY");
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.7564240344749331d) + "'", double90 == (-0.7564240344749331d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA1();
        java.lang.String str18 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation5.applyInverseTo(vector3D20);
        double double22 = vector3D20.getX();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D20, (-0.126035424677324d));
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.negate();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.5114629390766603d + "'", double14 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "YXZ" + "'", str16, "YXZ");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "YXZ" + "'", str18, "YXZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str3 = rotationOrder2.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(vector3D5, (-0.8942012921495908d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D(1.0d, 3.1382470946270726d, (-0.9902124943143233d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation7.applyTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation19.applyTo(rotation31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation46 = rotation39.applyInverseTo(rotation45);
        double double47 = rotation46.getQ2();
        org.apache.commons.math.geometry.Rotation rotation48 = rotation19.applyInverseTo(rotation46);
        double double49 = rotation46.getQ1();
        org.apache.commons.math.geometry.Rotation rotation50 = rotation46.revert();
        double double51 = rotation46.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str62 = rotationOrder52.toString();
        double[] doubleArray63 = rotation46.getAngles(rotationOrder52);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation46.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str76 = rotationOrder75.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder75.getA3();
        java.lang.String str79 = rotationOrder75.toString();
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder75.getA2();
        double double86 = vector3D85.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D85.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D74.subtract(vector3D85);
        double double89 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D64.subtract(0.8342233605065102d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.9166535214993772d, vector3D12, (-0.7686261061565807d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D91);
        double double93 = vector3D92.getY();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZYZ" + "'", str3, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZXY" + "'", str62, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-0.0, 0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ZXY" + "'", str76, "ZXY");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.0d) + "'", double89 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 4.641353497118711d + "'", double93 == 4.641353497118711d);
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 5096.0d, 0.011446029314669317d, (-378.71766086458643d));
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        double double14 = rotation12.getQ0();
        double double15 = rotation12.getQ1();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation6.applyTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D20, (double) 100.0f, vector3D28, (double) (short) -1, vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D57, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D48.subtract(vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray77 = rotation76.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation76.applyTo(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D66.subtract((double) 100.0f, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation16.applyInverseTo(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        double[] doubleArray19 = rotation11.getAngles(rotationOrder16);
        java.lang.String str20 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA3();
        double double22 = vector3D21.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-0.657879182722611, 0.47402663624573416, 1.8024949709136886]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "XZY" + "'", str20, "XZY");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double8 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D20, 0.9920257414636006d);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyTo(rotation24);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D52.subtract(1.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.add((-1.0d), vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D41, (double) 100.0f, vector3D49, (double) (short) -1, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D33.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D79);
        double double81 = rotation80.getAngle();
        double double82 = rotation80.getQ1();
        double double83 = rotation80.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str85 = rotationOrder84.toString();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder84.getA1();
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation80.applyTo(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation25.applyInverseTo(vector3D87);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.2112625254810094d + "'", double8 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.5707963267948963d + "'", double81 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "YXZ" + "'", str85, "YXZ");
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        java.lang.Object[] objArray6 = notARotationMatrixException5.getArguments();
        java.lang.String str7 = notARotationMatrixException5.getPattern();
        java.lang.Throwable[] throwableArray8 = notARotationMatrixException5.getSuppressed();
        java.lang.Throwable[] throwableArray9 = notARotationMatrixException5.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation19.applyInverseTo(rotation25);
        double double27 = rotation26.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D43, vector3D47);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D38, vector3D43);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation26.applyTo(rotation53);
        double[][] doubleArray55 = rotation26.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException56 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException58 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray55);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray55);
        java.lang.Object[] objArray60 = notARotationMatrixException59.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException59);
        java.lang.Throwable[] throwableArray62 = notARotationMatrixException5.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str7, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]");
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7853981633974482d), 3.1153170831869756d, 0.2324998231222032d, 0.479425538604203d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 2.9502157553926875d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(doubleArray12, 0.6838267645076843d);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation5.applyInverseTo(rotation16);
        double double18 = rotation5.getQ2();
        double double19 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.07139169940494478d + "'", double18 == 0.07139169940494478d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.9565933331358929d + "'", double19 == 0.9565933331358929d);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str26 = rotationOrder25.toString();
        java.lang.String str27 = rotationOrder25.toString();
        double[] doubleArray28 = rotation5.getAngles(rotationOrder25);
        java.lang.String str29 = rotationOrder25.toString();
        java.lang.String str30 = rotationOrder25.toString();
        java.lang.String str31 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder25.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder25.getA3();
        java.lang.String str34 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder25.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYX" + "'", str26, "XYX");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "XYX" + "'", str29, "XYX");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XYX" + "'", str30, "XYX");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "XYX" + "'", str31, "XYX");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "XYX" + "'", str34, "XYX");
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.2551713383813414d), (-0.08153856787190739d), (double) 100, (-0.9902124943143233d), true);
        double double6 = rotation5.getQ3();
        double double7 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.009901603992996635d) + "'", double6 == (-0.009901603992996635d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.009901603992996635d) + "'", double7 == (-0.009901603992996635d));
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(128.0d, (-0.09949879346007118d), (-0.031234752377721213d), 0.7071067811865475d, true);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation6.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D20, (double) 100.0f, vector3D28, (double) (short) -1, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D28.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation6.applyTo(vector3D57);
        double double60 = rotation6.getQ2();
        double double61 = rotation6.getQ2();
        double[][] doubleArray62 = rotation6.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation64 = new org.apache.commons.math.geometry.Rotation(doubleArray62, 0.5496694388267763d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException65 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray62);
        java.lang.Object[] objArray66 = notARotationMatrixException65.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-0.7683919425686428d) + "'", double60 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-0.7683919425686428d) + "'", double61 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[[-0.20431139676264087, -0.45647262536381383, 0.8659616593396997], [-0.6780443302572079, 0.704041030906696, 0.21114476788661177], [-0.7060543458962301, -0.5440211108893699, -0.4533522819483131]]");
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0022140464598d, 0.5277475438952628d, 2.356194490192345d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder1.getA2();
        double double19 = vector3D18.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D25.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D71.add((-1.0d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D45, (double) 100.0f, vector3D53, (double) (short) -1, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D37.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D37);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D82, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D30.add(vector3D82);
        double double86 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), vector3D20, 3.0494479105138855E-17d, vector3D30);
        double double88 = vector3D87.getY();
        double double89 = vector3D87.getY();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-0.0d) + "'", double86 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.70605434589623d, 0.07932499020447392d, 0.5752220392306202d, 0.4362039034381025d, true);
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder44, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray49 = rotation43.getAngles(rotationOrder44);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation38.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation38.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation13.applyInverseTo(vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str62 = rotationOrder61.toString();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) 100, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder66 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder66, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder66.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str77 = rotationOrder76.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder76.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder76.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D82 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D58, 1.4951200884960367d, vector3D64, 3.141592653589793d, vector3D74, 0.15135620392549756d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D74.add(vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D86.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ZYZ" + "'", str62, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "XZX" + "'", str77, "XZX");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.802655335603289d), 30.006480473138d, 0.8787695077488106d, (-0.46046474586818387d), false);
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray57 = rotation56.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D59.subtract(1.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.add((-1.0d), vector3D76);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D76, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation85 = rotation84.revert();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation51.applyInverseTo(rotation84);
        double double87 = rotation51.getQ3();
        double double88 = rotation51.getQ3();
        double double89 = rotation51.getAngle();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double89));
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation25.getAxis();
        org.apache.commons.math.geometry.Rotation rotation28 = rotation25.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation28);
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.2879033166650653d), 0.20966096335394535d, 1.1466314770229897d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 2.356194490192345d, 100.4491529857595d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, 0.14247398601495026d, (-2.5922041944372287d), 0.6157991586752775d);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder47.getA1();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D5.add((-3.110368056629538d), vector3D13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA3();
        double double17 = vector3D16.getZ();
        double double18 = org.apache.commons.math.geometry.Vector3D.angle(vector3D14, vector3D16);
        double double19 = vector3D14.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder27.getA2();
        java.lang.String str35 = rotationOrder27.toString();
        java.lang.String str36 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D37.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str40 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder39.getA3();
        java.lang.String str42 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str47 = rotationOrder39.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder39.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D37.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((-0.429556888950007d), vector3D24, (-0.8414709848078965d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-0.615897182731486d), vector3D14, 1.0479003427042046d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.subtract(vector3D58);
        double double65 = vector3D58.getY();
        double double66 = vector3D58.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D67 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D58.normalize();
        double double69 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D(1.981403820949318d, vector3D58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder71.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder71.getA3();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D58, vector3D78);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D83.subtract(0.0d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D82, vector3D86);
        double double91 = vector3D86.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(0.9994945563140942d, vector3D78, 0.5440211108893698d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D51.add(1.9174147756487239d, vector3D78);
        double double94 = vector3D51.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.580316067234769d + "'", double18 == 1.580316067234769d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3.267168414346192d + "'", double19 == 3.267168414346192d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ZXY" + "'", str40, "ZXY");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ZXY" + "'", str42, "ZXY");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXY" + "'", str47, "ZXY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 3.119519074404502d + "'", double94 == 3.119519074404502d);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotation72.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = null;
        double[] doubleArray76 = rotation72.getAngles(rotationOrder75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA1();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder77, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation86.revert();
        double double88 = rotation86.getQ3();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation72.applyInverseTo(rotation86);
        double double90 = rotation72.getQ0();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[3.141592653589793, 0.010518226214947121, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-0.79117179871969d) + "'", double88 == (-0.79117179871969d));
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.9999861708965355d + "'", double90 == 0.9999861708965355d);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D6.subtract((double) 0, vector3D64);
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-634.6978979926987d), (double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(vector3D69);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA3();
        double double75 = vector3D74.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D74.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        double double84 = vector3D78.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D91);
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 1, vector3D77, (-0.476811323902129d), vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D65.subtract(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D95.scalarMultiply(0.01434152260977134d);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXY" + "'", str73, "ZXY");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8415352216177445d, 2.617866403174436d, (-0.3078507869034174d), 0.9988929054468334d, false);
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(233.91718584479247d, (-0.11940151637535575d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotation5.applyInverseTo(vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder11.getA1();
        java.lang.String str16 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        double double24 = vector3D21.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D26.add(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D26.scalarMultiply(27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D26.negate();
        double double34 = org.apache.commons.math.geometry.Vector3D.angle(vector3D17, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D38.scalarMultiply(0.26237485370392877d);
        double double43 = vector3D38.getY();
        double double44 = vector3D38.getY();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D17.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D8.add(0.5711944941453472d, vector3D38);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "XZX" + "'", str12, "XZX");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "XZX" + "'", str16, "XZX");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 3.141592653589793d + "'", double34 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, 0.0d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.subtract(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D30, vector3D33, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D55.scalarMultiply(0.5277475438952628d);
        double double60 = vector3D55.getX();
        double double61 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D3.subtract(2.1349162105446426d, vector3D55);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), (double) 1L, 2.0d, 2.2112625254810094d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) (short) 1, (-1.0d), 98.0d);
        double double75 = rotation74.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation74.getAxis();
        org.apache.commons.math.geometry.Rotation rotation77 = rotation69.applyTo(rotation74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA3();
        java.lang.String str81 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder78, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str86 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder78.getA2();
        double double88 = vector3D87.getY();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.negate();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotation74.applyTo(vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D((-3401.3628100906258d), vector3D89);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D89, (-3.138887764787507d));
        double double94 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D62, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D62.normalize();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 3.141592653589793d + "'", double61 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.6654428555205447d + "'", double75 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ZXY" + "'", str81, "ZXY");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ZXY" + "'", str86, "ZXY");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-3.957802302920104d) + "'", double94 == (-3.957802302920104d));
        org.junit.Assert.assertNotNull(vector3D95);
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation4.getAxis();
        org.apache.commons.math.geometry.Rotation rotation6 = rotation4.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyInverseTo(rotation19);
        double double21 = rotation20.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2.791396908627954d + "'", double21 == 2.791396908627954d);
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D6.subtract(vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D6.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(98.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.add((-1.0d), vector3D58);
        double double60 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D6, (-2.0d), vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D6);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str21 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder20.getA3();
        java.lang.String str24 = rotationOrder20.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.scalarMultiply(2.1349162105446426d);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D19.add(vector3D30);
        double double34 = vector3D19.getAlpha();
        double double35 = vector3D19.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ZXY" + "'", str21, "ZXY");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.5707963267948966d + "'", double34 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation56.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D40.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        double double69 = vector3D68.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.subtract(vector3D72);
        double double79 = vector3D72.getY();
        double double80 = vector3D72.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D61, vector3D68, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) 100.0f, (double) (byte) 10);
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D59.add(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, (-0.45973278686101987d));
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D85.scalarMultiply((-0.8036437989504776d));
        double double90 = vector3D85.getNorm();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.606375037533424d + "'", double90 == 1.606375037533424d);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.5707963267948963d, (double) (byte) 10, (-524.7609754926534d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D20, vector3D24);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D15, vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray40 = rotation34.getAngles(rotationOrder35);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation29.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation29.applyTo(vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D49.subtract(1.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.add((-1.0d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.negate();
        double double74 = vector3D72.getX();
        double double75 = vector3D72.getX();
        double double76 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D47, vector3D72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str78 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA1();
        java.lang.String str80 = rotationOrder77.toString();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder77.getA3();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D72, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotation82.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(rotationOrder84, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder84.getA3();
        double[] doubleArray92 = rotation82.getAngles(rotationOrder84);
        double[] doubleArray93 = rotation4.getAngles(rotationOrder84);
        java.lang.String str94 = rotationOrder84.toString();
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder84.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D95.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D96.scalarMultiply(3.105956669844917d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-2.0d) + "'", double74 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-2.0d) + "'", double75 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-2.0d) + "'", double76 == (-2.0d));
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "YXZ" + "'", str78, "YXZ");
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "YXZ" + "'", str80, "YXZ");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-0.0, 0.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.570796326794897, -0.5752220392306202, -0.11500234315794439]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "ZXY" + "'", str94, "ZXY");
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray18 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray27 = cardanEulerSingularityException26.getArguments();
        java.lang.Throwable[] throwableArray28 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        cardanEulerSingularityException26.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        notARotationMatrixException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) cardanEulerSingularityException26);
        java.lang.Throwable[] throwableArray36 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Object[] objArray37 = cardanEulerSingularityException26.getArguments();
        java.lang.Object[] objArray38 = cardanEulerSingularityException26.getArguments();
        java.lang.String str39 = cardanEulerSingularityException26.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str39, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8342233605065102d, (-0.5033082423383954d), 3.2087642143727657d, (-0.8414709848078965d), true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotation17.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation17.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation34 = rotation27.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation33.applyTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation55 = rotation48.applyInverseTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation42.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation57 = rotation33.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation17.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation58.revert();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation59.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, 1.8414709848078965d, (-0.9138363287001148d), 0.428182669496151d);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, 0.0d, (-0.12637150995481888d), 0.14599455657272695d);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation59.applyTo(rotation73);
        double double75 = rotation74.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D79 = new org.apache.commons.math.geometry.Vector3D((double) 100L, 100.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation74.applyInverseTo(vector3D79);
        double double81 = rotation74.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation5.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str84 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder83.getA3();
        java.lang.String str87 = rotationOrder83.toString();
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder83, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        double[] doubleArray92 = rotation74.getAngles(rotationOrder83);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.2706003593817684d + "'", double75 == 0.2706003593817684d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.008602829323064094d + "'", double81 == 0.008602829323064094d);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ZXY" + "'", str84, "ZXY");
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ZXY" + "'", str87, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[2.5337419204719423E-4, -0.1606240321519871, 0.21802662914102977]");
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.24987572770084396d), (double) 10L, 0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D24, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA3();
        double[] doubleArray37 = rotation32.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, 0.26237485370392877d, 0.8415352216177445d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder34.getA2();
        double[] doubleArray47 = rotation6.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder34.getA1();
        double double49 = vector3D48.getY();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D67, 100.0d);
        double double76 = rotation75.getQ0();
        double double77 = rotation75.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation75.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D78.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D48.subtract(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.6811423868520077, -0.8762950134753157, -2.17380927399407]");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9649660284921133d + "'", double76 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.9649660284921133d + "'", double77 == 0.9649660284921133d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (-0.5033082423383954d));
        double double3 = vector3D2.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.orthogonal();
        java.lang.Class<?> wildcardClass5 = vector3D2.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.negate();
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D3, (-0.8414709848078965d), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D35.add(0.9999736246184127d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.add((-1.0d), vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D46, (double) 100.0f, vector3D54, (double) (short) -1, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D74.orthogonal();
        double double83 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double88 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D84.subtract(0.0d, vector3D87);
        double double90 = vector3D87.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D74.add(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D40.add(0.8354149633266263d, vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZX" + "'", str6, "XZX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.0d + "'", double33 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        double double35 = rotation32.getQ1();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation32.revert();
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(doubleArray37, 3.1330314046616845d);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation17.applyTo(rotation29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        double double45 = rotation44.getQ2();
        org.apache.commons.math.geometry.Rotation rotation46 = rotation17.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation58 = rotation52.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation17.applyTo(rotation58);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation11.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D61.subtract(vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation58.applyTo(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation6.applyTo(vector3D70);
        double double72 = vector3D70.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA3();
        double double77 = vector3D76.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        double double86 = vector3D80.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.subtract(vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D70, (-0.2773514360021802d), vector3D87);
        double double89 = vector3D88.getY();
        double double90 = vector3D88.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZXY" + "'", str75, "ZXY");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.2773514360021802d + "'", double89 == 0.2773514360021802d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.7853981633974483d + "'", double90 == 0.7853981633974483d);
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str3 = cardanEulerSingularityException2.getPattern();
        java.lang.String str4 = cardanEulerSingularityException2.getPattern();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) throwableArray5);
        java.lang.String str7 = notARotationMatrixException6.getPattern();
        java.lang.Object[] objArray8 = notARotationMatrixException6.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException10 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray11 = cardanEulerSingularityException10.getArguments();
        java.lang.Object[] objArray12 = cardanEulerSingularityException10.getArguments();
        java.lang.String str13 = cardanEulerSingularityException10.getPattern();
        java.lang.Object[] objArray14 = cardanEulerSingularityException10.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException10.getSuppressed();
        java.lang.String str16 = cardanEulerSingularityException10.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException10.getArguments();
        java.lang.String str18 = cardanEulerSingularityException10.getPattern();
        java.lang.Object[] objArray19 = cardanEulerSingularityException10.getArguments();
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) cardanEulerSingularityException10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Euler angles singularity" + "'", str3, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "XYX" + "'", str7, "XYX");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.XZY;
        double[] doubleArray15 = rotation13.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder22.getA1();
        double double28 = vector3D27.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation21.applyInverseTo(vector3D27);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation21.revert();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation13.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation13.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D(0.9103552519805896d, vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(vector3D32);
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D((-0.6665200360546983d), (double) 1L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        double double27 = rotation26.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation26.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str30 = rotationOrder29.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder29.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder29.getA2();
        double[] doubleArray35 = rotation26.getAngles(rotationOrder29);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder36.getA2();
        double double41 = vector3D40.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation26.applyInverseTo(vector3D40);
        double double43 = org.apache.commons.math.geometry.Vector3D.angle(vector3D19, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D15.subtract(2.3373869432128567d, vector3D40);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-0.14599455657272695d) + "'", double27 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XZX" + "'", str30, "XZX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.911089704458946, 1.1032102335428604, 0.6658592074878087]");
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "XZX" + "'", str37, "XZX");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5707963267948967d + "'", double43 == 0.5707963267948967d);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray5 = rotation4.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(doubleArray5, (double) 10.0f);
        double double8 = rotation7.getQ2();
        double double9 = rotation7.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.35693432703869876d) + "'", double8 == (-0.35693432703869876d));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.4453881189967664d + "'", double9 == 0.4453881189967664d);
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation51.getQ3();
        double double55 = rotation51.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotation51.getAxis();
        double double57 = rotation51.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7604311401305615d + "'", double54 == 0.7604311401305615d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.7604311401305615d + "'", double55 == 0.7604311401305615d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.5181089967534271d + "'", double57 == 0.5181089967534271d);
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException4.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray12 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray12);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray18);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray23 = cardanEulerSingularityException21.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.String str27 = cardanEulerSingularityException25.getPattern();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        java.lang.Object[] objArray30 = notARotationMatrixException19.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        cardanEulerSingularityException32.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.Object[] objArray40 = cardanEulerSingularityException36.getArguments();
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        java.lang.String str42 = cardanEulerSingularityException36.getPattern();
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.Object[] objArray47 = cardanEulerSingularityException45.getArguments();
        java.lang.String str48 = cardanEulerSingularityException45.getPattern();
        java.lang.Object[] objArray49 = cardanEulerSingularityException45.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException45.getSuppressed();
        java.lang.Object[] objArray51 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException54.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray56);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Throwable[] throwableArray61 = cardanEulerSingularityException59.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray64 = cardanEulerSingularityException63.getArguments();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        notARotationMatrixException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Object[] objArray68 = notARotationMatrixException57.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException70 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray71 = cardanEulerSingularityException70.getArguments();
        java.lang.Throwable[] throwableArray72 = cardanEulerSingularityException70.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException74 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray75 = cardanEulerSingularityException74.getArguments();
        java.lang.String str76 = cardanEulerSingularityException74.getPattern();
        cardanEulerSingularityException70.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        java.lang.Object[] objArray78 = cardanEulerSingularityException74.getArguments();
        notARotationMatrixException57.addSuppressed((java.lang.Throwable) cardanEulerSingularityException74);
        java.lang.String str80 = notARotationMatrixException57.getPattern();
        cardanEulerSingularityException45.addSuppressed((java.lang.Throwable) notARotationMatrixException57);
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        java.lang.Object[] objArray83 = cardanEulerSingularityException45.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException84 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray83);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException85 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", objArray83);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Euler angles singularity" + "'", str48, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Euler angles singularity" + "'", str76, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str80, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(vector3D0, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotation2.applyTo(vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) 1, (-1.0d), 98.0d);
        double double11 = rotation10.getQ3();
        double double12 = rotation10.getQ1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.applyTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation2.applyTo(rotation19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.negate();
        double double52 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        double double59 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D50, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation26.applyTo(vector3D58);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation19.applyInverseTo(rotation26);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation26.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.6654428555205447d + "'", double11 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.5277475438952628d + "'", double12 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-2.0d) + "'", double52 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-2.0d) + "'", double59 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.2259647441756316d, 98.0d, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D7 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, (-0.5033082423383954d));
        double double8 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.negate();
        double double10 = vector3D9.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D3.add(0.7868854262316621d, vector3D9);
        double double12 = vector3D11.getZ();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.6204645696236049d) + "'", double12 == (-0.6204645696236049d));
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation48.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str51 = rotationOrder50.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D52, (-0.7683919425686428d));
        double double55 = rotation54.getQ3();
        java.lang.Object[] objArray56 = new java.lang.Object[] { vector3D49, rotation54 };
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException57 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", objArray56);
        java.lang.String str58 = notARotationMatrixException57.getPattern();
        java.lang.String str59 = notARotationMatrixException57.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZYZ" + "'", str51, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.37481384288189196d + "'", double55 == 0.37481384288189196d);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str58, "org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str59, "org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.9999999999999999d, (double) (short) 100, (double) 'a');
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder8.getA2();
        double[] doubleArray15 = rotation7.getAngles(rotationOrder8);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation30 = rotation23.applyInverseTo(rotation29);
        double double31 = rotation23.getQ0();
        double double32 = rotation23.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.negate();
        double double65 = vector3D63.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str68 = rotationOrder67.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply(100.0d);
        double double74 = vector3D73.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(0.47011525616512123d, vector3D38, 3.141592653589793d, vector3D63, 0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation23.applyTo(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation23.getAxis();
        double double78 = org.apache.commons.math.geometry.Vector3D.angle(vector3D17, vector3D77);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str82 = rotationOrder81.toString();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder81.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.normalize();
        double double89 = vector3D87.getAlpha();
        double double90 = org.apache.commons.math.geometry.Vector3D.angle(vector3D86, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D92 = new org.apache.commons.math.geometry.Vector3D(3.267168414346192d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D17.add(2.164942851390959d, vector3D86);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[1.6810057105770655, 2.4943876496393393, -2.567713121203094]");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.5114629390766603d + "'", double31 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.5114629390766603d + "'", double32 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2.0d + "'", double65 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ZXY" + "'", str68, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.5707963267948966d + "'", double74 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2.0147983581473317d + "'", double78 == 2.0147983581473317d);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ZXY" + "'", str82, "ZXY");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1.5707963267948966d) + "'", double89 == (-1.5707963267948966d));
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 3.141592653589793d + "'", double90 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation4.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA3();
        double[] doubleArray58 = rotation4.getAngles(rotationOrder55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder55.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-0.45973278686101987d) + "'", double54 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "XZX" + "'", str56, "XZX");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-2.227294405064556, 2.0413190668629926, -1.906858042085361]");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation12.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D5.add((-3.110368056629538d), vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D((-406.7116193600549d), vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZXY" + "'", str2, "ZXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray28 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray38 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.String str52 = cardanEulerSingularityException50.getPattern();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) notARotationMatrixException44);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Throwable[] throwableArray57 = notARotationMatrixException5.getSuppressed();
        java.lang.Object[] objArray58 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray68 = rotation67.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException69 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray68);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException70 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray68);
        java.lang.String str71 = notARotationMatrixException70.getPattern();
        java.lang.Object[] objArray72 = notARotationMatrixException70.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(rotationOrder80, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation86 = rotation79.applyInverseTo(rotation85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotation85.applyTo(vector3D87);
        double[][] doubleArray89 = rotation85.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException90 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray89);
        java.lang.String str91 = notARotationMatrixException90.getPattern();
        java.lang.String str92 = notARotationMatrixException90.getPattern();
        notARotationMatrixException70.addSuppressed((java.lang.Throwable) notARotationMatrixException90);
        java.lang.Throwable[] throwableArray94 = notARotationMatrixException90.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException95 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) throwableArray94);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException95);
        java.lang.Object[] objArray97 = notARotationMatrixException95.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[]");
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.orthogonal();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-634.6978979926987d), 0.26237485370392877d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7384602626041288d), (-0.40799733592974274d), 524.7609754926534d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D18.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.subtract(vector3D23);
        double double30 = vector3D23.getY();
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str34 = rotationOrder33.toString();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder33.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D35.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, (-0.05546668618914311d), (-0.9132779260310951d));
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D40, vector3D44);
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotation46.applyTo(vector3D47);
        double[][] doubleArray54 = rotation46.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation55 = rotation14.applyTo(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ZXY" + "'", str34, "ZXY");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(rotation55);
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-2.6347218965989545d), 1.4054902563068818d, (-0.3873179519917884d), 5.745303663565185E-4d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyTo(rotation46);
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotation46.getAxis();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyInverseTo(rotation80);
        double double82 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation54.applyInverseTo(rotation81);
        double[][] doubleArray84 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation46.applyTo(rotation54);
        org.apache.commons.math.geometry.RotationOrder rotationOrder86 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder86.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder86.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D89.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation93 = new org.apache.commons.math.geometry.Rotation(vector3D89, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation46.applyInverseTo(vector3D89);
        double double95 = rotation46.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotationOrder86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.7604311401305615d + "'", double95 == 0.7604311401305615d);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D13.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D9, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D13.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D29.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation5.applyInverseTo(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (-18.13640959594133d));
        org.apache.commons.math.geometry.Rotation rotation63 = rotation62.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.41564548710087357d), 0.7083006934080233d, (-380.8372777345077d));
        java.lang.Class<?> wildcardClass15 = rotation14.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.Rotation rotation22 = rotation8.applyTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation8.applyInverseTo(rotation35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D63, vector3D66, vector3D88);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation8.applyInverseTo(rotation89);
        double[][] doubleArray91 = rotation89.getMatrix();
        double[][] doubleArray92 = rotation89.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException93 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray92);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException94 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) doubleArray92);
        java.lang.String str95 = notARotationMatrixException94.getPattern();
        java.lang.Object[] objArray96 = notARotationMatrixException94.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException97 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", objArray96);
        java.lang.Throwable[] throwableArray98 = notARotationMatrixException97.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str95, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[[NaN, NaN, NaN], [NaN, NaN, NaN], [NaN, NaN, NaN]]");
        org.junit.Assert.assertNotNull(throwableArray98);
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5033082423383954d), 1.0189832222323367d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYZ" + "'", str1, "XYZ");
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-1024.0d), (-0.5740247584530956d), 0.012535694387858676d);
        double double4 = vector3D3.getAlpha();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-3.141032082595334d) + "'", double4 == (-3.141032082595334d));
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray15 = cardanEulerSingularityException13.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray15);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        notARotationMatrixException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException18);
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException16);
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException37 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray36);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException38 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray36);
        java.lang.Throwable[] throwableArray39 = notARotationMatrixException38.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException38);
        java.lang.Throwable[] throwableArray41 = notARotationMatrixException38.getSuppressed();
        java.lang.Object[] objArray42 = notARotationMatrixException38.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.String str46 = cardanEulerSingularityException44.getPattern();
        java.lang.String str47 = cardanEulerSingularityException44.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException50.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException54 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray55 = cardanEulerSingularityException54.getArguments();
        java.lang.String str56 = cardanEulerSingularityException54.getPattern();
        cardanEulerSingularityException50.addSuppressed((java.lang.Throwable) cardanEulerSingularityException54);
        java.lang.Object[] objArray58 = cardanEulerSingularityException54.getArguments();
        java.lang.Throwable[] throwableArray59 = cardanEulerSingularityException54.getSuppressed();
        java.lang.Throwable[] throwableArray60 = cardanEulerSingularityException54.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException61 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray60);
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) notARotationMatrixException61);
        java.lang.String str63 = notARotationMatrixException61.getPattern();
        notARotationMatrixException38.addSuppressed((java.lang.Throwable) notARotationMatrixException61);
        java.lang.String str65 = notARotationMatrixException38.getPattern();
        java.lang.String str66 = notARotationMatrixException38.getPattern();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Euler angles singularity" + "'", str56, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY" + "'", str63, "org.apache.commons.math.geometry.NotARotationMatrixException: ZXY");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-35.0d), (double) (short) 100, (-10.53200198742562d));
        double double4 = vector3D3.getZ();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA1();
        double double16 = vector3D15.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str28 = rotationOrder27.toString();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation25.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D68.subtract(0.0d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(0.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D75.subtract(1.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D88.subtract(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(vector3D63, vector3D65, vector3D68, vector3D90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D90.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D39, vector3D92);
        org.apache.commons.math.geometry.Rotation rotation94 = new org.apache.commons.math.geometry.Rotation(vector3D32, vector3D39);
        double double95 = vector3D39.getZ();
        org.apache.commons.math.geometry.Rotation rotation96 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D11, vector3D15, vector3D39);
        double double97 = rotation96.getQ1();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-10.53200198742562d) + "'", double4 == (-10.53200198742562d));
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ZXY" + "'", str28, "ZXY");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.0d) + "'", double97 == (-0.0d));
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.String str5 = cardanEulerSingularityException3.getPattern();
        java.lang.String str6 = cardanEulerSingularityException3.getPattern();
        java.lang.String str7 = cardanEulerSingularityException3.getPattern();
        java.lang.Throwable[] throwableArray8 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZYZ", (java.lang.Object[]) throwableArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", (java.lang.Object[]) throwableArray8);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Euler angles singularity" + "'", str6, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((-0.44266332810163755d), vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(77.07826156637479d, vector3D13);
        double double15 = vector3D13.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.18504276104906964d) + "'", double15 == (-0.18504276104906964d));
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D4, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D4.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D22, (double) 100.0f, vector3D36);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(vector3D36, 3.2087642143727657d);
        double double40 = vector3D36.getAlpha();
        double double41 = vector3D36.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D36.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.subtract(vector3D45);
        double double52 = vector3D45.getDelta();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D45, 25.06596560241331d);
        double double55 = vector3D45.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D36, vector3D45);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-2.7755575615628914E-19d) + "'", double40 == (-2.7755575615628914E-19d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.30970294454245617d + "'", double41 == 0.30970294454245617d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D56);
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.7598933423794343d), 0.032781202362948854d, 0.27480764008539377d);
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.883932023180614d), 0.1934586046207122d, (-0.9311619336758188d));
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.7683919425686427d), (-0.6181409508714061d), 0.38468101661851206d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        java.lang.String str11 = rotationOrder0.toString();
        java.lang.String str12 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-21.589961725266228d), (-0.09071506555189655d), (double) 1);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4712334693213872d), 0.0d, (-0.525155282243834d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YXZ" + "'", str11, "YXZ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "YXZ" + "'", str12, "YXZ");
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Throwable[] throwableArray12 = cardanEulerSingularityException6.getSuppressed();
        java.lang.Object[] objArray13 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray13);
        java.lang.String str15 = notARotationMatrixException14.getPattern();
        java.lang.Object[] objArray16 = notARotationMatrixException14.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXZ" + "'", str15, "ZXZ");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D11.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D15 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.subtract((double) 0, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D22.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D20.add(2.0d, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D31);
        double[][] doubleArray34 = rotation33.getMatrix();
        double[][] doubleArray35 = rotation33.getMatrix();
        double double36 = rotation33.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder37.getA2();
        java.lang.String str43 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder37.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder37.getA2();
        java.lang.String str46 = rotationOrder37.toString();
        double[] doubleArray47 = rotation33.getAngles(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.5707963267948963d + "'", double36 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZYZ" + "'", str43, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZYZ" + "'", str46, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[3.141592653589793, 1.5707963267948963, 3.141592653589793]");
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D33.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D16.subtract((double) (byte) 10, vector3D38);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, (-0.9202635195876083d));
        double double42 = rotation41.getQ1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA1();
        java.lang.String str52 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder49.getA3();
        double[] doubleArray54 = rotation48.getAngles(rotationOrder49);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder49.getA2();
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation41.applyInverseTo(vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation63.applyTo(rotation68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation63.applyInverseTo(vector3D72);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D73, 0.0d);
        double double76 = vector3D73.getY();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation41.applyTo(vector3D73);
        double double78 = vector3D77.getDelta();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-0.04418623508838506d) + "'", double42 == (-0.04418623508838506d));
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "YXZ" + "'", str50, "YXZ");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "YXZ" + "'", str52, "YXZ");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-0.45647262536381383d) + "'", double76 == (-0.45647262536381383d));
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.958722300123868d + "'", double78 == 0.958722300123868d);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-0.5373843183446426d), 0.479425538604203d, 0.8414289144139094d);
        double double4 = vector3D3.getX();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.5373843183446426d) + "'", double4 == (-0.5373843183446426d));
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        double double2 = vector3D1.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.orthogonal();
        double double4 = vector3D1.getDelta();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str9 = rotationOrder8.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (-2.7755575615628914E-17d), (-0.7683919425686428d), 1.278124800288793d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder8.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D7.add(vector3D23);
        double double25 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D1, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D50.negate();
        double double52 = vector3D51.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.negate();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D51, 2.153573489132929d, vector3D63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D71.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D72.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D72, 0.9920257414636006d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = new org.apache.commons.math.geometry.Vector3D(1.6134380694273582d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D51.subtract(3.1330314046616845d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D1.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.scalarMultiply(0.0d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2.0d + "'", double52 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation();
        double double23 = rotation22.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder24, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation30 = rotation29.revert();
        double[][] doubleArray31 = rotation30.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation22.applyInverseTo(rotation30);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation21.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation21.revert();
        double double36 = rotation21.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double43 = rotation42.getQ2();
        double double44 = rotation42.getAngle();
        double[][] doubleArray45 = rotation42.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation(doubleArray45, 2.4924377791714627d);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation21.applyInverseTo(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.5033082423383954d + "'", double33 == 0.5033082423383954d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZYZ" + "'", str38, "ZYZ");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.5153978362128364d + "'", double43 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 3.1330314046616845d + "'", double44 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(rotation48);
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.44338402347531586d, 25.06596560241331d, 0.43415197535159783d, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation12 = rotation11.revert();
        double double13 = rotation12.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder14.getA2();
        java.lang.String str22 = rotationOrder14.toString();
        java.lang.String str23 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder14.getA1();
        double[] doubleArray26 = rotation12.getAngles(rotationOrder14);
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation5.applyTo(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.496669722445646d + "'", double13 == 0.496669722445646d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.9867228626928285, -0.5707963267948966, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 'a', (double) (short) 100, 100.0022140464598d);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray12);
        java.lang.Throwable[] throwableArray14 = notARotationMatrixException13.getSuppressed();
        java.lang.Object[] objArray15 = notARotationMatrixException13.getArguments();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray22);
        java.lang.Throwable[] throwableArray24 = notARotationMatrixException23.getSuppressed();
        java.lang.Object[] objArray25 = notARotationMatrixException23.getArguments();
        java.lang.Object[] objArray26 = notARotationMatrixException23.getArguments();
        notARotationMatrixException13.addSuppressed((java.lang.Throwable) notARotationMatrixException23);
        java.lang.Throwable[] throwableArray28 = notARotationMatrixException13.getSuppressed();
        java.lang.String str29 = notARotationMatrixException13.getPattern();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[[-0.8957739585776037, -0.32734291742989, 0.30072517277856514], [0.09144914655059726, -0.7977721804575484, -0.5959837260220924], [0.43500122842283684, -0.506365641109759, 0.7445587745598916]]");
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[[-0.4533522819483131, 0.29393586065447347, -0.8414709848078965], [-0.5440211108893698, -0.8390715290764524, -2.7755575615628914E-17], [-0.7060543458962301, 0.45777797993636393, 0.54030230586814]]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[[-0.4533522819483131, 0.29393586065447347, -0.8414709848078965], [-0.5440211108893698, -0.8390715290764524, -2.7755575615628914E-17], [-0.7060543458962301, 0.45777797993636393, 0.54030230586814]]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: XZX" + "'", str29, "org.apache.commons.math.geometry.NotARotationMatrixException: XZX");
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(1.8027186956254748d, 3.138441573174606d, (double) 10);
        double double4 = vector3D3.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.negate();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.634830050536223d + "'", double4 == 10.634830050536223d);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.8846219209894443d, 1.278124800288793d, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation10 = rotation9.revert();
        double[][] doubleArray11 = rotation10.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(doubleArray11, (-13.63641445253962d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotation10);
        org.junit.Assert.assertNotNull(doubleArray11);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        double double25 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA1();
        double[] doubleArray29 = rotation5.getAngles(rotationOrder26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder26.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.10830291305827339d + "'", double25 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-2.443477444009971, 0.7897244441795649, -1.8726811172150744]");
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder2.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D16, (double) 100.0f, vector3D24, (double) (short) -1, vector3D44);
        double double52 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        double double67 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D64, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D16, (double) (byte) 10, vector3D59, (double) (short) -1, vector3D64, (double) ' ', vector3D76);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D76);
        double[][] doubleArray83 = rotation82.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(doubleArray83, 0.5153978362128364d);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(doubleArray83, 0.5277475438952628d);
        double double88 = rotation87.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation87.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(2.042108152999217d, vector3D7, (-0.5107925913326916d), vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.4612647571211318d, vector3D90);
        double double92 = vector3D90.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.7071067811865476d + "'", double88 == 0.7071067811865476d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2.5529007443319087d + "'", double92 == 2.5529007443319087d);
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D7, 1.1307230243164947d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation11.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation11.getAxis();
        org.apache.commons.math.geometry.Rotation rotation14 = rotation4.applyTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation15 = rotation14.revert();
        double[][] doubleArray16 = rotation14.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXY" + "'", str6, "ZXY");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertNotNull(doubleArray16);
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        double double42 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D11.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D3, 100.0022140464598d);
        double double33 = rotation32.getQ2();
        double double34 = rotation32.getQ2();
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.2551713383813414d) + "'", double33 == (-0.2551713383813414d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-0.2551713383813414d) + "'", double34 == (-0.2551713383813414d));
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.1144191065275573d, 0.0d, 0.9685018602424225d, 0.4196906653578127d, false);
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) '4', 2.0d, (double) (byte) 100);
        java.lang.String str10 = rotationOrder5.toString();
        double[] doubleArray11 = rotation4.getAngles(rotationOrder5);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation4.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        java.lang.String str15 = rotationOrder13.toString();
        double[] doubleArray16 = rotation4.getAngles(rotationOrder13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, 0.8708459440388457d, 0.017118832690706146d, 0.41956834513335173d);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(doubleArray22, 0.21811985136516898d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZYZ" + "'", str10, "ZYZ");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[1.7345175425633084, 1.9999999999999998, -0.5309649148733835]");
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "XYZ" + "'", str15, "XYZ");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-2.005116664603875, -0.14875510171395484, 0.9711919943660552]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray22);
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), 3.2087642143727657d, 1.278124800288793d, (-0.45973278686101987d), true);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        double double42 = rotation39.getQ1();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation39.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation43.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA2();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder45.getA2();
        java.lang.String str53 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation44.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation5.applyTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation5.revert();
        double double66 = rotation5.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.subtract(vector3D70);
        double double77 = vector3D70.getY();
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str81 = rotationOrder80.toString();
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder80.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D70.subtract((-0.2551713383813414d), vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation5.applyInverseTo(vector3D83);
        double double87 = vector3D83.getY();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.13182419629852823d) + "'", double6 == (-0.13182419629852823d));
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXZ" + "'", str53, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-0.04186261157392243d) + "'", double66 == (-0.04186261157392243d));
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "XZX" + "'", str81, "XZX");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        double double13 = vector3D10.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.add(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D56.subtract(1.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D69.subtract(vector3D70);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D44, vector3D46, vector3D49, vector3D71);
        double double73 = vector3D71.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D71.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D76.subtract(0.0d, vector3D79);
        double double82 = vector3D79.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D79.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D83.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D71.add(vector3D84);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, Double.NaN);
        double double88 = vector3D85.getY();
        double double89 = vector3D85.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D94 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686427d), 0.6205445805637456d, 0.45973278686101987d);
        org.apache.commons.math.geometry.Vector3D vector3D95 = new org.apache.commons.math.geometry.Vector3D((-0.6181409508714061d), vector3D4, 0.45973278686101987d, vector3D19, 0.9649660284921133d, vector3D85, 0.6918710786346925d, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D4.scalarMultiply(268.4709597337993d);
        double double98 = vector3D97.getZ();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3.141592653589793d + "'", double73 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray28 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.String str34 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException30.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", objArray47);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException48);
        java.lang.Object[] objArray50 = notARotationMatrixException5.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D8.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D21.subtract(1.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D36.add((-1.0d), vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D10, (double) 100.0f, vector3D18, (double) (short) -1, vector3D38);
        double double46 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D58, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D70.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D66, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D10, (double) (byte) 10, vector3D53, (double) (short) -1, vector3D58, (double) ' ', vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyTo(vector3D10);
        org.apache.commons.math.geometry.Rotation rotation77 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation5.getAxis();
        double double79 = rotation5.getAngle();
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.012535694387858676d, (-0.5373843183446426d), 0.9055246760900035d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D3.scalarMultiply(0.8623079947860166d);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.normalize();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 0.0d);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation17.getAxis();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), 3.2087642143727657d, 1.278124800288793d, (-0.45973278686101987d), true);
        double double26 = rotation25.getQ3();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation32.applyTo(rotation44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation59 = rotation52.applyInverseTo(rotation58);
        double double60 = rotation59.getQ2();
        org.apache.commons.math.geometry.Rotation rotation61 = rotation32.applyInverseTo(rotation59);
        double double62 = rotation59.getQ1();
        org.apache.commons.math.geometry.Rotation rotation63 = rotation59.revert();
        org.apache.commons.math.geometry.Rotation rotation64 = rotation63.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder65.getA2();
        java.lang.String str73 = rotationOrder65.toString();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation64.applyInverseTo(rotation82);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation25.applyTo(rotation64);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation84.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D19.subtract(vector3D85);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.13182419629852823d) + "'", double26 == (-0.13182419629852823d));
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXZ" + "'", str73, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.Rotation rotation48 = rotation6.applyTo(rotation47);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation47.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyInverseTo(rotation62);
        double double64 = rotation63.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D65.subtract(1.0d, vector3D75);
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D84.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D88 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D80, vector3D84);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D75, vector3D80);
        org.apache.commons.math.geometry.Rotation rotation90 = rotation89.revert();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation63.applyTo(rotation90);
        org.apache.commons.math.geometry.RotationOrder rotationOrder92 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str93 = rotationOrder92.toString();
        double[] doubleArray94 = rotation90.getAngles(rotationOrder92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotationOrder92.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D(0.5738046983621651d, vector3D49, 0.7316402208068788d, vector3D95);
        double double97 = vector3D49.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D49.normalize();
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotation48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(rotationOrder92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "XYX" + "'", str93, "XYX");
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + (-0.9271898805213659d) + "'", double97 == (-0.9271898805213659d));
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str17 = rotationOrder16.toString();
        java.lang.String str18 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA1();
        double[] doubleArray20 = rotation5.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 1.8350138259443276d, 0.24125648351783702d, 6.3007480475286926d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (-1.0d), 98.0d);
        double double35 = rotation34.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation34.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA1();
        java.lang.String str41 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder38.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D37.subtract(vector3D43);
        double double45 = vector3D44.getY();
        org.apache.commons.math.geometry.Vector3D vector3D50 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D51);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D51, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.normalize();
        double double57 = vector3D55.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D55, (double) 10.0f);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder60.getA3();
        java.lang.String str64 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder60.getA3();
        double double70 = vector3D69.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D55, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(0.8605691650229957d, 2.6575295970997246d);
        double double75 = org.apache.commons.math.geometry.Vector3D.angle(vector3D69, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D44.add(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D28.add(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XYX" + "'", str17, "XYX");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.6654428555205447d + "'", double35 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "YXZ" + "'", str39, "YXZ");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "YXZ" + "'", str41, "YXZ");
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-31.785078690341738d) + "'", double45 == (-31.785078690341738d));
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.5707963267948966d) + "'", double57 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.5707963267948966d + "'", double70 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2.306492779467043d + "'", double75 == 2.306492779467043d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, (double) (short) 10, 9.689694441743994d, 0.5738046983621651d, false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D8 = rotation5.applyInverseTo(vector3D7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        double double40 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        double double55 = vector3D52.getDelta();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(vector3D52, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder59 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder59.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D64.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D60, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D4, (double) (byte) 10, vector3D47, (double) (short) -1, vector3D52, (double) ' ', vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D64.normalize();
        double double71 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D64.scalarMultiply(0.7212688287676877d);
        double double74 = vector3D64.getX();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply(0.005259088864518715d);
        double double15 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D8, vector3D12);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D8, (-2.7755575615628914E-19d));
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: YZX", (java.lang.Object[]) doubleArray18);
        java.lang.String str20 = notARotationMatrixException19.toString();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YZX" + "'", str20, "org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YZX");
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.String str5 = cardanEulerSingularityException2.getPattern();
        java.lang.Object[] objArray6 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException2.getSuppressed();
        java.lang.Object[] objArray8 = cardanEulerSingularityException2.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", objArray8);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Euler angles singularity" + "'", str5, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.XZX;
        double[] doubleArray65 = rotation29.getAngles(rotationOrder64);
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, 10.0d, 1.8027186956254748d, (-0.4785186797839096d));
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder64.getA1();
        java.lang.String str71 = rotationOrder64.toString();
        java.lang.String str72 = rotationOrder64.toString();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[2.5707963267948966, 2.566370614359173, -1.5707963267948968]");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZX" + "'", str71, "XZX");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "XZX" + "'", str72, "XZX");
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.8118542883431961d, 0.4953369524939837d, (-0.09071506555189655d), 0.039820129394623725d, true);
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D((double) (-1), vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.add((-1.0d), vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract((double) (-1L), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D8.subtract(0.26237485370392877d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D38.subtract(64.0d, vector3D44);
        double double48 = vector3D47.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D47.scalarMultiply(2.211586350526381d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXY" + "'", str36, "ZXY");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-3.043623366062519d) + "'", double48 == (-3.043623366062519d));
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        double double53 = rotation11.getAngle();
        double double54 = rotation11.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.0678198605632665d + "'", double53 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.10830291305827339d + "'", double54 == 0.10830291305827339d);
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        org.apache.commons.math.geometry.Rotation rotation0 = new org.apache.commons.math.geometry.Rotation();
        double double1 = rotation0.getQ2();
        double double2 = rotation0.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D4.subtract(1.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.add((-1.0d), vector3D21);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D19, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D19);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D19, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA2();
        double[] doubleArray35 = rotation32.getAngles(rotationOrder33);
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, 3.138441573174606d, (double) 100, 0.9988929054468333d);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder33.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder33.getA2();
        double[] doubleArray42 = rotation0.getAngles(rotationOrder33);
        java.lang.String str43 = rotationOrder33.toString();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[1.0, -0.0, -0.0]");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "XZY" + "'", str43, "XZY");
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder0.getA3();
        java.lang.Class<?> wildcardClass18 = vector3D17.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.12637150995481888d, 13.903082980735348d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D9.subtract(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-1.0d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D9.add(vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D77.negate();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D3.add(vector3D77);
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder82.getA2();
        java.lang.String str90 = rotationOrder82.toString();
        java.lang.String str91 = rotationOrder82.toString();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotationOrder82.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D95 = vector3D94.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D96 = vector3D81.add(vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D96.normalize();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ZXY" + "'", str90, "ZXY");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ZXY" + "'", str91, "ZXY");
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA2();
        double[] doubleArray19 = rotation11.getAngles(rotationOrder16);
        java.lang.String str20 = rotationOrder16.toString();
        java.lang.String str21 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 100.0d, (-1.496165300657198d), 0.9896911069000627d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-0.657879182722611, 0.47402663624573416, 1.8024949709136886]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "XZY" + "'", str20, "XZY");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "XZY" + "'", str21, "XZY");
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (-1.0d), (-3.110368056629538d), (double) '4');
        double[] doubleArray32 = rotation26.getAngles(rotationOrder27);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder27.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder27.getA1();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, -0.0, 0.5309649148733835]");
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.23606797749979d, (double) (-1L), (-0.7525070711305497d), (double) (byte) 1, false);
        double double6 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D25, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation33.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str37 = rotationOrder36.toString();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder36.getA3();
        double double39 = vector3D38.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        double double48 = vector3D42.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.scalarMultiply(100.0d);
        double double58 = vector3D57.getX();
        double double59 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D50.add(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotation7.applyTo(vector3D50);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.7525070711305497d) + "'", double6 == (-0.7525070711305497d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ZXY" + "'", str37, "ZXY");
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D24.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D24.negate();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double double35 = rotation34.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str46 = rotationOrder45.toString();
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder45.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D47.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.scalarMultiply(100.0d);
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), vector3D38, (-143.96727020572638d), vector3D51);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str56 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder55.getA3();
        java.lang.String str59 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder55.getA3();
        double double65 = vector3D64.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D38, 2.0985845029684933d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation34.applyInverseTo(vector3D38);
        double double68 = org.apache.commons.math.geometry.Vector3D.angle(vector3D28, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.orthogonal();
        double double70 = vector3D67.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.scalarMultiply(1.0708381896608017d);
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D67, 0.7683919425686428d);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation74.revert();
        double double76 = rotation74.getQ0();
        double[][] doubleArray77 = rotation74.getMatrix();
        double double78 = rotation74.getQ3();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2.0d + "'", double25 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.5262902691431163d) + "'", double35 == (-0.5262902691431163d));
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ZXY" + "'", str46, "ZXY");
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ZXY" + "'", str56, "ZXY");
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ZXY" + "'", str59, "ZXY");
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.5707963267948966d + "'", double65 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.505260009229146d + "'", double68 == 1.505260009229146d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.9999999999999999d + "'", double70 == 0.9999999999999999d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.9271000934009814d + "'", double76 == 0.9271000934009814d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-0.3391017442395581d) + "'", double78 == (-0.3391017442395581d));
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D5.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D1, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D11.subtract(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D13, (double) 100.0f, vector3D21, (double) (short) -1, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D5.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D50.subtract(1.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D63.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D65.add((-1.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D5.add(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder76.getA3();
        double double82 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D5, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D5.scalarMultiply((double) 1);
        double double85 = vector3D5.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray28 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException30.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException34 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray35 = cardanEulerSingularityException34.getArguments();
        java.lang.String str36 = cardanEulerSingularityException34.getPattern();
        cardanEulerSingularityException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Object[] objArray38 = cardanEulerSingularityException34.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray43);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException46 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray47 = cardanEulerSingularityException46.getArguments();
        java.lang.Throwable[] throwableArray48 = cardanEulerSingularityException46.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException50 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray51 = cardanEulerSingularityException50.getArguments();
        java.lang.String str52 = cardanEulerSingularityException50.getPattern();
        cardanEulerSingularityException46.addSuppressed((java.lang.Throwable) cardanEulerSingularityException50);
        notARotationMatrixException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException46);
        cardanEulerSingularityException34.addSuppressed((java.lang.Throwable) notARotationMatrixException44);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException34);
        java.lang.Throwable[] throwableArray57 = notARotationMatrixException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException59 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray60 = cardanEulerSingularityException59.getArguments();
        java.lang.Object[] objArray61 = cardanEulerSingularityException59.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException63 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str64 = cardanEulerSingularityException63.getPattern();
        java.lang.String str65 = cardanEulerSingularityException63.getPattern();
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException63.getSuppressed();
        cardanEulerSingularityException59.addSuppressed((java.lang.Throwable) cardanEulerSingularityException63);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException59);
        java.lang.Object[] objArray69 = cardanEulerSingularityException59.getArguments();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Euler angles singularity" + "'", str52, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Euler angles singularity" + "'", str64, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Euler angles singularity" + "'", str65, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        double double47 = rotation11.getQ3();
        double double48 = rotation11.getQ1();
        double double49 = rotation11.getQ0();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(1.5529693675570133d, 0.20237792277063205d, 2.3797237454319817d, 0.46903508512661635d, true);
        org.apache.commons.math.geometry.Rotation rotation56 = rotation11.applyInverseTo(rotation55);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.10830291305827339d + "'", double47 == 0.10830291305827339d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.3691205271584663d + "'", double48 == 0.3691205271584663d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.5114629390766603d + "'", double49 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotation56);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 1.0f, (double) (short) 1, 3.141592653589793d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation10.getAxis();
        double double12 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation10.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.42073549240394825d) + "'", double12 == (-0.42073549240394825d));
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D15.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D13.add(2.0d, vector3D24);
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D28.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D41.subtract(1.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D56.add((-1.0d), vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D30, (double) 100.0f, vector3D38, (double) (short) -1, vector3D58);
        double double66 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D25.subtract(vector3D30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str69 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder68.getA3();
        java.lang.String str72 = rotationOrder68.toString();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder68.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder68.getA2();
        double double79 = vector3D78.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D25.add(vector3D80);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ZXY" + "'", str69, "ZXY");
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ZXY" + "'", str72, "ZXY");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation5.applyInverseTo(vector3D14);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D15, 0.0d);
        double[][] doubleArray18 = rotation17.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotation17.getAxis();
        double[][] doubleArray20 = rotation17.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation36.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation27.applyTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation11.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation52.revert();
        double double54 = rotation53.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation53.getAxis();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation53.revert();
        double double57 = rotation56.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.005022802342728373d + "'", double54 == 0.005022802342728373d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-0.03563598374487637d) + "'", double57 == (-0.03563598374487637d));
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D62.subtract(0.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D55.subtract(1.0d, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.negate();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D51.add((double) 0.0f, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((-1.0d), vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA1();
        java.lang.String str75 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder72.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder72.getA3();
        double double78 = vector3D77.getDelta();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D77);
        double[][] doubleArray80 = rotation79.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(doubleArray80, 0.0016579344306793635d);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "YXZ" + "'", str73, "YXZ");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "YXZ" + "'", str75, "YXZ");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.5707963267948966d + "'", double78 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        double[][] doubleArray25 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(doubleArray25, 2.2112625254810094d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        java.lang.String str31 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double36 = rotation35.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double43 = rotation42.getQ3();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyInverseTo(rotation42);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation27.applyInverseTo(rotation35);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str48 = rotationOrder47.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        java.lang.String str50 = rotationOrder47.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder47.getA3();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (-0.9202635195876083d), (double) 1.0f, (-0.4212430843250595d));
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (-82.22900984949234d), 0.6174075626500691d, 0.5440576690558799d);
        double[] doubleArray62 = rotation45.getAngles(rotationOrder47);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZXY" + "'", str31, "ZXY");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.2112625254810094d + "'", double36 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "YXZ" + "'", str48, "YXZ");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "YXZ" + "'", str50, "YXZ");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-3.0186597754638904, -1.2733504330538343, -1.3591041973470364]");
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D6.subtract(1.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D21.add((-1.0d), vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D3.subtract(vector3D21);
        double double31 = vector3D21.getZ();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(vector3D21, 0.20136155393983624d);
        double double34 = rotation33.getAngle();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation();
        double double36 = rotation35.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        double[][] doubleArray44 = rotation43.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation35.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D48.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.normalize();
        double double51 = vector3D49.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str53 = rotationOrder52.toString();
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder52.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D49.subtract(vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D49.negate();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotation45.applyTo(vector3D57);
        double[][] doubleArray59 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(doubleArray59, 0.039971493139474686d);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation33.applyInverseTo(rotation61);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.20136155393983624d + "'", double34 == 0.20136155393983624d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ZXY" + "'", str53, "ZXY");
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(rotation62);
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation46.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation11.applyTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation5.applyInverseTo(rotation52);
        double double55 = rotation5.getQ1();
        double[][] doubleArray56 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(doubleArray56, (double) 1L);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException59 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYX", (java.lang.Object[]) doubleArray56);
        java.lang.Object[] objArray60 = notARotationMatrixException59.getArguments();
        java.lang.Object[] objArray61 = notARotationMatrixException59.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.45973278686101987d) + "'", double55 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[[-0.4533522819483131, 0.29393586065447347, -0.8414709848078965], [-0.5440211108893698, -0.8390715290764524, -2.7755575615628914E-17], [-0.7060543458962301, 0.45777797993636393, 0.54030230586814]]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[[-0.4533522819483131, 0.29393586065447347, -0.8414709848078965], [-0.5440211108893698, -0.8390715290764524, -2.7755575615628914E-17], [-0.7060543458962301, 0.45777797993636393, 0.54030230586814]]");
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        double[][] doubleArray13 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation15.revert();
        double[][] doubleArray17 = rotation15.getMatrix();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(doubleArray17);
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation66.applyTo(rotation72);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder74.getA1();
        double[] doubleArray82 = rotation66.getAngles(rotationOrder74);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (-8.432620648546186d), (-0.6747691995449356d), 10000.0d);
        double double87 = rotation86.getQ2();
        org.apache.commons.math.geometry.Rotation rotation88 = rotation86.revert();
        org.apache.commons.math.geometry.Rotation rotation89 = rotation88.revert();
        double double90 = rotation88.getQ2();
        org.apache.commons.math.geometry.Rotation rotation91 = rotation88.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[NaN, NaN, NaN]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-0.3987149654648925d) + "'", double87 == (-0.3987149654648925d));
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-0.3987149654648925d) + "'", double90 == (-0.3987149654648925d));
        org.junit.Assert.assertNotNull(rotation91);
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D10 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        double double12 = vector3D11.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation7.applyTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(vector3D13, 0.8676384700609876d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.012932544327696d + "'", double6 == 3.012932544327696d);
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.0d) + "'", double12 == (-0.0d));
        org.junit.Assert.assertNotNull(vector3D13);
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D52);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation53.getAxis();
        double double56 = rotation53.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) '#', (double) 0L, (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D60.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.subtract(vector3D65);
        double double72 = vector3D65.getY();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str76 = rotationOrder75.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder75.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D74, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, (-0.05546668618914311d), (-0.9132779260310951d));
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D82, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D60, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double93 = vector3D92.getX();
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D89.subtract(0.0d, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D95 = rotation88.applyTo(vector3D89);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation53.applyTo(rotation88);
        double double97 = rotation53.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7071067811865476d + "'", double54 == 0.7071067811865476d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ZXY" + "'", str76, "ZXY");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.0d + "'", double93 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(vector3D95);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 1.5707963267948963d + "'", double97 == 1.5707963267948963d);
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D24.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.add(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D54.subtract(0.5114629390766603d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D71.subtract(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D64.add((double) '4', vector3D79);
        double double81 = vector3D64.getDelta();
        double double82 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D64.negate();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(0.031239833430268277d, vector3D83);
        double double85 = vector3D84.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-0.0d) + "'", double85 == (-0.0d));
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        double[][] doubleArray5 = rotation4.getMatrix();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA3();
        double[] doubleArray25 = rotation17.getAngles(rotationOrder18);
        double[] doubleArray26 = rotation4.getAngles(rotationOrder18);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (-0.27440934445837123d), (-3.0494479105138855E-17d), (-0.4741598817790379d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.45973278686101987d) + "'", double6 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZYZ" + "'", str8, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-2.7821169184142103, 0.0486473719503699, -0.5289443676689787]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-2.804640934446484, 0.47549431265859154, 0.9176116102223566]");
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D11, vector3D16);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        double double54 = vector3D53.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D58.subtract(0.0d, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D57, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D53, 0.7604311401305615d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D53.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(vector3D36, vector3D53);
        double double70 = vector3D36.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation26.applyTo(vector3D36);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder73.getA3();
        double double75 = vector3D74.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D74.normalize();
        double double77 = vector3D74.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder78 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str79 = rotationOrder78.toString();
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder78.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D82.scalarMultiply(100.0d);
        double double85 = vector3D84.getAlpha();
        double double86 = vector3D84.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D74.add(vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D88 = new org.apache.commons.math.geometry.Vector3D(0.0952905926857031d, vector3D36, 0.9526602247641617d, vector3D84);
        double double89 = vector3D36.getX();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.5707963267948966d + "'", double70 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ZXY" + "'", str79, "ZXY");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.5707963267948966d + "'", double85 == 1.5707963267948966d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-0.0d) + "'", double89 == (-0.0d));
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(0.5153978362128364d, 0.5629528985411225d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D(2.1475455860530537d, vector3D4);
        double double6 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D7, 0.005259088864518715d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, 10.0d, 1.8228860923754615d, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA2();
        double double19 = vector3D18.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.negate();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D18.negate();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D7.subtract((-8.432620648546186d), vector3D21);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation24.revert();
        org.apache.commons.math.geometry.Rotation rotation27 = rotation12.applyTo(rotation26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation39.applyTo(vector3D41);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyInverseTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation48.applyTo(rotation60);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation39.applyTo(rotation60);
        double double64 = rotation63.getAngle();
        double double65 = rotation63.getQ0();
        org.apache.commons.math.geometry.Rotation rotation71 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.5277475438952628d, 143.7738589649261d, (-0.9202635195876083d), false);
        double double72 = rotation71.getQ0();
        org.apache.commons.math.geometry.Rotation rotation73 = rotation63.applyTo(rotation71);
        double double74 = rotation73.getQ3();
        org.apache.commons.math.geometry.Rotation rotation75 = rotation12.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder76.getA1();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder82 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder82.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder82, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation88 = rotation81.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation87.revert();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation87.applyInverseTo(rotation95);
        double double97 = rotation87.getQ1();
        double double98 = rotation87.getAngle();
        org.apache.commons.math.geometry.Rotation rotation99 = rotation73.applyInverseTo(rotation87);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotation27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2.1475455860530537d + "'", double64 == 2.1475455860530537d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-0.476811323902129d) + "'", double65 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-54.26257800088148d) + "'", double74 == (-54.26257800088148d));
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(rotationOrder82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.3691205271584663d + "'", double97 == 0.3691205271584663d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2.0678198605632665d + "'", double98 == 2.0678198605632665d);
        org.junit.Assert.assertNotNull(rotation99);
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ1();
        double[][] doubleArray16 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str18 = rotationOrder17.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder17.getA3();
        double double23 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D24.subtract(1.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D41.subtract(0.0d, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D39.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(vector3D41, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation49.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str52 = rotationOrder51.toString();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder51.getA3();
        double[] doubleArray54 = rotation49.getAngles(rotationOrder51);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, 1.5707963267948966d, 0.5496694388267763d, 0.23869349855450123d);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder51.getA2();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (-0.8903223073341484d), (-1.1415926535897933d), (-0.05647313889782858d));
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder51.getA3();
        double double65 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D22, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation5.applyInverseTo(vector3D64);
        org.apache.commons.math.geometry.RotationOrder rotationOrder67 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder67.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder67.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D66.subtract(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZYZ" + "'", str18, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ZXY" + "'", str52, "ZXY");
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-0.0, -0.5309649148733837, -0.0]");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.8414709848078965d, 1.8600586893795792d, (-0.11083328512893442d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation12.revert();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(32.0d, 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(2.8156024785781764d, 0.8775825618903728d, (-0.9202635195876083d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D24.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D63.subtract(1.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D76.subtract(vector3D77);
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D51, vector3D53, vector3D56, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D78.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D80);
        org.apache.commons.math.geometry.RotationOrder rotationOrder83 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder83.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder83.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D27.subtract((double) 0, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D86.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D87.scalarMultiply(0.42487699275774343d);
        double double90 = vector3D87.getZ();
        double double91 = org.apache.commons.math.geometry.Vector3D.angle(vector3D20, vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D16.subtract(vector3D87);
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation13.applyInverseTo(vector3D16);
        double double94 = rotation13.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(rotationOrder83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.4242135627991309d + "'", double91 == 0.4242135627991309d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-0.3966058266990962d) + "'", double94 == (-0.3966058266990962d));
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        double[][] doubleArray16 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException23 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray22);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException25 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray26 = cardanEulerSingularityException25.getArguments();
        java.lang.Throwable[] throwableArray27 = cardanEulerSingularityException25.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.String str31 = cardanEulerSingularityException29.getPattern();
        cardanEulerSingularityException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        notARotationMatrixException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException25);
        java.lang.Object[] objArray34 = notARotationMatrixException23.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.String str42 = cardanEulerSingularityException40.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.Object[] objArray44 = cardanEulerSingularityException40.getArguments();
        notARotationMatrixException23.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        java.lang.String str47 = notARotationMatrixException17.getPattern();
        java.lang.String str48 = notARotationMatrixException17.getPattern();
        java.lang.Throwable[] throwableArray49 = notARotationMatrixException17.getSuppressed();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Euler angles singularity" + "'", str31, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        double double45 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D38, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        double double53 = vector3D50.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D54.orthogonal();
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D58, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation60.applyTo(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D55.add(0.8390715290764523d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D46.add(vector3D55);
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(vector3D55, (-0.009999666686665238d));
        double double69 = rotation68.getQ3();
        double double70 = rotation68.getQ1();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 98.0d + "'", double45 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.0d) + "'", double69 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder8.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D11.scalarMultiply(0.005259088864518715d);
        double double14 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D11);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-2.7755575615628914E-19d));
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 100, (double) (short) 10, (double) 10L);
        double double23 = rotation22.getQ3();
        double double24 = rotation22.getAngle();
        org.apache.commons.math.geometry.Rotation rotation25 = rotation16.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation34.revert();
        double[][] doubleArray37 = rotation34.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation22.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation22.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-0.8662089827552298d) + "'", double23 == (-0.8662089827552298d));
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.4924377791714627d + "'", double24 == 2.4924377791714627d);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZYZ" + "'", str27, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotation39);
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        double double60 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D57.orthogonal();
        double double62 = org.apache.commons.math.geometry.Vector3D.angle(vector3D53, vector3D57);
        double double63 = vector3D57.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D57.subtract(1.5664650742126642d, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder69.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D((-0.09618196756046529d), vector3D57, 1.2246467991473532E-16d, vector3D72);
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(vector3D72, (-0.03726554125228992d));
        double double76 = rotation75.getAngle();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.03726554125228992d + "'", double76 == 0.03726554125228992d);
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D39.subtract(1.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D52.subtract(vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.add((-1.0d), vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D28, (double) 100.0f, vector3D36, (double) (short) -1, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D20.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        double double72 = vector3D69.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D69.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D73.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D36, (-0.7683919425686428d), vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation5.applyTo(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D36.orthogonal();
        double double78 = vector3D36.getY();
        java.lang.Class<?> wildcardClass79 = vector3D36.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        double double14 = vector3D13.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        double double57 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D26.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D26.subtract((-0.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D13.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D67.negate();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D67, (-2.7755575615628914E-17d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.orthogonal();
        double double81 = org.apache.commons.math.geometry.Vector3D.angle(vector3D66, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D66.negate();
        double double83 = vector3D66.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.5607966601082315d + "'", double81 == 1.5607966601082315d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-100.0d) + "'", double83 == (-100.0d));
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyTo(vector3D25);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        double[] doubleArray30 = rotation9.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA2();
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        double double41 = vector3D38.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D42.orthogonal();
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = new org.apache.commons.math.geometry.Vector3D(100.0d, 0.6654428555205447d, 0.0d);
        double double49 = vector3D48.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D43.subtract(vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D((-35.0d), (double) (short) 100, (-10.53200198742562d));
        double double55 = vector3D54.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D50.add(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D32.subtract((-0.2879033166650653d), vector3D56);
        double double58 = vector3D32.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0022140464598d + "'", double49 == 100.0022140464598d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-10.53200198742562d) + "'", double55 == (-10.53200198742562d));
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D3.subtract(1.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.add((-1.0d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.negate();
        double double28 = vector3D27.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D27.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D27.negate();
        org.apache.commons.math.geometry.Vector3D vector3D37 = new org.apache.commons.math.geometry.Vector3D((double) 100L, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((-0.7683919425686428d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D(Double.NaN, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D39.scalarMultiply(0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) '4', vector3D27, 2.153573489132929d, vector3D39);
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(vector3D42, 788.3701330754276d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = new org.apache.commons.math.geometry.Vector3D(0.5496694388267763d, vector3D42);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str47 = rotationOrder46.toString();
        java.lang.String str48 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D42.subtract(vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str54 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder53.getA1();
        java.lang.String str57 = rotationOrder53.toString();
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder53.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder63.getA1();
        java.lang.String str68 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder63.getA3();
        java.lang.String str70 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D(1.4533522819483131d, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D73 = new org.apache.commons.math.geometry.Vector3D(1.2489510605799288d, vector3D49, 0.7385197090159134d, vector3D60, (-0.8554993623905041d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D72, vector3D74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.0d + "'", double28 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "XYX" + "'", str47, "XYX");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "XYX" + "'", str48, "XYX");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ZYZ" + "'", str54, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ZYZ" + "'", str57, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "XZX" + "'", str64, "XZX");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "XZX" + "'", str68, "XZX");
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "XZX" + "'", str70, "XZX");
        org.junit.Assert.assertNotNull(vector3D71);
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 1, (-1.0d), 98.0d);
        double double5 = rotation4.getQ3();
        double double6 = rotation4.getQ1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(0.9999999999999999d, (double) ' ', (double) (-1.0f), 0.9999999999999999d, true);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation4.applyTo(rotation12);
        double double14 = rotation4.getQ2();
        double double15 = rotation4.getQ0();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation4.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 3.141592653589793d, 1.6134380694273582d, (-0.429556888950007d));
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder17.getA2();
        double[] doubleArray37 = rotation4.getAngles(rotationOrder17);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.6654428555205447d + "'", double5 == 0.6654428555205447d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5277475438952628d + "'", double6 == 0.5277475438952628d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.27480764008539377d + "'", double14 == 0.27480764008539377d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.45072064175038395d + "'", double15 == 0.45072064175038395d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.18989211600994654d, (-0.8500505289787987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D8);
        double double13 = vector3D12.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D((-128.0d), (double) (byte) -1, 1.5707963267948966d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D14, vector3D18);
        double double20 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.5707963267948966d + "'", double13 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.7513137524555883d + "'", double20 == 0.7513137524555883d);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.Object[] objArray15 = cardanEulerSingularityException13.getArguments();
        java.lang.String str16 = cardanEulerSingularityException13.getPattern();
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException13.getSuppressed();
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray20 = notARotationMatrixException11.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException21 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) throwableArray20);
        java.lang.Object[] objArray22 = notARotationMatrixException21.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str29 = cardanEulerSingularityException28.getPattern();
        java.lang.String str30 = cardanEulerSingularityException28.getPattern();
        java.lang.Throwable[] throwableArray31 = cardanEulerSingularityException28.getSuppressed();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        java.lang.String str33 = cardanEulerSingularityException28.getPattern();
        notARotationMatrixException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Euler angles singularity" + "'", str29, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 3.2087642143727657d, 0.9166535214993772d, (-0.5033082423383954d));
        double[][] doubleArray8 = rotation7.getMatrix();
        double double9 = rotation7.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XZX" + "'", str1, "XZX");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.4245706923876936d + "'", double9 == 0.4245706923876936d);
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation12.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str42 = rotationOrder41.toString();
        double[] doubleArray43 = rotation39.getAngles(rotationOrder41);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation(0.7604311401305615d, 0.5114629390766603d, (double) 1, 0.5277475438952628d, true);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation39.applyTo(rotation49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str52 = rotationOrder51.toString();
        double[] doubleArray53 = rotation39.getAngles(rotationOrder51);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation39.revert();
        double double55 = rotation54.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "XYX" + "'", str52, "XYX");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        double double11 = vector3D4.getY();
        double double12 = vector3D4.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D4.normalize();
        double double15 = vector3D4.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(1.981403820949318d, vector3D4);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder17.getA3();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D4, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str27 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 0, (double) (short) 1, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder26.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D4.add(vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D(1.278124800288793d, 0.0d, (double) 100.0f);
        org.apache.commons.math.geometry.Vector3D vector3D43 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468334d, 0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        double double46 = org.apache.commons.math.geometry.Vector3D.angle(vector3D43, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D47 = new org.apache.commons.math.geometry.Vector3D(1.898990647180086d, vector3D39, 0.0027048888022863306d, vector3D44);
        double double48 = vector3D47.getNorm();
        double double49 = vector3D47.getY();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D4.subtract(vector3D47);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.080456683454306d + "'", double46 == 1.080456683454306d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 189.91460965702052d + "'", double48 == 189.91460965702052d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D50);
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder5.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder11.getA1();
        double double17 = vector3D16.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation10.applyInverseTo(vector3D16);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation10.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray21 = rotation19.getAngles(rotationOrder20);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA3();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation();
        double double28 = rotation27.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation35 = rotation34.revert();
        double[][] doubleArray36 = rotation35.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation37 = rotation27.applyInverseTo(rotation35);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation26.applyTo(rotation37);
        org.apache.commons.math.geometry.Rotation rotation40 = rotation26.revert();
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((-0.4245292707565737d), (-0.6985763017371048d), 0.15135620392549756d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation40.applyInverseTo(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D45);
        double double47 = vector3D45.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D50.subtract(vector3D52);
        double double59 = vector3D52.getY();
        double double60 = vector3D52.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D52);
        double double62 = vector3D61.getAlpha();
        double double63 = vector3D61.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D61.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D61.normalize();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXY" + "'", str2, "YXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5033082423383954d + "'", double38 == 0.5033082423383954d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.16554973156658878d), 0.5868281274090159d, (-20.0d), (-0.2254601120448823d), true);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 27.47493735326811d, (double) (byte) 1, (-54.50256143565405d), false);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        double double7 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation5.revert();
        double double9 = rotation8.getQ2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), 3.2087642143727657d, 1.278124800288793d, (-0.45973278686101987d), true);
        double double16 = rotation15.getQ3();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation28.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation22.applyTo(rotation34);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        double double50 = rotation49.getQ2();
        org.apache.commons.math.geometry.Rotation rotation51 = rotation22.applyInverseTo(rotation49);
        double double52 = rotation49.getQ1();
        org.apache.commons.math.geometry.Rotation rotation53 = rotation49.revert();
        org.apache.commons.math.geometry.Rotation rotation54 = rotation53.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder55.getA2();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder55.getA2();
        java.lang.String str63 = rotationOrder55.toString();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder55.getA3();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, 0.6654428555205447d, 2.0678198605632665d, (double) 10);
        org.apache.commons.math.geometry.Rotation rotation73 = rotation54.applyInverseTo(rotation72);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation15.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation76 = rotation8.applyTo(rotation15);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(0.6847869573979007d, 0.8708459440388457d, 0.20136155393983624d, (-0.6010839859747263d), true);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation15.applyInverseTo(rotation82);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-54.50256143565405d) + "'", double7 == (-54.50256143565405d));
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-0.13182419629852823d) + "'", double16 == (-0.13182419629852823d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ZXZ" + "'", str63, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotation73);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(rotation76);
        org.junit.Assert.assertNotNull(rotation83);
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.6654501282278069d), 2.349555921538759d, (double) 0.0f);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, 2.2768386632421973d, 2.3391267197924392d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 100.0d, (double) 0L, 0.9999999999999999d);
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 1.8414709848078965d, (-0.9138363287001148d), 0.428182669496151d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.8726264275373528d), 0.011592107380409594d, 1.0d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D19 = new org.apache.commons.math.geometry.Vector3D(3.141592653589793d, 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D19.scalarMultiply(27.47493735326811d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(4.751667761900033d, vector3D15, (-0.7950876575981559d), vector3D19);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D21);
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation19.revert();
        org.apache.commons.math.geometry.Rotation rotation22 = rotation6.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str24 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder23.getA3();
        double[] doubleArray34 = rotation22.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D36 = new org.apache.commons.math.geometry.Vector3D((-0.7860080026179649d), vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.9202635195876083d) + "'", double7 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-3.0113006777231797, 0.6179476270033603, -1.384127546483252]");
        org.junit.Assert.assertNotNull(vector3D35);
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder10.getA1();
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation9.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(98.0d, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D21.scalarMultiply(0.8347735333400441d);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D25);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D29, (double) 100.0f, vector3D37, (double) (short) -1, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        double double71 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D64, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.negate();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation24.applyInverseTo(vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D73.scalarMultiply((-0.01745789023727825d));
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 98.0d + "'", double71 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.4180214381946339d, (-0.5033082423383954d), 0.7853981633974484d);
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.negate();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(vector3D3, 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation18.applyTo(vector3D20);
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(rotationOrder34, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation40 = rotation33.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation41 = rotation27.applyTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation18.applyTo(rotation39);
        double double43 = rotation42.getAngle();
        double double44 = rotation42.getQ0();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.5277475438952628d, 143.7738589649261d, (-0.9202635195876083d), false);
        double double51 = rotation50.getQ0();
        org.apache.commons.math.geometry.Rotation rotation52 = rotation42.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation6.applyInverseTo(rotation50);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2.1475455860530537d + "'", double43 == 2.1475455860530537d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-0.476811323902129d) + "'", double44 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.String str16 = cardanEulerSingularityException7.getPattern();
        java.lang.Throwable[] throwableArray17 = cardanEulerSingularityException7.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA1();
        double double8 = vector3D7.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((-0.0128604214268008d), 0.5181089967534271d, 0.6205445805637456d, 107.5143815840712d, false);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation16.getAxis();
        double double18 = vector3D17.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D10.add(vector3D17);
        double double20 = vector3D10.getX();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.999971733478154d + "'", double18 == 0.999971733478154d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder3.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D2.subtract(vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        double double15 = vector3D14.getX();
        double double16 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D14.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D14.negate();
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-0.8301452433388954d) + "'", double15 == (-0.8301452433388954d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.5209064011120478d + "'", double16 == 0.5209064011120478d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation12 = rotation6.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation6.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D15.scalarMultiply((-0.07264806010080926d));
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(25.06596560241331d, 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D21.orthogonal();
        double double23 = org.apache.commons.math.geometry.Vector3D.angle(vector3D18, vector3D22);
        double double24 = vector3D22.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D22.scalarMultiply(0.06212723678806353d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.9944693172292339d), vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.6641884054157533d + "'", double23 == 0.6641884054157533d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.6641884054157535d) + "'", double24 == (-0.6641884054157535d));
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D18 = new org.apache.commons.math.geometry.Vector3D(98.0d, (double) (short) -1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation31 = rotation25.applyTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder32.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation25.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D63, vector3D66, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D(0.15135620392549756d, vector3D18, 2.2259647441756316d, vector3D35, (-0.13182419629852823d), vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D14.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D35.scalarMultiply((-0.9388734649021327d));
        double double94 = vector3D93.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-1.0470700763795393d) + "'", double94 == (-1.0470700763795393d));
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException17);
        java.lang.Object[] objArray29 = notARotationMatrixException11.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        java.lang.Object[] objArray46 = notARotationMatrixException35.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException48.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.String str54 = cardanEulerSingularityException52.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        java.lang.Object[] objArray56 = cardanEulerSingularityException52.getArguments();
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        java.lang.Object[] objArray59 = notARotationMatrixException11.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException60 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", objArray59);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException62 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray63 = cardanEulerSingularityException62.getArguments();
        java.lang.Throwable[] throwableArray64 = cardanEulerSingularityException62.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException66 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray67 = cardanEulerSingularityException66.getArguments();
        java.lang.String str68 = cardanEulerSingularityException66.getPattern();
        cardanEulerSingularityException62.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        java.lang.Object[] objArray70 = cardanEulerSingularityException66.getArguments();
        java.lang.Throwable[] throwableArray71 = cardanEulerSingularityException66.getSuppressed();
        java.lang.Object[] objArray72 = cardanEulerSingularityException66.getArguments();
        java.lang.String str73 = cardanEulerSingularityException66.getPattern();
        java.lang.Object[] objArray74 = cardanEulerSingularityException66.getArguments();
        notARotationMatrixException60.addSuppressed((java.lang.Throwable) cardanEulerSingularityException66);
        java.lang.Throwable[] throwableArray76 = notARotationMatrixException60.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Euler angles singularity" + "'", str68, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Euler angles singularity" + "'", str73, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str26 = rotationOrder25.toString();
        java.lang.String str27 = rotationOrder25.toString();
        double[] doubleArray28 = rotation5.getAngles(rotationOrder25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(vector3D46, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation55 = rotation54.revert();
        org.apache.commons.math.geometry.Rotation rotation56 = rotation55.revert();
        double double57 = rotation56.getQ0();
        double double58 = rotation56.getQ1();
        org.apache.commons.math.geometry.Rotation rotation59 = rotation56.revert();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation5.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation56.revert();
        double double62 = rotation56.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation56.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYX" + "'", str26, "XYX");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation55);
        org.junit.Assert.assertNotNull(rotation56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.9649660284921133d + "'", double57 == 0.9649660284921133d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.26237485370392877d + "'", double58 == 0.26237485370392877d);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.4533522819483131d), 24.882865501017502d, (-0.9944340607881093d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 99.14244106273873d, 2.349555921538759d, (-0.8301452433388954d));
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotation16.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "YXZ" + "'", str6, "YXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D18);
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        double double10 = vector3D3.getY();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str14 = rotationOrder13.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder13.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D15.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D17.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D12, vector3D17);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D12, 1.278124800288793d);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(2.677945044588987d, 0.7316279195830642d, 1.8027186956254748d, (-1.122967125689989d), true);
        org.apache.commons.math.geometry.Rotation rotation30 = rotation22.applyTo(rotation29);
        double double31 = rotation29.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double double37 = rotation36.getQ0();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation36.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation51 = rotation44.applyInverseTo(rotation50);
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.Rotation rotation65 = rotation63.revert();
        org.apache.commons.math.geometry.Rotation rotation66 = rotation51.applyTo(rotation65);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation51.getAxis();
        double double68 = rotation51.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation51.getAxis();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation38.applyTo(rotation51);
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation38.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotation29.applyInverseTo(vector3D71);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-0.32127396435635935d) + "'", double31 == (-0.32127396435635935d));
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.24893698743024015d + "'", double37 == 0.24893698743024015d);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotation65);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation24.revert();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D29, (double) 100.0f, vector3D37, (double) (short) -1, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        double double71 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D64, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.negate();
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation24.applyInverseTo(vector3D70);
        double double74 = vector3D73.getDelta();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 98.0d + "'", double71 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1.5707963267948966d) + "'", double74 == (-1.5707963267948966d));
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.6262630129840396d, 1.0214487653061934d, 0.45973278686101987d);
        java.lang.String str9 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "XYX" + "'", str9, "XYX");
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(rotationOrder20, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation32 = rotation25.applyInverseTo(rotation31);
        double double33 = rotation32.getQ2();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation5.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation46 = rotation40.applyTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation5.applyTo(rotation46);
        double double48 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation54.applyTo(rotation66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation81 = rotation74.applyInverseTo(rotation80);
        double double82 = rotation81.getQ2();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation54.applyInverseTo(rotation81);
        double[][] doubleArray84 = rotation54.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation85 = rotation5.applyTo(rotation54);
        org.apache.commons.math.geometry.Rotation rotation86 = rotation54.revert();
        double double87 = rotation86.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(rotation85);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.String str13 = cardanEulerSingularityException1.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException16.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.String str22 = cardanEulerSingularityException20.getPattern();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException20);
        java.lang.Object[] objArray24 = cardanEulerSingularityException20.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray24);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException28.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.String str39 = cardanEulerSingularityException37.getPattern();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException33);
        java.lang.Object[] objArray42 = notARotationMatrixException31.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException44.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException48 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray49 = cardanEulerSingularityException48.getArguments();
        java.lang.String str50 = cardanEulerSingularityException48.getPattern();
        cardanEulerSingularityException44.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.Object[] objArray52 = cardanEulerSingularityException48.getArguments();
        notARotationMatrixException31.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        java.lang.String str54 = cardanEulerSingularityException48.getPattern();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException48);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException57 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray58 = cardanEulerSingularityException57.getArguments();
        java.lang.String str59 = cardanEulerSingularityException57.getPattern();
        java.lang.String str60 = cardanEulerSingularityException57.getPattern();
        cardanEulerSingularityException48.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException57);
        java.lang.Object[] objArray63 = cardanEulerSingularityException57.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Euler angles singularity" + "'", str50, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Euler angles singularity" + "'", str59, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Euler angles singularity" + "'", str60, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(1.8228860923754617d, 0.20776853027692543d, 29.786746287691315d, (-6154.230239175292d), true);
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) -1, (double) (-1L), 0.11078585244669703d);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 100.0022140464598d, 0.5277475438952628d, 2.356194490192345d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation16.getAxis();
        double double18 = rotation16.getQ2();
        org.apache.commons.math.geometry.Rotation rotation19 = rotation16.revert();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation44 = rotation37.applyInverseTo(rotation43);
        org.apache.commons.math.geometry.Rotation rotation45 = rotation31.applyTo(rotation43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        double double59 = rotation58.getQ2();
        org.apache.commons.math.geometry.Rotation rotation60 = rotation31.applyInverseTo(rotation58);
        double double61 = rotation58.getAngle();
        org.apache.commons.math.geometry.Rotation rotation62 = rotation25.applyInverseTo(rotation58);
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation69 = rotation68.revert();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation62.applyTo(rotation69);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D71.scalarMultiply((double) 1);
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotation69.applyTo(vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation16.applyInverseTo(vector3D73);
        org.apache.commons.math.geometry.RotationOrder rotationOrder77 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder77.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder77.getA3();
        double[] doubleArray80 = rotation16.getAngles(rotationOrder77);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-0.8348312433510422d) + "'", double18 == (-0.8348312433510422d));
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-0.062236482098201276, 2.227993655921302, 0.6894062549200685]");
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.14745915310000285d), 0.15059291560189858d, 0.0d, (double) 1L, false);
        double double6 = rotation5.getQ3();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.String str7 = cardanEulerSingularityException5.getPattern();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException5.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.Object[] objArray13 = cardanEulerSingularityException11.getArguments();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray23 = rotation22.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException24 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException25 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException27 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray28 = cardanEulerSingularityException27.getArguments();
        java.lang.Object[] objArray29 = cardanEulerSingularityException27.getArguments();
        java.lang.String str30 = cardanEulerSingularityException27.getPattern();
        java.lang.Object[] objArray31 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray32 = cardanEulerSingularityException27.getSuppressed();
        notARotationMatrixException25.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.String str34 = cardanEulerSingularityException27.getPattern();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException27.getSuppressed();
        cardanEulerSingularityException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException27);
        java.lang.Object[] objArray37 = cardanEulerSingularityException27.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException27.getSuppressed();
        java.lang.String str39 = cardanEulerSingularityException27.toString();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Euler angles singularity" + "'", str7, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str39, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA3();
        double double9 = vector3D8.getZ();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D8, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        double double18 = vector3D15.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D19.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder21.getA3();
        java.lang.String str25 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder21.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder21.getA2();
        double double32 = vector3D31.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D20.subtract(vector3D31);
        double double35 = vector3D20.getZ();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D20, 0.28742517866390543d);
        org.apache.commons.math.geometry.Rotation rotation38 = rotation11.applyTo(rotation37);
        double[][] doubleArray39 = rotation38.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: YZX", (java.lang.Object[]) doubleArray39);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZXY" + "'", str22, "ZXY");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ZXY" + "'", str25, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-0.0d) + "'", double35 == (-0.0d));
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.356194490192345d, 0.5154025582583576d, 2.421447135146937d);
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYX" + "'", str6, "XYX");
        org.junit.Assert.assertNotNull(vector3D7);
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        double double15 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder17.getA1();
        double[] doubleArray24 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.5153978362128364d, 0.9999999999999999d, 2.6575295970997246d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder17.getA2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.9999999999999998, -0.0, -0.9999999999999998]");
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.001575539555759437d), (-0.16624968048555705d), 0.23869349855450123d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.009108443348349987d, 1.505260009229146d, (-0.7683919425686427d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getAngle();
        double double37 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.5277475438952628d, 143.7738589649261d, (-0.9202635195876083d), false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation35.applyTo(rotation43);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), 1.001815201126782d, 0.27767781196347213d, 0.7060543458962301d, false);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str64 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.0013651261847257446d), 0.33931220530841594d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation45.applyTo(vector3D72);
        double double74 = vector3D73.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1475455860530537d + "'", double36 == 2.1475455860530537d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.476811323902129d) + "'", double37 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation23 = rotation16.applyInverseTo(rotation22);
        org.apache.commons.math.geometry.Rotation rotation24 = rotation10.applyTo(rotation22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        double double38 = rotation37.getQ2();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation10.applyInverseTo(rotation37);
        org.apache.commons.math.geometry.RotationOrder rotationOrder40 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder40.getA1();
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder40, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation51 = rotation45.applyTo(rotation50);
        org.apache.commons.math.geometry.Rotation rotation52 = rotation10.applyTo(rotation51);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation4.applyInverseTo(rotation51);
        double double54 = rotation51.getQ3();
        double double55 = rotation51.getQ2();
        double double56 = rotation51.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str58 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder57.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str66 = rotationOrder57.toString();
        java.lang.String str67 = rotationOrder57.toString();
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotationOrder57.getA1();
        double[] doubleArray69 = rotation51.getAngles(rotationOrder57);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder57.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotation23);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotationOrder40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(rotation51);
        org.junit.Assert.assertNotNull(rotation52);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7604311401305615d + "'", double54 == 0.7604311401305615d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.23869349855450123d + "'", double55 == 0.23869349855450123d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.5104165854707956d + "'", double56 == 2.5104165854707956d);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ZXY" + "'", str66, "ZXY");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ZXY" + "'", str67, "ZXY");
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-2.3377985501244307, 0.04141507994075202, -1.2137838708662116]");
        org.junit.Assert.assertNotNull(vector3D70);
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), vector3D9);
        double double12 = vector3D11.getDelta();
        java.lang.Class<?> wildcardClass13 = vector3D11.getClass();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-0.0d) + "'", double12 == (-0.0d));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        double double30 = rotation29.getQ2();
        org.apache.commons.math.geometry.Rotation rotation31 = rotation29.revert();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation31.revert();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D(0.15388504775119377d, 0.428182669496151d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation31.applyInverseTo(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D36, 2.1010670775282114d);
        double double39 = vector3D36.getNorm();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0000000000000002d + "'", double39 == 1.0000000000000002d);
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.0d, (-0.7683919425686427d), 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        java.lang.String str10 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXY" + "'", str2, "YXY");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "YXY" + "'", str10, "YXY");
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) '4', 2.0d, (double) (byte) 100);
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder0.getA1();
        double double9 = vector3D8.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZYZ" + "'", str6, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Object[] objArray4 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) throwableArray5);
        java.lang.Throwable[] throwableArray7 = notARotationMatrixException6.getSuppressed();
        java.lang.Object[] objArray8 = notARotationMatrixException6.getArguments();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray17);
        java.lang.String str20 = notARotationMatrixException19.getPattern();
        java.lang.Object[] objArray21 = notARotationMatrixException19.getArguments();
        java.lang.Throwable[] throwableArray22 = notARotationMatrixException19.getSuppressed();
        notARotationMatrixException6.addSuppressed((java.lang.Throwable) notARotationMatrixException19);
        java.lang.String str24 = notARotationMatrixException19.toString();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: hi!" + "'", str24, "org.apache.commons.math.geometry.NotARotationMatrixException: hi!");
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA3();
        java.lang.String str3 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, 0.0d, (-0.7683919425686427d), 0.6654428555205447d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.6601292325605388d), 1.1071487177940904d, 0.43827018252177924d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation29 = rotation22.applyInverseTo(rotation28);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation28.applyTo(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotation28.getAxis();
        double[][] doubleArray33 = rotation28.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray33);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(doubleArray33, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str38 = rotationOrder37.toString();
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D39, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation42 = rotation36.applyInverseTo(rotation41);
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation36.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str47 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder46.getA3();
        java.lang.String str50 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Rotation rotation54 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder46.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder46.getA2();
        double double57 = vector3D56.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D45.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation36.applyTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((-0.4283476020860808d), vector3D14, (-0.002111444541114544d), vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXY" + "'", str3, "YXY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotation29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZYZ" + "'", str38, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXY" + "'", str47, "ZXY");
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXY" + "'", str50, "ZXY");
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.String str16 = cardanEulerSingularityException7.getPattern();
        java.lang.String str17 = cardanEulerSingularityException7.getPattern();
        java.lang.String str18 = cardanEulerSingularityException7.getPattern();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException7.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Euler angles singularity" + "'", str18, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.3967963165953361d, 0.8214428530345181d, 1.0d);
        java.lang.Class<?> wildcardClass4 = vector3D3.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.26237485370392877d, (-0.14599455657272695d), 0.23869349855450123d, 0.42487699275774343d, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        double double31 = vector3D30.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.subtract(1.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.subtract(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D57, vector3D60, vector3D82);
        double double84 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation6.applyTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024015d, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D90 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D87, vector3D89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.0d + "'", double31 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5707963267948966d + "'", double84 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation5.applyTo(vector3D19);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str26 = rotationOrder25.toString();
        java.lang.String str27 = rotationOrder25.toString();
        double[] doubleArray28 = rotation5.getAngles(rotationOrder25);
        java.lang.String str29 = rotationOrder25.toString();
        java.lang.String str30 = rotationOrder25.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation35 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (-82.22900984949234d), (-0.309799547579416d), 0.7454560335321423d);
        double double36 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(0.8342233605065102d, (-0.5033082423383954d), 3.2087642143727657d, (-0.8414709848078965d), true);
        double double43 = rotation42.getQ2();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation35.applyTo(rotation42);
        double double45 = rotation35.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-0.7683919425686428d) + "'", double13 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "XYX" + "'", str26, "XYX");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "XYX" + "'", str29, "XYX");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XYX" + "'", str30, "XYX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-0.9831961944536497d) + "'", double36 == (-0.9831961944536497d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.9280907887935167d + "'", double43 == 0.9280907887935167d);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.3671629489819288d + "'", double45 == 0.3671629489819288d);
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.9988929054468333d, (-0.9202635195876083d), 0.7071067811865476d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder10.getA1();
        double double16 = vector3D15.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotation9.applyInverseTo(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D((double) 10.0f, (-0.14599455657272695d));
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.add(98.0d, vector3D21);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D26 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        double double27 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str29 = rotationOrder28.toString();
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder28.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Rotation rotation39 = new org.apache.commons.math.geometry.Rotation(98.0d, 100.0d, (double) (-1.0f), (double) 0L, false);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation39.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D32.add((-3.110368056629538d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str43 = rotationOrder42.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA1();
        java.lang.String str45 = rotationOrder42.toString();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder42.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D46.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        double double61 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation53.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA1();
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation75 = rotation68.applyInverseTo(rotation74);
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation74.applyTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation74.getAxis();
        double double79 = org.apache.commons.math.geometry.Vector3D.angle(vector3D62, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D46, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D80.orthogonal();
        double double82 = org.apache.commons.math.geometry.Vector3D.angle(vector3D32, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D3.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(1.182259999018312E-16d, 1.4142135623730951d, 0.056443126183209305d);
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(vector3D83, vector3D87);
        double double89 = vector3D83.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.4054902563068818d + "'", double27 == 1.4054902563068818d);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ZXY" + "'", str29, "ZXY");
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "YXZ" + "'", str43, "YXZ");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "YXZ" + "'", str45, "YXZ");
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.5114629390766603d + "'", double61 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 3.141592653589793d + "'", double82 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1.3894093779958063d + "'", double89 == 1.3894093779958063d);
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.negate();
        double double25 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        double double32 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D23, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D45.add((-1.0d), vector3D74);
        double double76 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D45.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D23.subtract(0.5114629390766603d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D(1.0553984905820601d, 0.8623079947860166d, (-0.9138363287001148d));
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D79.subtract(0.0d, vector3D84);
        double double86 = vector3D79.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-2.0d) + "'", double25 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-2.0d) + "'", double32 == (-2.0d));
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 3.141592653589793d + "'", double86 == 3.141592653589793d);
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, (-0.7525070711305497d), (-0.14599455657272695d));
        double double4 = vector3D3.getZ();
        double double5 = vector3D3.getY();
        double double6 = vector3D3.getX();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.14599455657272695d) + "'", double4 == (-0.14599455657272695d));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.7525070711305497d) + "'", double5 == (-0.7525070711305497d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        java.lang.String str4 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray5 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Object[] objArray7 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray8 = cardanEulerSingularityException1.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str10 = cardanEulerSingularityException1.getPattern();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException1.getSuppressed();
        java.lang.String str12 = cardanEulerSingularityException1.getPattern();
        java.lang.Object[] objArray13 = cardanEulerSingularityException1.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Euler angles singularity" + "'", str4, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Euler angles singularity" + "'", str12, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder6.getA2();
        java.lang.String str14 = rotationOrder6.toString();
        java.lang.String str15 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D16.negate();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865474d, (double) (byte) 1, 0.3691205271584663d);
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(vector3D18, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D4.add(0.41956834513335173d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.scalarMultiply(0.13599489604735257d);
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(vector3D24, 0.7849967359248821d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "XZY" + "'", str3, "XZY");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(doubleArray45, 0.012535694387858676d);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        double double58 = vector3D55.getDelta();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D55, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D61, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation63.applyTo(vector3D65);
        double double67 = rotation63.getQ1();
        org.apache.commons.math.geometry.Rotation rotation68 = rotation60.applyTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder69 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder69.getA2();
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder69.getA1();
        double[] doubleArray76 = rotation68.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 0.5153978362128364d, 0.9999999999999999d, 2.6575295970997246d);
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder69.getA1();
        double[] doubleArray82 = rotation51.getAngles(rotationOrder69);
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, 0.741851996448447d, 3.1153170831869756d, (-2.7755575615628914E-19d));
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(rotationOrder69, (-0.6359166816993131d), 0.05009910281020563d, 2.1753991605364833d);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder69.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder69.getA3();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotationOrder69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[1.9999999999999998, -0.0, -0.9999999999999998]");
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, -0.0, 0.0]");
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation6.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        double double34 = rotation33.getQ2();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation6.applyInverseTo(rotation33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D51.add((-1.0d), vector3D53);
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D78.subtract(0.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D71.subtract(1.0d, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D84.subtract(vector3D85);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D59, vector3D61, vector3D64, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation6.applyInverseTo(rotation87);
        double[][] doubleArray89 = rotation87.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation90 = rotation87.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder91 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder91.getA3();
        double double93 = vector3D92.getZ();
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D92, 2.0678198605632665d);
        org.apache.commons.math.geometry.Rotation rotation96 = rotation87.applyTo(rotation95);
        double double97 = rotation96.getQ3();
        double[][] doubleArray98 = rotation96.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException99 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", (java.lang.Object[]) doubleArray98);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(rotation90);
        org.junit.Assert.assertNotNull(rotationOrder91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertNotNull(rotation96);
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Object[] objArray6 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray7 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", (java.lang.Object[]) throwableArray7);
        java.lang.Object[] objArray9 = notARotationMatrixException8.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: XYZ", objArray9);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D5.subtract(vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D31.subtract(vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.add((-1.0d), vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D7, (double) 100.0f, vector3D15, (double) (short) -1, vector3D35);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D48.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D54.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D51.subtract((double) 0, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D57.add(2.0d, vector3D68);
        double double70 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D57.negate();
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D35, vector3D57);
        double double73 = vector3D57.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D(1.0523901503935196d, vector3D57);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D40, vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder45, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation57 = rotation50.applyInverseTo(rotation56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotation56.applyTo(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D40.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D59.scalarMultiply((-3.110368056629538d));
        double double63 = vector3D62.getZ();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotation57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.410092456172141d) + "'", double63 == (-1.410092456172141d));
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation15 = rotation8.applyInverseTo(rotation14);
        double double16 = rotation15.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D36.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D32, vector3D36);
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D27, vector3D32);
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        org.apache.commons.math.geometry.Rotation rotation43 = rotation15.applyTo(rotation42);
        double[][] doubleArray44 = rotation15.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException45 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray44);
        java.lang.Throwable[] throwableArray46 = notARotationMatrixException45.getSuppressed();
        java.lang.Throwable[] throwableArray47 = notARotationMatrixException45.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", (java.lang.Object[]) throwableArray47);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("YZX", (java.lang.Object[]) throwableArray47);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotation15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.0d, 1.6134380694273582d, (-0.429556888950007d), false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D22, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D22);
        double double34 = vector3D22.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation5.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D22.normalize();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        double[][] doubleArray13 = rotation8.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(doubleArray13, (-0.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation15.revert();
        org.apache.commons.math.geometry.Rotation rotation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation18 = rotation16.applyTo(rotation17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(rotation16);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(3.141592653589793d, (double) (byte) 10, 2.0d, Double.NaN, false);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D44 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D9, (double) 100.0f, vector3D17, (double) (short) -1, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D17.negate();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotation5.applyInverseTo(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D49.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotation5.applyInverseTo(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((-634.6978979926987d), (-0.479425538604203d), (-143.96727020572638d));
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D58, vector3D62);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D63);
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder1.getA2();
        double double8 = vector3D7.getAlpha();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        double double22 = rotation14.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation14.applyTo(vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str35 = rotationOrder34.toString();
        java.lang.String str36 = rotationOrder34.toString();
        double[] doubleArray37 = rotation14.getAngles(rotationOrder34);
        java.lang.String str38 = rotationOrder34.toString();
        java.lang.String str39 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder34.getA1();
        double double41 = vector3D40.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D40);
        org.apache.commons.math.geometry.RotationOrder rotationOrder44 = org.apache.commons.math.geometry.RotationOrder.YXY;
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder44.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D(0.8775825618903728d, vector3D42, 0.8354149633266263d, vector3D45);
        double double47 = vector3D46.getZ();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ZYZ" + "'", str2, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.5707963267948966d + "'", double8 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.7683919425686428d) + "'", double22 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "XYX" + "'", str35, "XYX");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "XYX" + "'", str36, "XYX");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "XYX" + "'", str38, "XYX");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "XYX" + "'", str39, "XYX");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-0.8775825618903728d) + "'", double47 == (-0.8775825618903728d));
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getAngle();
        double double37 = rotation35.getQ0();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(0.0d, 0.5277475438952628d, 143.7738589649261d, (-0.9202635195876083d), false);
        double double44 = rotation43.getQ0();
        org.apache.commons.math.geometry.Rotation rotation45 = rotation35.applyTo(rotation43);
        double[][] doubleArray46 = rotation45.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation((-2.7755575615628914E-17d), 1.001815201126782d, 0.27767781196347213d, 0.7060543458962301d, false);
        org.apache.commons.math.geometry.Rotation rotation53 = rotation45.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) ' ', (-2.0d), 16.62763166455332d);
        java.lang.String str64 = rotationOrder54.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-0.0013651261847257446d), 0.33931220530841594d, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D69.scalarMultiply(0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation45.applyTo(vector3D72);
        double double74 = rotation45.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1475455860530537d + "'", double36 == 2.1475455860530537d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-0.476811323902129d) + "'", double37 == (-0.476811323902129d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 112.91008742331287d + "'", double74 == 112.91008742331287d);
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation24 = rotation17.applyInverseTo(rotation23);
        org.apache.commons.math.geometry.Rotation rotation25 = rotation11.applyTo(rotation23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder26, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(rotationOrder32, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation38 = rotation31.applyInverseTo(rotation37);
        double double39 = rotation38.getQ2();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation11.applyInverseTo(rotation38);
        double double41 = rotation38.getAngle();
        org.apache.commons.math.geometry.Rotation rotation42 = rotation5.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation38.revert();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotation38.getAxis();
        double double45 = rotation38.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(rotation24);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        double double39 = vector3D3.getX();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation42 = rotation41.revert();
        double double43 = rotation41.getQ0();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(rotation42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-0.1934586046207122d) + "'", double43 == (-0.1934586046207122d));
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((-349.4464117288351d), 0.0d, 1.580316067234769d);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5496694388267762d, 0.8787695077488106d, (-0.7265133934792274d), 0.647580920567952d, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D7.subtract(vector3D9);
        double double16 = vector3D9.getY();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D18, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = new org.apache.commons.math.geometry.Vector3D(100.4491529857595d, (-0.05546668618914311d), (-0.9132779260310951d));
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D26, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D35.orthogonal();
        double double37 = vector3D35.getY();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str39 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D45.subtract(vector3D47);
        double double54 = vector3D47.getY();
        double double55 = vector3D47.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(143.7738589649261d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.subtract(vector3D61);
        double double68 = vector3D61.getY();
        double double69 = vector3D61.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) 10, vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D61.normalize();
        double double72 = vector3D61.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D57.add(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D41.add(2.638427581942488d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D35, vector3D57);
        double double76 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation31.applyTo(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotation5.applyInverseTo(vector3D77);
        double double79 = rotation5.getQ1();
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "YXZ" + "'", str39, "YXZ");
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.618062205857576d + "'", double79 == 0.618062205857576d);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7525070711305496d, 16.507805876379134d, 2.291758293585621d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        double double16 = vector3D15.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.5707963267948966d + "'", double16 == 1.5707963267948966d);
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(3.1330314046616845d, 9990.00005005005d, (-1.0027048888022863d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.12637150995481888d, 13.903082980735348d, (-0.07264806010080926d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D(0.5738046983621651d, 16.62763166455332d, 0.8342233605065102d);
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(3.2087642143727657d, vector3D4, 0.6838267645076843d, vector3D9, 0.09138363287001147d, vector3D15, 5096.0d, vector3D20);
        double double22 = vector3D15.getY();
        double double23 = vector3D15.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.5707963267948966d + "'", double23 == 1.5707963267948966d);
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.26237485370392877d, (-2.0d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(vector3D5, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D5.scalarMultiply((-0.5309649148733837d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXZ" + "'", str3, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D12);
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D8.add(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D12.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str15 = rotationOrder14.toString();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder14.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str25 = rotationOrder24.toString();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder24.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D26.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D27.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(vector3D52, vector3D54, vector3D57, vector3D79);
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D52.normalize();
        double double82 = vector3D52.getDelta();
        double double83 = vector3D52.getNorm();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(vector3D13, vector3D23, vector3D28, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D13.subtract(vector3D85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ZXY" + "'", str15, "ZXY");
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "XZX" + "'", str25, "XZX");
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2.0d + "'", double83 == 2.0d);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D3.subtract(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D16.subtract(1.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D29.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D33.subtract(0.0d, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D31.add((-1.0d), vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D40 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D5, (double) 100.0f, vector3D13, (double) (short) -1, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D13.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D52.subtract(0.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D45.subtract(1.0d, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.subtract(vector3D59);
        double double61 = vector3D60.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D13.subtract((double) 10.0f, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D((double) 0, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D64.negate();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D13.add(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D76 = new org.apache.commons.math.geometry.Vector3D(2.5104165854707956d, vector3D64);
        double double77 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D64.normalize();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D78);
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D52);
        double double54 = rotation53.getQ0();
        double double55 = rotation53.getAngle();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotationOrder65.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D70 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-634.6978979926987d));
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D67.add(vector3D70);
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D74.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D75.normalize();
        double double77 = vector3D75.getY();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D67.add(vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D64, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotation53.applyInverseTo(vector3D78);
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(0.05101988824888226d, 1.8903698746791402d, (-0.8944271909999159d), (-0.5262902691431163d), true);
        org.apache.commons.math.geometry.Rotation rotation87 = rotation53.applyTo(rotation86);
        double double88 = rotation87.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7071067811865476d + "'", double54 == 0.7071067811865476d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.5707963267948963d + "'", double55 == 1.5707963267948963d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2.581349433702176d + "'", double88 == 2.581349433702176d);
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException7 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray8 = cardanEulerSingularityException7.getArguments();
        java.lang.Throwable[] throwableArray9 = cardanEulerSingularityException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException11 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray12 = cardanEulerSingularityException11.getArguments();
        java.lang.String str13 = cardanEulerSingularityException11.getPattern();
        cardanEulerSingularityException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException11);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException7);
        java.lang.Object[] objArray16 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException18 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray19 = cardanEulerSingularityException18.getArguments();
        java.lang.Throwable[] throwableArray20 = cardanEulerSingularityException18.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException22 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray23 = cardanEulerSingularityException22.getArguments();
        java.lang.String str24 = cardanEulerSingularityException22.getPattern();
        cardanEulerSingularityException18.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray26 = cardanEulerSingularityException22.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException22);
        java.lang.Object[] objArray28 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException30 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray31 = cardanEulerSingularityException30.getArguments();
        java.lang.String str32 = cardanEulerSingularityException30.getPattern();
        java.lang.String str33 = cardanEulerSingularityException30.getPattern();
        java.lang.String str34 = cardanEulerSingularityException30.getPattern();
        java.lang.Object[] objArray35 = cardanEulerSingularityException30.getArguments();
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException30);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException39 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray40 = cardanEulerSingularityException39.getArguments();
        java.lang.Throwable[] throwableArray41 = cardanEulerSingularityException39.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException43 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray44 = cardanEulerSingularityException43.getArguments();
        java.lang.String str45 = cardanEulerSingularityException43.getPattern();
        cardanEulerSingularityException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException43);
        java.lang.Object[] objArray47 = cardanEulerSingularityException43.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: hi!", objArray47);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException48);
        java.lang.String str50 = notARotationMatrixException5.getPattern();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Euler angles singularity" + "'", str13, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Euler angles singularity" + "'", str34, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Euler angles singularity" + "'", str45, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str50, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, 2.1475455860530537d, 0.15135620392549756d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D7.negate();
        double double10 = vector3D7.getX();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(vector3D7, (-0.6654501282278069d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D25.subtract(vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D62 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D27, (double) 100.0f, vector3D35, (double) (short) -1, vector3D55);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D19.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        double double71 = vector3D68.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D68.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D35, (-0.7683919425686428d), vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D35.normalize();
        double double76 = vector3D35.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D7, vector3D35);
        double double78 = vector3D35.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        double double15 = rotation14.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str17 = rotationOrder16.toString();
        java.lang.String str18 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA2();
        double[] doubleArray22 = rotation14.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation14.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XYX" + "'", str17, "XYX");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-2.656478922472383, 1.7765565406780053, -2.3764287360254426]");
        org.junit.Assert.assertNotNull(vector3D23);
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.27319969649197073d, 0.6641884054157533d, 0.3103755182850353d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (-0.45647262536381383d), 2.3114482587377294d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D12 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.subtract(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D43.add((-1.0d), vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D17, (double) 100.0f, vector3D25, (double) (short) -1, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        double double59 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D52, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        double double67 = vector3D64.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D68.orthogonal();
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation74 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation74.applyTo(vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D69.add(0.8390715290764523d, vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D60.add(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D81 = new org.apache.commons.math.geometry.Vector3D(0.5707963267948967d, vector3D12, (-54.50256143565405d), vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D3, vector3D80);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.negate();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 98.0d + "'", double59 == 98.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        double[][] doubleArray16 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray16);
        java.lang.String str18 = notARotationMatrixException17.getPattern();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException29 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray27);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException32 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray33 = cardanEulerSingularityException32.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException32.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException35 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray34);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        notARotationMatrixException35.addSuppressed((java.lang.Throwable) cardanEulerSingularityException37);
        notARotationMatrixException29.addSuppressed((java.lang.Throwable) notARotationMatrixException35);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) notARotationMatrixException29);
        java.lang.String str48 = notARotationMatrixException17.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder58 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder58.getA1();
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder58, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation64 = rotation57.applyInverseTo(rotation63);
        double double65 = rotation64.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D66.subtract(1.0d, vector3D76);
        org.apache.commons.math.geometry.RotationOrder rotationOrder80 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D81 = rotationOrder80.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double86 = vector3D85.getX();
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D82.subtract(0.0d, vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D85.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D81, vector3D85);
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(vector3D76, vector3D81);
        org.apache.commons.math.geometry.Rotation rotation91 = rotation90.revert();
        org.apache.commons.math.geometry.Rotation rotation92 = rotation64.applyTo(rotation91);
        double[][] doubleArray93 = rotation64.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException94 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray93);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException95 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray93);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException96 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray93);
        java.lang.Throwable[] throwableArray97 = notARotationMatrixException96.getSuppressed();
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) notARotationMatrixException96);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotationOrder58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(rotationOrder80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(rotation92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100L, 0.5114629390766603d, (-2.0d));
        double double8 = rotation7.getAngle();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation((-10.53200198742562d), 0.0d, (double) ' ', (double) (byte) 0, true);
        double double15 = rotation14.getQ3();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation7.applyInverseTo(rotation14);
        double double17 = rotation16.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D28.subtract(1.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D41.subtract(vector3D42);
        double double44 = vector3D43.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotation27.applyTo(vector3D43);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str47 = rotationOrder46.toString();
        double[] doubleArray48 = rotation27.getAngles(rotationOrder46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder46.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder46.getA3();
        java.lang.String str51 = rotationOrder46.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder46.getA2();
        double[] doubleArray54 = rotation16.getAngles(rotationOrder46);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ZXY" + "'", str3, "ZXY");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.2112625254810094d + "'", double8 == 2.2112625254810094d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.29982993928556756d + "'", double17 == 0.29982993928556756d);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ZXY" + "'", str47, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXY" + "'", str51, "ZXY");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.22620433967787984, 0.6894047477554837, -1.7170865159559978]");
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D11.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D8, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        double double20 = vector3D17.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D17.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation13.applyInverseTo(vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation41 = rotation34.applyInverseTo(rotation40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotation40.applyTo(vector3D42);
        org.apache.commons.math.geometry.Rotation rotation49 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder50 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder50.getA1();
        org.apache.commons.math.geometry.Rotation rotation55 = new org.apache.commons.math.geometry.Rotation(rotationOrder50, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Rotation rotation61 = new org.apache.commons.math.geometry.Rotation(rotationOrder56, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation62 = rotation55.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation49.applyTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation40.applyTo(rotation61);
        double double65 = rotation64.getQ3();
        double[][] doubleArray66 = rotation64.getMatrix();
        double double67 = rotation64.getQ0();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA1();
        java.lang.String str77 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder74.getA3();
        double[] doubleArray79 = rotation73.getAngles(rotationOrder74);
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder74.getA2();
        double[] doubleArray81 = rotation64.getAngles(rotationOrder74);
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D83 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder74.getA3();
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, 0.5840734641020676d, 0.0d, 1.080456683454306d);
        double[] doubleArray89 = rotation13.getAngles(rotationOrder74);
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder74.getA2();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotationOrder50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.11078585244669703d + "'", double65 == 0.11078585244669703d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-0.476811323902129d) + "'", double67 == (-0.476811323902129d));
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "YXZ" + "'", str75, "YXZ");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "YXZ" + "'", str77, "YXZ");
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-2.234489416233763, 0.563595159307288, -0.6152787481864835]");
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, -0.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D90);
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D8.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D4, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D14.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D27.subtract(1.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D40.subtract(vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D42.add((-1.0d), vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D16, (double) 100.0f, vector3D24, (double) (short) -1, vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D8.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(2.638427581942488d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D(1.5707963267948961d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D58 = new org.apache.commons.math.geometry.Vector3D(0.42073549240394825d, 9990.0d);
        double double59 = org.apache.commons.math.geometry.Vector3D.angle(vector3D53, vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.4927992573463403d + "'", double59 == 0.4927992573463403d);
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.027482415555279194d, (-0.14807783941523994d), 0.297316321916546d);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation((-0.14599455657272695d), (-2.0d), 1.0d, 0.3691205271584663d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA1();
        java.lang.String str14 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder11.getA3();
        double[] doubleArray16 = rotation10.getAngles(rotationOrder11);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.add((-1.0d), vector3D58);
        double double60 = vector3D29.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D29.add((double) 1.0f, vector3D63);
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(vector3D17, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D63.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D66.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D3.subtract((-0.8412192543248603d), vector3D67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D72.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double80 = rotation79.getQ2();
        double double81 = rotation79.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D85 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation87 = new org.apache.commons.math.geometry.Rotation(vector3D85, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder88 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder88.getA3();
        java.lang.String str90 = rotationOrder88.toString();
        double[] doubleArray91 = rotation87.getAngles(rotationOrder88);
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder88.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotationOrder88.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation79.applyTo(vector3D93);
        double double95 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D73, vector3D94);
        org.apache.commons.math.geometry.Vector3D vector3D97 = vector3D94.scalarMultiply((-0.5596223106516541d));
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D67.add((-0.6204645696236049d), vector3D97);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "YXZ" + "'", str12, "YXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "YXZ" + "'", str14, "YXZ");
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-2.901696288197035, -0.2592596929499046, -2.2457187951113045]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "XZX" + "'", str71, "XZX");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ZYZ" + "'", str75, "ZYZ");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.5153978362128364d + "'", double80 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + (-0.1934112408002968d) + "'", double81 == (-0.1934112408002968d));
        org.junit.Assert.assertNotNull(rotationOrder88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "XYX" + "'", str90, "XYX");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-0.3273429174298899d) + "'", double95 == (-0.3273429174298899d));
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        double double10 = rotation9.getQ2();
        double double11 = rotation9.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.9103552519805896d + "'", double10 == 0.9103552519805896d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.9103552519805896d + "'", double11 == 0.9103552519805896d);
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation22 = rotation15.applyInverseTo(rotation21);
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotation21.applyTo(vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation21.getAxis();
        double[][] doubleArray26 = rotation21.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray26, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str31 = rotationOrder30.toString();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(vector3D32, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation35 = rotation29.applyInverseTo(rotation34);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation5.applyInverseTo(rotation34);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = rotation36.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation((double) 'a', (double) '#', (double) (byte) 1, 2.2112625254810094d, true);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA1();
        org.apache.commons.math.geometry.Rotation rotation56 = new org.apache.commons.math.geometry.Rotation(rotationOrder51, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder57 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D58 = rotationOrder57.getA1();
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(rotationOrder57, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation63 = rotation56.applyInverseTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation50.applyTo(rotation62);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotationOrder65.getA1();
        org.apache.commons.math.geometry.Rotation rotation70 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder71 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder71.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder71, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation77 = rotation70.applyInverseTo(rotation76);
        double double78 = rotation77.getQ2();
        org.apache.commons.math.geometry.Rotation rotation79 = rotation50.applyInverseTo(rotation77);
        double double80 = rotation77.getAngle();
        org.apache.commons.math.geometry.Rotation rotation81 = rotation44.applyInverseTo(rotation77);
        double double82 = rotation44.getQ1();
        org.apache.commons.math.geometry.Rotation rotation83 = rotation36.applyInverseTo(rotation44);
        org.apache.commons.math.geometry.Rotation rotation84 = rotation83.revert();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotation22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ZYZ" + "'", str31, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(rotation38);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(rotationOrder57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(rotationOrder71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(rotation77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNotNull(rotation79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.33931220530841594d + "'", double82 == 0.33931220530841594d);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertNotNull(rotation84);
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        org.apache.commons.math.geometry.Vector3D vector3D4 = new org.apache.commons.math.geometry.Vector3D(2.8156024785781764d, 0.0d, (-0.7339205705994797d));
        double double5 = vector3D4.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D(1.4102833407707576d, vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 2.9096832682140223d + "'", double5 == 2.9096832682140223d);
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(1.197920468897525d, 9.995120760870789d);
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        java.lang.String str5 = rotationOrder0.toString();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.24125648351783702d, 0.7212688287676877d, 2.067819860563266d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str20 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder11.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder11.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder11.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.scalarMultiply(0.2468262321715982d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotation10.applyInverseTo(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ZXY" + "'", str4, "ZXY");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ZXY" + "'", str5, "ZXY");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ZXY" + "'", str6, "ZXY");
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ZXY" + "'", str20, "ZXY");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D41, vector3D44);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotation57.applyTo(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D41.subtract(vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyInverseTo(rotation73);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotation73.applyTo(vector3D75);
        double double77 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D61, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) 0L, vector3D61);
        java.lang.Class<?> wildcardClass79 = vector3D61.getClass();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.4533522819483131d + "'", double77 == 1.4533522819483131d);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.04546253698241682d, 0.16624968048555705d);
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.7454563732201893d), 0.6178548206313739d, (double) (byte) 1, 0.26237485370392877d, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, (double) 0L);
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.20425754205805166d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 3.133632087139039d);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D10.subtract(vector3D12);
        double double19 = vector3D12.getY();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D26.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D21, vector3D26);
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(vector3D21, 1.278124800288793d);
        double[][] doubleArray32 = rotation31.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(2.677945044588987d, 0.7316279195830642d, 1.8027186956254748d, (-1.122967125689989d), true);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation31.applyTo(rotation38);
        double double40 = rotation31.getAngle();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation5.applyTo(rotation31);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation41.getAxis();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.278124800288793d + "'", double40 == 1.278124800288793d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(vector3D42);
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(vector3D3, (double) (-1));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA3();
        java.lang.String str8 = rotationOrder6.toString();
        double[] doubleArray9 = rotation5.getAngles(rotationOrder6);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder6.getA1();
        java.lang.String str11 = rotationOrder6.toString();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, 44.59354209385188d, 0.6652716507048932d, (-1.6334254733932692d));
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder6.getA2();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XYX" + "'", str8, "XYX");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[-0.23704925925166476, 0.987013585276267, 0.06933952751320867]");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "XYX" + "'", str11, "XYX");
        org.junit.Assert.assertNotNull(vector3D16);
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation14 = rotation7.applyInverseTo(rotation13);
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        java.lang.String str18 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str23 = rotationOrder15.toString();
        java.lang.String str24 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 1.5707963267948966d, 10000.0d, 0.24893698743024015d);
        double double29 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation30 = rotation14.applyTo(rotation28);
        double[][] doubleArray31 = rotation28.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYZ", (java.lang.Object[]) doubleArray31);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException33 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) doubleArray31);
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXY" + "'", str16, "ZXY");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ZXY" + "'", str18, "ZXY");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ZXY" + "'", str24, "ZXY");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.19525005863916445d + "'", double29 == 0.19525005863916445d);
        org.junit.Assert.assertNotNull(rotation30);
        org.junit.Assert.assertNotNull(doubleArray31);
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        org.apache.commons.math.geometry.Rotation rotation7 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray8 = rotation7.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException9 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray8);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray8);
        java.lang.Object[] objArray11 = notARotationMatrixException10.getArguments();
        java.lang.Throwable[] throwableArray12 = notARotationMatrixException10.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.String str16 = cardanEulerSingularityException14.getPattern();
        java.lang.String str17 = cardanEulerSingularityException14.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException20 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray21 = cardanEulerSingularityException20.getArguments();
        java.lang.Throwable[] throwableArray22 = cardanEulerSingularityException20.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.String str26 = cardanEulerSingularityException24.getPattern();
        cardanEulerSingularityException20.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) throwableArray30);
        cardanEulerSingularityException14.addSuppressed((java.lang.Throwable) notARotationMatrixException31);
        java.lang.Object[] objArray33 = cardanEulerSingularityException14.getArguments();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) cardanEulerSingularityException14);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException37 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray38 = cardanEulerSingularityException37.getArguments();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException37.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.String str43 = cardanEulerSingularityException41.getPattern();
        cardanEulerSingularityException37.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray45 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray46 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Throwable[] throwableArray47 = cardanEulerSingularityException41.getSuppressed();
        java.lang.Object[] objArray48 = cardanEulerSingularityException41.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", objArray48);
        java.lang.Throwable[] throwableArray50 = notARotationMatrixException49.getSuppressed();
        notARotationMatrixException10.addSuppressed((java.lang.Throwable) notARotationMatrixException49);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[[2049.0, 64.0, -2.0], [64.0, 3.0, 64.0], [2.0, -64.0, 1.0]]");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Euler angles singularity" + "'", str16, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Euler angles singularity" + "'", str17, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Euler angles singularity" + "'", str26, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Euler angles singularity" + "'", str43, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException3 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray4 = cardanEulerSingularityException3.getArguments();
        java.lang.Throwable[] throwableArray5 = cardanEulerSingularityException3.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException6 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray5);
        java.lang.String str7 = notARotationMatrixException6.getPattern();
        java.lang.String str8 = notARotationMatrixException6.getPattern();
        java.lang.Throwable[] throwableArray9 = notARotationMatrixException6.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXZ", (java.lang.Object[]) throwableArray9);
        java.lang.Throwable[] throwableArray11 = notARotationMatrixException10.getSuppressed();
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str7, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str8, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D6.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D2, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D25.subtract(1.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D38.subtract(vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D40.add((-1.0d), vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D49 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D14, (double) 100.0f, vector3D22, (double) (short) -1, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D6.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) 'a', vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D6, vector3D52);
        double double54 = rotation53.getQ0();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotation53.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D57.subtract(1.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D70.subtract(vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D72.add((-1.0d), vector3D74);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D72, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D72);
        org.apache.commons.math.geometry.Rotation rotation85 = new org.apache.commons.math.geometry.Rotation(vector3D72, (-1.0d));
        double double86 = rotation85.getQ2();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation53.applyInverseTo(rotation85);
        double double88 = rotation53.getAngle();
        double double89 = rotation53.getQ3();
        double[][] doubleArray90 = rotation53.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.7071067811865476d + "'", double54 == 0.7071067811865476d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.5707963267948963d + "'", double88 == 1.5707963267948963d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        double[][] doubleArray0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation2 = new org.apache.commons.math.geometry.Rotation(doubleArray0, 0.11078585244669703d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation5.applyTo(rotation17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D20.subtract(1.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.subtract(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.add((-1.0d), vector3D37);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(vector3D35, (double) '#');
        org.apache.commons.math.geometry.Rotation rotation46 = rotation19.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder47.getA1();
        double[] doubleArray50 = rotation45.getAngles(rotationOrder47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder47.getA1();
        double double52 = vector3D51.getNorm();
        double double53 = vector3D51.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.scalarMultiply(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D55.orthogonal();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: null norm");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(rotation46);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-0.0, 0.0, 2.6991118430775187]");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.8762551259675299d, (-0.33931220530841594d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder5.getA1();
        double double11 = vector3D10.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D14 = new org.apache.commons.math.geometry.Vector3D(1.0d, 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D15.negate();
        org.apache.commons.math.geometry.Vector3D vector3D17 = new org.apache.commons.math.geometry.Vector3D((-0.13597071688697315d), vector3D3, 1.001815201126782d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D15.scalarMultiply(0.7278646038295914d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D19);
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(vector3D2, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation5 = rotation4.revert();
        double[][] doubleArray6 = rotation5.getMatrix();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, (-0.05514310635936155d));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.geometry.NotARotationMatrixException; message: unable to orthogonalize matrix in 10 iterations");
        } catch (org.apache.commons.math.geometry.NotARotationMatrixException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotation5);
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(2.470954692217152d, 3.2087642143727657d, (-0.24903954012484228d), (-0.7683919425686427d), false);
        double double6 = rotation5.getQ1();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 3.2087642143727657d + "'", double6 == 3.2087642143727657d);
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotation8.applyTo(vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D13.subtract(0.0d, vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D16.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D12.subtract(vector3D16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D20.negate();
        double double22 = vector3D21.getX();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.16577663949348953d + "'", double22 == 0.16577663949348953d);
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation11.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation11.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder38 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder38.getA2();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder38.getA2();
        double[] doubleArray46 = rotation11.getAngles(rotationOrder38);
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder38, (-143.96727020572638d), (-0.45973278686101987d), 1.278124800288793d);
        java.lang.String str51 = rotationOrder38.toString();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder38.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder38.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.10830291305827339d + "'", double36 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ZXZ" + "'", str51, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        double double15 = rotation5.getQ0();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, 0.8342233605065102d, (-10.53200198742562d), (double) 10.0f);
        double[] doubleArray23 = rotation5.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D28, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D28.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D60 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 100, (-2.7755575615628914E-17d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, vector3D46, (double) 100.0f, vector3D60);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D60, 3.2087642143727657d);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation63.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotation63.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D66 = rotation5.applyInverseTo(vector3D65);
        double double67 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.5114629390766603d + "'", double15 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-2.7057258498816688, 1.0470700763795393, 1.9916421246286868]");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.5114629390766603d + "'", double67 == 0.5114629390766603d);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5181089967534271d, (-5516.789377817079d), 0.0d, 268.47048776580107d, true);
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException10 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray9);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException14 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray15 = cardanEulerSingularityException14.getArguments();
        java.lang.Throwable[] throwableArray16 = cardanEulerSingularityException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException17 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException23 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray24 = cardanEulerSingularityException23.getArguments();
        java.lang.String str25 = cardanEulerSingularityException23.getPattern();
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException23);
        notARotationMatrixException17.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        notARotationMatrixException11.addSuppressed((java.lang.Throwable) notARotationMatrixException17);
        java.lang.Object[] objArray29 = notARotationMatrixException17.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException30 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray29);
        java.lang.Object[] objArray31 = notARotationMatrixException30.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException33 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray34 = cardanEulerSingularityException33.getArguments();
        java.lang.Object[] objArray35 = cardanEulerSingularityException33.getArguments();
        java.lang.String str36 = cardanEulerSingularityException33.getPattern();
        java.lang.Object[] objArray37 = cardanEulerSingularityException33.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException33.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.Throwable[] throwableArray42 = cardanEulerSingularityException40.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException44 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray45 = cardanEulerSingularityException44.getArguments();
        java.lang.String str46 = cardanEulerSingularityException44.getPattern();
        cardanEulerSingularityException40.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Object[] objArray48 = cardanEulerSingularityException44.getArguments();
        cardanEulerSingularityException33.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Object[] objArray50 = cardanEulerSingularityException44.getArguments();
        notARotationMatrixException30.addSuppressed((java.lang.Throwable) cardanEulerSingularityException44);
        java.lang.Throwable[] throwableArray52 = cardanEulerSingularityException44.getSuppressed();
        java.lang.Throwable[] throwableArray53 = cardanEulerSingularityException44.getSuppressed();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Euler angles singularity" + "'", str36, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Euler angles singularity" + "'", str46, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation20 = rotation13.applyInverseTo(rotation19);
        double double21 = rotation13.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D28.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D24, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D34.subtract(vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D47.subtract(1.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D60.subtract(vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D62.add((-1.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D36, (double) 100.0f, vector3D44, (double) (short) -1, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D28.subtract(vector3D44);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        double double80 = vector3D77.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D77.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D81.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D44, (-0.7683919425686428d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotation13.applyTo(vector3D44);
        double double85 = rotation13.getQ1();
        org.apache.commons.math.geometry.Rotation rotation86 = rotation7.applyTo(rotation13);
        double double87 = rotation7.getQ0();
        double double88 = rotation7.getQ1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-0.7683919425686428d) + "'", double21 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.3691205271584663d + "'", double85 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotation86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.1636155811153862d + "'", double87 == 0.1636155811153862d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.3530725118195893d + "'", double88 == 0.3530725118195893d);
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        double double14 = rotation6.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D20.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation6.applyTo(vector3D20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str27 = rotationOrder26.toString();
        java.lang.String str28 = rotationOrder26.toString();
        double[] doubleArray29 = rotation6.getAngles(rotationOrder26);
        java.lang.String str30 = rotationOrder26.toString();
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder26.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder35.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D46 = new org.apache.commons.math.geometry.Vector3D((-52.0d), vector3D33, (-1.1332400838831356d), vector3D45);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.7683919425686428d) + "'", double14 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "XYX" + "'", str27, "XYX");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "XYX" + "'", str28, "XYX");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "XYX" + "'", str30, "XYX");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray2 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException16 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray17 = cardanEulerSingularityException16.getArguments();
        java.lang.Object[] objArray18 = cardanEulerSingularityException16.getArguments();
        java.lang.String str19 = cardanEulerSingularityException16.getPattern();
        java.lang.Object[] objArray20 = cardanEulerSingularityException16.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException16.getSuppressed();
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Object[] objArray26 = cardanEulerSingularityException24.getArguments();
        java.lang.String str27 = cardanEulerSingularityException24.getPattern();
        java.lang.Object[] objArray28 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException24.getSuppressed();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException24.getSuppressed();
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException16);
        java.lang.String str33 = cardanEulerSingularityException16.getPattern();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException39 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray38);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException41 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray42 = cardanEulerSingularityException41.getArguments();
        java.lang.Throwable[] throwableArray43 = cardanEulerSingularityException41.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException45 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray46 = cardanEulerSingularityException45.getArguments();
        java.lang.String str47 = cardanEulerSingularityException45.getPattern();
        cardanEulerSingularityException41.addSuppressed((java.lang.Throwable) cardanEulerSingularityException45);
        notARotationMatrixException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException41);
        java.lang.Object[] objArray50 = notARotationMatrixException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray53 = cardanEulerSingularityException52.getArguments();
        java.lang.Throwable[] throwableArray54 = cardanEulerSingularityException52.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException56 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray57 = cardanEulerSingularityException56.getArguments();
        java.lang.String str58 = cardanEulerSingularityException56.getPattern();
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.Object[] objArray60 = cardanEulerSingularityException56.getArguments();
        notARotationMatrixException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException56);
        java.lang.Object[] objArray62 = notARotationMatrixException39.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException64 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray65 = cardanEulerSingularityException64.getArguments();
        java.lang.Throwable[] throwableArray66 = cardanEulerSingularityException64.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException68 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray69 = cardanEulerSingularityException68.getArguments();
        java.lang.String str70 = cardanEulerSingularityException68.getPattern();
        cardanEulerSingularityException64.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        java.lang.Object[] objArray72 = cardanEulerSingularityException68.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException75 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray76 = cardanEulerSingularityException75.getArguments();
        java.lang.Throwable[] throwableArray77 = cardanEulerSingularityException75.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException78 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray77);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException80 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray81 = cardanEulerSingularityException80.getArguments();
        java.lang.Throwable[] throwableArray82 = cardanEulerSingularityException80.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException84 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray85 = cardanEulerSingularityException84.getArguments();
        java.lang.String str86 = cardanEulerSingularityException84.getPattern();
        cardanEulerSingularityException80.addSuppressed((java.lang.Throwable) cardanEulerSingularityException84);
        notARotationMatrixException78.addSuppressed((java.lang.Throwable) cardanEulerSingularityException80);
        cardanEulerSingularityException68.addSuppressed((java.lang.Throwable) notARotationMatrixException78);
        notARotationMatrixException39.addSuppressed((java.lang.Throwable) cardanEulerSingularityException68);
        cardanEulerSingularityException16.addSuppressed((java.lang.Throwable) notARotationMatrixException39);
        java.lang.Throwable throwable92 = null;
        // The following exception was thrown during execution in test generation
        try {
            cardanEulerSingularityException16.addSuppressed(throwable92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Euler angles singularity" + "'", str19, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Euler angles singularity" + "'", str33, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Euler angles singularity" + "'", str47, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Euler angles singularity" + "'", str58, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Euler angles singularity" + "'", str70, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Euler angles singularity" + "'", str86, "Euler angles singularity");
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.scalarMultiply(100.0d);
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = new org.apache.commons.math.geometry.Vector3D((-10.53200198742562d), vector3D5, (-143.96727020572638d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA3();
        java.lang.String str26 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.9988929054468334d, 2.2259647441756316d, 0.7071067811865476d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder22.getA3();
        double double32 = vector3D31.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D33 = new org.apache.commons.math.geometry.Vector3D((double) (short) 0, vector3D5, 2.0985845029684933d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D2.subtract(vector3D33);
        double double35 = vector3D34.getNorm();
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZXY" + "'", str13, "ZXY");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.5707963267948966d + "'", double32 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.757733182410004d + "'", double35 == 1.757733182410004d);
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D14.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D23.subtract(0.0d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D23.subtract(1.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D38.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(vector3D38, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotation21.applyInverseTo(vector3D38);
        org.apache.commons.math.geometry.RotationOrder rotationOrder51 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder51.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D(0.06847869573979007d, vector3D15, 100.4491529857595d, vector3D49, (-2.0d), vector3D52);
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = new org.apache.commons.math.geometry.Vector3D(0.005022802342728373d, 0.9649660284921133d);
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D57.negate();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D58.negate();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D53.add(vector3D59);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-56.05904118770088d) + "'", double54 == (-56.05904118770088d));
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(6.123233995736766E-17d, (-2.155175139856398d));
        double double3 = vector3D2.getDelta();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-0.9864175137333954d) + "'", double3 == (-0.9864175137333954d));
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder21, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation26.applyInverseTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation34 = rotation20.applyTo(rotation32);
        org.apache.commons.math.geometry.Rotation rotation35 = rotation11.applyTo(rotation32);
        double double36 = rotation35.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder37 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder37.getA1();
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(rotationOrder37, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder43 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder43.getA1();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder43, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyInverseTo(rotation48);
        org.apache.commons.math.geometry.Rotation rotation50 = rotation48.revert();
        double[][] doubleArray51 = rotation50.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(doubleArray51, 3.2087642143727657d);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation35.applyInverseTo(rotation53);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation((-2.4546359825450494d), 0.0d, 0.8152026922093308d, 54.54841155384128d, false);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation54.applyTo(rotation60);
        double double62 = rotation54.getQ2();
        double double63 = rotation54.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2.1475455860530537d + "'", double36 == 2.1475455860530537d);
        org.junit.Assert.assertNotNull(rotationOrder37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(rotationOrder43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertNotNull(rotation50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-0.03563598374487637d) + "'", double62 == (-0.03563598374487637d));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.03563598374487637d) + "'", double63 == (-0.03563598374487637d));
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException6 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray7 = cardanEulerSingularityException6.getArguments();
        java.lang.String str8 = cardanEulerSingularityException6.getPattern();
        cardanEulerSingularityException2.addSuppressed((java.lang.Throwable) cardanEulerSingularityException6);
        java.lang.Object[] objArray10 = cardanEulerSingularityException6.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException11 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray10);
        java.lang.Object[] objArray12 = notARotationMatrixException11.getArguments();
        java.lang.Throwable[] throwableArray13 = notARotationMatrixException11.getSuppressed();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.5334000320841179d, 2010.8322649434506d, (-0.0042806113912205665d));
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5912044389450646d), (-0.5403850632569267d), 0.42487699275774343d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D9);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation5.getQ0();
        double double14 = rotation5.getAngle();
        double double15 = rotation5.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str17 = rotationOrder16.toString();
        java.lang.String str18 = rotationOrder16.toString();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder16.getA1();
        double[] doubleArray20 = rotation5.getAngles(rotationOrder16);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder16.getA2();
        double double23 = vector3D22.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.5114629390766603d + "'", double13 == 0.5114629390766603d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0678198605632665d + "'", double14 == 2.0678198605632665d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.3691205271584663d + "'", double15 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "XYX" + "'", str17, "XYX");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "XYX" + "'", str18, "XYX");
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-0.7651639175643505, 1.7765565406780053, -0.48511373111741024]");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder6.getA1();
        double double12 = vector3D11.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotation5.applyInverseTo(vector3D11);
        org.apache.commons.math.geometry.Rotation rotation14 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.YZY;
        double[] doubleArray16 = rotation14.getAngles(rotationOrder15);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, 0.24893698743024015d, Double.NaN, 2.1753991605364833d);
        double[][] doubleArray22 = rotation21.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA1();
        org.apache.commons.math.geometry.Rotation rotation28 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation33 = new org.apache.commons.math.geometry.Rotation(rotationOrder29, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder29.getA1();
        double double35 = vector3D34.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation28.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation28.revert();
        double double38 = rotation28.getQ0();
        org.apache.commons.math.geometry.Rotation rotation39 = rotation21.applyTo(rotation28);
        double double40 = rotation39.getQ0();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.3018847904201777, 0.7897244441795649, -2.268911536374719]");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.5114629390766603d + "'", double38 == 0.5114629390766603d);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D2.subtract(0.0d, vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D0.subtract(vector3D2);
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        double double13 = vector3D12.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.scalarMultiply((double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D0.add(0.3691205271584663d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D16.scalarMultiply(0.5153978362128364d);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        double double25 = vector3D22.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D36.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D33.subtract((double) 0, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D41.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D39.add(2.0d, vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D16, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.subtract(vector3D57);
        double double64 = vector3D57.getY();
        org.apache.commons.math.geometry.Vector3D vector3D65 = new org.apache.commons.math.geometry.Vector3D((-128.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D22.add(vector3D65);
        double double67 = vector3D22.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(rotationOrder68, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation80 = rotation73.applyInverseTo(rotation79);
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder87 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D88 = rotationOrder87.getA1();
        org.apache.commons.math.geometry.Rotation rotation92 = new org.apache.commons.math.geometry.Rotation(rotationOrder87, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation93 = rotation86.applyInverseTo(rotation92);
        org.apache.commons.math.geometry.Rotation rotation94 = rotation92.revert();
        org.apache.commons.math.geometry.Rotation rotation95 = rotation80.applyTo(rotation94);
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotation80.getAxis();
        double double97 = vector3D96.getDelta();
        org.apache.commons.math.geometry.Rotation rotation98 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D96);
        double double99 = vector3D22.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(rotation93);
        org.junit.Assert.assertNotNull(rotation94);
        org.junit.Assert.assertNotNull(rotation95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 0.0d + "'", double99 == 0.0d);
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D64.subtract(0.0d, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D64.subtract(1.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D77.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        org.apache.commons.math.geometry.Vector3D vector3D87 = vector3D79.add((-1.0d), vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D87.negate();
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotation5.applyInverseTo(vector3D87);
        double double90 = rotation5.getQ0();
        double double91 = rotation5.getQ0();
        double double92 = rotation5.getQ0();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1.0d + "'", double91 == 1.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1.0d + "'", double92 == 1.0d);
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA1();
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation16 = rotation9.applyInverseTo(rotation15);
        double double17 = rotation16.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D18.subtract(1.0d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder32 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder32.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D37.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D37);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D28, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation43 = rotation42.revert();
        org.apache.commons.math.geometry.Rotation rotation44 = rotation16.applyTo(rotation43);
        double[][] doubleArray45 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException46 = new org.apache.commons.math.geometry.NotARotationMatrixException("ZXY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZY", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException48 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray45);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException49 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: hi!", (java.lang.Object[]) doubleArray45);
        java.lang.Throwable[] throwableArray50 = notARotationMatrixException49.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException52 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str53 = cardanEulerSingularityException52.getPattern();
        java.lang.String str54 = cardanEulerSingularityException52.getPattern();
        java.lang.Throwable[] throwableArray55 = cardanEulerSingularityException52.getSuppressed();
        java.lang.Throwable[] throwableArray56 = cardanEulerSingularityException52.getSuppressed();
        java.lang.String str57 = cardanEulerSingularityException52.getPattern();
        notARotationMatrixException49.addSuppressed((java.lang.Throwable) cardanEulerSingularityException52);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation();
        double double61 = rotation60.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(rotationOrder62, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation68 = rotation67.revert();
        double[][] doubleArray69 = rotation68.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation70 = rotation60.applyInverseTo(rotation68);
        double[][] doubleArray71 = rotation70.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException72 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray71);
        cardanEulerSingularityException52.addSuppressed((java.lang.Throwable) notARotationMatrixException72);
        java.lang.String str74 = notARotationMatrixException72.toString();
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotationOrder32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(rotation43);
        org.junit.Assert.assertNotNull(rotation44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Euler angles singularity" + "'", str53, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Euler angles singularity" + "'", str54, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Euler angles singularity" + "'", str57, "Euler angles singularity");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(rotation70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity" + "'", str74, "org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity");
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.3273551284312965d, 1.5782053812492458d, 0.04118815743782517d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D3.subtract(0.0d, vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D1.subtract(vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D27.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.add((-1.0d), vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D38 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D3, (double) 100.0f, vector3D11, (double) (short) -1, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D11.add((-1.0d), vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D50.subtract(0.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D43.subtract(1.0d, vector3D53);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D56.subtract(vector3D57);
        double double59 = vector3D58.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D11.subtract((double) 10.0f, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D60.orthogonal();
        double double62 = vector3D61.getAlpha();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 3.141592653589793d + "'", double62 == 3.141592653589793d);
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D3.scalarMultiply((double) 0.0f);
        double double10 = vector3D3.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder11 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str12 = rotationOrder11.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder11, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Rotation rotation17 = rotation16.revert();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D19.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D56 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D21, (double) 100.0f, vector3D29, (double) (short) -1, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D29.add((-1.0d), vector3D58);
        double double60 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D29.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str64 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D65.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D29.subtract((-0.0d), vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation17.applyTo(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D3.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D74 = new org.apache.commons.math.geometry.Vector3D((double) 'a', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D75 = new org.apache.commons.math.geometry.Vector3D(1.8228860923754615d, vector3D74);
        double double76 = vector3D74.getZ();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D70, vector3D74);
        double double78 = rotation77.getAngle();
        org.apache.commons.math.geometry.RotationOrder rotationOrder79 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D80 = rotationOrder79.getA1();
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder79, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotationOrder85.getA1();
        org.apache.commons.math.geometry.Rotation rotation90 = new org.apache.commons.math.geometry.Rotation(rotationOrder85, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation91 = rotation84.applyInverseTo(rotation90);
        org.apache.commons.math.geometry.Vector3D vector3D92 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D93 = rotation90.applyTo(vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D94 = rotation90.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder95 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D96 = rotationOrder95.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D97 = rotationOrder95.getA2();
        double[] doubleArray98 = rotation90.getAngles(rotationOrder95);
        org.apache.commons.math.geometry.Rotation rotation99 = rotation77.applyInverseTo(rotation90);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZYZ" + "'", str12, "ZYZ");
        org.junit.Assert.assertNotNull(rotation17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ZXY" + "'", str64, "ZXY");
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.23892621530389604d + "'", double78 == 0.23892621530389604d);
        org.junit.Assert.assertNotNull(rotationOrder79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(rotation91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertNotNull(rotationOrder95);
        org.junit.Assert.assertNotNull(vector3D96);
        org.junit.Assert.assertNotNull(vector3D97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-0.657879182722611, 0.47402663624573416, 1.8024949709136886]");
        org.junit.Assert.assertNotNull(rotation99);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.0d), (-0.3691205271584663d), (double) (short) -1, 0.24893698743024015d, true);
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation18 = rotation11.applyInverseTo(rotation17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation30.revert();
        org.apache.commons.math.geometry.Rotation rotation33 = rotation18.applyTo(rotation32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D38.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D42 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D41.subtract((double) 0, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str50 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D52 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder49.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder49, (double) ' ', (double) '4', (double) 'a');
        java.lang.String str58 = rotationOrder49.toString();
        org.apache.commons.math.geometry.Vector3D vector3D59 = rotationOrder49.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D60 = rotationOrder49.getA2();
        double double61 = vector3D60.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D41.add((double) 100L, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotation18.applyTo(vector3D60);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation68 = new org.apache.commons.math.geometry.Rotation(rotationOrder64, (double) (short) 1, (-1.0d), 98.0d);
        double double69 = rotation68.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str71 = rotationOrder70.toString();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA3();
        double[] doubleArray73 = rotation68.getAngles(rotationOrder70);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation18.applyInverseTo(rotation68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder75 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder75.getA1();
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder75, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder81 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D82 = rotationOrder81.getA1();
        org.apache.commons.math.geometry.Rotation rotation86 = new org.apache.commons.math.geometry.Rotation(rotationOrder81, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation87 = rotation80.applyInverseTo(rotation86);
        org.apache.commons.math.geometry.Rotation rotation88 = rotation68.applyInverseTo(rotation87);
        org.apache.commons.math.geometry.Rotation rotation89 = rotation5.applyTo(rotation87);
        double[][] doubleArray90 = rotation5.getMatrix();
        double double91 = rotation5.getQ3();
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotation18);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ZXY" + "'", str50, "ZXY");
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ZXY" + "'", str58, "ZXY");
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.6654428555205447d + "'", double69 == 0.6654428555205447d);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ZXY" + "'", str71, "ZXY");
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-2.0323790881822563, -0.11021888658218676, -1.2726918719004534]");
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotationOrder75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(rotationOrder81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(rotation88);
        org.junit.Assert.assertNotNull(rotation89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.2274161076988142d + "'", double91 == 0.2274161076988142d);
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D35.subtract(1.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D48.subtract(vector3D49);
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D25, vector3D28, vector3D50);
        double double52 = vector3D50.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D50.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        double double61 = vector3D58.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D62.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D50.add(vector3D63);
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(vector3D64, Double.NaN);
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation66.getAxis();
        double double68 = rotation66.getQ1();
        double double69 = rotation66.getQ0();
        double[][] doubleArray70 = rotation66.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D72 = rotation66.applyTo(vector3D71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 3.141592653589793d + "'", double52 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 1.080456683454306d, (-0.5287508684135855d), 3.1330314046616845d);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder0.getA2();
        java.lang.String str19 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ZXZ" + "'", str19, "ZXZ");
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D11.subtract(0.0d, vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D11.subtract(1.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D24.subtract(vector3D25);
        double double27 = vector3D26.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotation10.applyTo(vector3D26);
        org.apache.commons.math.geometry.RotationOrder rotationOrder29 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str30 = rotationOrder29.toString();
        double[] doubleArray31 = rotation10.getAngles(rotationOrder29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder29.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder29.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-524.7609754926534d), vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D33.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) ' ', (-2.0d), 16.62763166455332d);
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder36.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D51 = new org.apache.commons.math.geometry.Vector3D((double) (-1L), (-0.24987572770084396d), (-0.476811323902129d));
        org.apache.commons.math.geometry.Vector3D vector3D52 = new org.apache.commons.math.geometry.Vector3D(0.6918710786346925d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D46.add(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D33, vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ZXY" + "'", str30, "ZXY");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-2.557519189487725, -1.141592653589794, 0.9196683966043534]");
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str6 = rotationOrder5.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder5.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D31.negate();
        double double33 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D7, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D34 = new org.apache.commons.math.geometry.Vector3D((-0.45973278686101987d), vector3D3, (-0.8414709848078965d), vector3D7);
        org.apache.commons.math.geometry.RotationOrder rotationOrder36 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder36.getA1();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(rotationOrder36, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation47 = rotation41.applyTo(rotation46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder48.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotation41.applyInverseTo(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(vector3D51, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D51.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D3.subtract((-1.0027048888022863d), vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D(0.09138363287001147d, 0.9232154062269446d, 1.1071487177940904d);
        double double60 = vector3D59.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D3.add(vector3D59);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(vector3D59, 0.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder64 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder64.getA1();
        double double66 = vector3D65.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D67 = rotation63.applyTo(vector3D65);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XZX" + "'", str6, "XZX");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.0d + "'", double33 == 2.0d);
        org.junit.Assert.assertNotNull(rotationOrder36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.4721336309126734d + "'", double60 == 1.4721336309126734d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.5707963267948966d + "'", double66 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D67);
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D5 = new org.apache.commons.math.geometry.Vector3D();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract(0.0d, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D8, vector3D12);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D20.subtract(0.0d, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D18.subtract(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D55 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D20, (double) 100.0f, vector3D28, (double) (short) -1, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D12.subtract(vector3D28);
        double double57 = vector3D12.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D12.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D59 = new org.apache.commons.math.geometry.Vector3D((double) '#', vector3D5, 0.0d, vector3D58);
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(vector3D3, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D58.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D58.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D63 = new org.apache.commons.math.geometry.Vector3D(0.02306666940267499d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D58.scalarMultiply((-0.897069476986934d));
        double double66 = vector3D65.getAlpha();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-3.141592653589793d) + "'", double66 == (-3.141592653589793d));
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D13.subtract(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D15.add((-1.0d), vector3D17);
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D17, 100.0d);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation25.revert();
        double[][] doubleArray27 = rotation26.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder28, (-1.0d), (-3.110368056629538d), (double) '4');
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotationOrder28.getA3();
        double[] doubleArray34 = rotation26.getAngles(rotationOrder28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder35 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str36 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder35.getA1();
        java.lang.String str43 = rotationOrder35.toString();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D45 = rotationOrder35.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder35.getA2();
        org.apache.commons.math.geometry.Rotation rotation50 = new org.apache.commons.math.geometry.Rotation(rotationOrder35, (-0.0d), 0.20776853027692543d, 0.4376205782278174d);
        double[] doubleArray51 = rotation26.getAngles(rotationOrder35);
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, -0.0, 0.5309649148733835]");
        org.junit.Assert.assertNotNull(rotationOrder35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZYZ" + "'", str36, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ZYZ" + "'", str43, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.5707963267948966, 0.530964914873383, 1.5707963267948966]");
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation13 = rotation6.applyInverseTo(rotation12);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation12.applyTo(vector3D14);
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotation12.getAxis();
        double[][] doubleArray17 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(doubleArray17, (double) (short) 1);
        org.apache.commons.math.geometry.RotationOrder rotationOrder21 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str22 = rotationOrder21.toString();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder21.getA1();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation(vector3D23, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation26 = rotation20.applyInverseTo(rotation25);
        double[][] doubleArray27 = rotation25.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(doubleArray27, 1.224744871391589d);
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(vector3D30, (double) (-1L));
        org.apache.commons.math.geometry.Rotation rotation33 = rotation32.revert();
        org.apache.commons.math.geometry.Rotation rotation34 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation35 = rotation33.revert();
        org.apache.commons.math.geometry.Rotation rotation36 = rotation29.applyTo(rotation35);
        double double37 = rotation29.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(rotationOrder21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ZYZ" + "'", str22, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotation33);
        org.junit.Assert.assertNotNull(rotation34);
        org.junit.Assert.assertNotNull(rotation35);
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.7683919425686427d + "'", double37 == 0.7683919425686427d);
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation11 = rotation5.applyTo(rotation10);
        double double12 = rotation5.getQ3();
        org.apache.commons.math.geometry.Rotation rotation13 = rotation5.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder14.getA2();
        double[] doubleArray17 = rotation5.getAngles(rotationOrder14);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(rotation11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.10830291305827339d + "'", double12 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.852473112690128, -0.7450986590868034, -0.2913687794233133]");
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(4.879239129211843E-4d, 0.9919057104354079d, (double) (byte) 1, 0.0d, false);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.13322414396144652d, 0.015702548507409472d, 1.5786086678549978d, 1.590031694590281d, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-9.813077866773593E-18d), (-8.987746532716779d));
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-1.0d), 1.9456840668546524d, (-0.7071067811865475d), (double) 10, false);
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation31 = rotation24.applyInverseTo(rotation30);
        org.apache.commons.math.geometry.Rotation rotation32 = rotation18.applyTo(rotation30);
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder39 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotationOrder39.getA1();
        org.apache.commons.math.geometry.Rotation rotation44 = new org.apache.commons.math.geometry.Rotation(rotationOrder39, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation45 = rotation38.applyInverseTo(rotation44);
        double double46 = rotation45.getQ2();
        org.apache.commons.math.geometry.Rotation rotation47 = rotation18.applyInverseTo(rotation45);
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D61 = rotationOrder60.getA1();
        org.apache.commons.math.geometry.Rotation rotation65 = new org.apache.commons.math.geometry.Rotation(rotationOrder60, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation66 = rotation59.applyInverseTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation67 = rotation53.applyTo(rotation65);
        org.apache.commons.math.geometry.Rotation rotation68 = rotation18.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.Rotation rotation69 = rotation11.applyTo(rotation67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation67.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotation67.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder72 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str73 = rotationOrder72.toString();
        org.apache.commons.math.geometry.Vector3D vector3D74 = rotationOrder72.getA1();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(vector3D74, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(vector3D71, vector3D74);
        double double78 = rotation77.getQ3();
        double double79 = rotation77.getQ1();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation5.applyInverseTo(rotation77);
        double double81 = rotation80.getAngle();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation80.revert();
        org.apache.commons.math.geometry.Vector3D vector3D83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D84 = rotation82.applyInverseTo(vector3D83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotation31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotationOrder39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNotNull(rotation47);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotation66);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertNotNull(rotation68);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZYZ" + "'", str73, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-0.05546668618914311d) + "'", double79 == (-0.05546668618914311d));
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(rotation82);
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(24.882865501017502d, (double) (byte) -1, (-634.6978979926987d), (-0.21114476788661177d), false);
        double double6 = rotation5.getAngle();
        org.apache.commons.math.geometry.Rotation rotation7 = rotation5.revert();
        double double8 = rotation7.getAngle();
        double double9 = rotation7.getQ1();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotation7.getAxis();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(rotation7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertNotNull(vector3D10);
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(vector3D16, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D16);
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(vector3D16, (-1.0d));
        double double30 = vector3D16.getZ();
        double double31 = vector3D16.getZ();
        double double32 = vector3D16.getAlpha();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 3.141592653589793d + "'", double32 == 3.141592653589793d);
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.apache.commons.math.geometry.RotationOrder rotationOrder2 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder2.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder2.getA2();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder2, (double) 'a', (double) (short) 100, 100.0022140464598d);
        double[][] doubleArray13 = rotation12.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XZX", (java.lang.Object[]) doubleArray13);
        java.lang.Throwable[] throwableArray15 = notARotationMatrixException14.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException16 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) throwableArray15);
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException16.getSuppressed();
        java.lang.Object[] objArray18 = notARotationMatrixException16.getArguments();
        org.junit.Assert.assertNotNull(rotationOrder2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        java.lang.String str6 = notARotationMatrixException5.getPattern();
        java.lang.String str7 = notARotationMatrixException5.getPattern();
        java.lang.Throwable[] throwableArray8 = notARotationMatrixException5.getSuppressed();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder10.getA1();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder10, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation21 = rotation15.applyTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation15.applyInverseTo(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D40.subtract(0.0d, vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double51 = vector3D50.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D47.subtract(0.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D40.subtract(1.0d, vector3D50);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D53.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D57.subtract(0.0d, vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D55.add((-1.0d), vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D64 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D29, (double) 100.0f, vector3D37, (double) (short) -1, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D37.add((-1.0d), vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D68 = rotation15.applyTo(vector3D66);
        double double69 = rotation15.getQ2();
        double double70 = rotation15.getQ2();
        double[][] doubleArray71 = rotation15.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(doubleArray71, 0.5496694388267763d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException74 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray71);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) notARotationMatrixException74);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str6, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity" + "'", str7, "org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1.0d + "'", double51 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-0.7683919425686428d) + "'", double69 == (-0.7683919425686428d));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-0.7683919425686428d) + "'", double70 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(doubleArray71);
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.zero;
        double double3 = vector3D2.getNorm();
        org.apache.commons.math.geometry.RotationOrder rotationOrder5 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation9 = new org.apache.commons.math.geometry.Rotation(rotationOrder5, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double14 = vector3D13.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = vector3D10.subtract(0.0d, vector3D13);
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D10.subtract(1.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D23.subtract(vector3D24);
        double double26 = vector3D25.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotation9.applyInverseTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D25.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((-1.5707963267948966d), vector3D2, 0.8342233605065102d, vector3D28);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, 0.7071067811865476d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder31.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotationOrder31.getA3();
        double double39 = vector3D38.getZ();
        org.apache.commons.math.geometry.Rotation rotation41 = new org.apache.commons.math.geometry.Rotation(vector3D38, (-0.7683919425686428d));
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D38.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.add((-1.0d), vector3D61);
        org.apache.commons.math.geometry.RotationOrder rotationOrder68 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotationOrder68.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D72.subtract(0.0d, vector3D75);
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D70.subtract(vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D79 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double80 = vector3D79.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double83 = vector3D82.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = vector3D79.subtract(0.0d, vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D86 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double87 = vector3D86.getX();
        org.apache.commons.math.geometry.Vector3D vector3D89 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double90 = vector3D89.getX();
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D86.subtract(0.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D79.subtract(1.0d, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D93 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D94 = vector3D92.subtract(vector3D93);
        org.apache.commons.math.geometry.Rotation rotation95 = new org.apache.commons.math.geometry.Rotation(vector3D67, vector3D69, vector3D72, vector3D94);
        double double96 = vector3D72.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D97 = new org.apache.commons.math.geometry.Vector3D(0.4169994583486512d, vector3D42, 7.572637263022346d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D98 = vector3D2.add(vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D99 = new org.apache.commons.math.geometry.Vector3D(0.4246656848449518d, vector3D98);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder5);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(rotationOrder68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 1.0d + "'", double80 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1.0d + "'", double83 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1.0d + "'", double90 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
        org.junit.Assert.assertNotNull(vector3D94);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D98);
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) ' ', (double) '4', (double) 'a');
        double[][] doubleArray9 = rotation8.getMatrix();
        org.apache.commons.math.geometry.RotationOrder rotationOrder10 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str11 = rotationOrder10.toString();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder10.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D12.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotation8.applyTo(vector3D12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder16 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder16.getA1();
        org.apache.commons.math.geometry.Rotation rotation21 = new org.apache.commons.math.geometry.Rotation(rotationOrder16, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation27 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation28 = rotation21.applyInverseTo(rotation27);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D30 = rotation27.applyTo(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotation27.getAxis();
        org.apache.commons.math.geometry.Rotation rotation32 = rotation8.applyTo(rotation27);
        double double33 = rotation8.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZYX;
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder34.getA1();
        double[] doubleArray36 = rotation8.getAngles(rotationOrder34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotation8.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D37.scalarMultiply((-0.40799733592974274d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZXY" + "'", str1, "ZXY");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(rotationOrder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ZXY" + "'", str11, "ZXY");
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(rotationOrder16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotation28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(rotation32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-0.6502970659532881d) + "'", double33 == (-0.6502970659532881d));
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-2.942186120029216, -0.06191210684245344, 1.4191356246734994]");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        double double6 = vector3D3.getDelta();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D3, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotation11.applyTo(vector3D13);
        double double15 = rotation11.getQ1();
        org.apache.commons.math.geometry.Rotation rotation16 = rotation8.applyTo(rotation11);
        org.apache.commons.math.geometry.RotationOrder rotationOrder17 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder17.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder17, 0.10830291305827339d, (-634.6978979926987d), 0.3691205271584663d);
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder17.getA1();
        double[] doubleArray24 = rotation16.getAngles(rotationOrder17);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(rotationOrder31, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation37 = rotation30.applyInverseTo(rotation36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotation36.applyTo(vector3D38);
        org.apache.commons.math.geometry.Rotation rotation45 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder46 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D47 = rotationOrder46.getA1();
        org.apache.commons.math.geometry.Rotation rotation51 = new org.apache.commons.math.geometry.Rotation(rotationOrder46, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder52 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D53 = rotationOrder52.getA1();
        org.apache.commons.math.geometry.Rotation rotation57 = new org.apache.commons.math.geometry.Rotation(rotationOrder52, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation58 = rotation51.applyInverseTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation59 = rotation45.applyTo(rotation57);
        org.apache.commons.math.geometry.Rotation rotation60 = rotation36.applyTo(rotation57);
        double double61 = rotation36.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotation36.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder63 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder63.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = rotationOrder63.getA2();
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotationOrder63.getA2();
        double[] doubleArray71 = rotation36.getAngles(rotationOrder63);
        double[] doubleArray72 = rotation16.getAngles(rotationOrder63);
        java.lang.String str73 = rotationOrder63.toString();
        org.apache.commons.math.geometry.Rotation rotation77 = new org.apache.commons.math.geometry.Rotation(rotationOrder63, 0.1636155811153862d, (-0.30671879673173297d), 1.9758836803051556d);
        org.apache.commons.math.geometry.Rotation rotation78 = rotation77.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(rotation16);
        org.junit.Assert.assertNotNull(rotationOrder17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[1.9999999999999998, -0.0, -0.9999999999999998]");
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(rotation58);
        org.junit.Assert.assertNotNull(rotation59);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.10830291305827339d + "'", double61 == 0.10830291305827339d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotationOrder63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[1.8099566507350529, 2.0413190668629926, -2.227294405064556]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0423341135942998, 1.7975803847849186, -0.36760076600805064]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ZXZ" + "'", str73, "ZXZ");
        org.junit.Assert.assertNotNull(rotation78);
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        org.apache.commons.math.geometry.Vector3D vector3D2 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = vector3D4.subtract(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D2.subtract(vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D15.subtract(1.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D28.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D30.add((-1.0d), vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D39 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D4, (double) 100.0f, vector3D12, (double) (short) -1, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D12.add((-1.0d), vector3D41);
        double double43 = vector3D12.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder45 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D46 = rotationOrder45.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D12.add((double) 1.0f, vector3D46);
        org.apache.commons.math.geometry.RotationOrder rotationOrder49 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D50 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D51 = rotationOrder49.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D53 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double54 = vector3D53.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D53.subtract(0.0d, vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D53.subtract(1.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D66.subtract(vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D70.subtract(0.0d, vector3D73);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D68.add((-1.0d), vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D76.negate();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D76.subtract(vector3D78);
        org.apache.commons.math.geometry.Vector3D vector3D80 = new org.apache.commons.math.geometry.Vector3D((double) 0.0f, vector3D47, 0.5153978362128364d, vector3D51, 0.6654428555205447d, vector3D76);
        double double81 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D51.orthogonal();
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(rotationOrder45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(rotationOrder49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        org.apache.commons.math.geometry.Rotation rotation13 = rotation11.revert();
        org.apache.commons.math.geometry.Rotation rotation19 = new org.apache.commons.math.geometry.Rotation((double) 100L, 24.882865501017502d, 0.42487699275774343d, 1.4533522819483131d, true);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation11.applyInverseTo(rotation19);
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotation20.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.subtract(vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D31.subtract(1.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D46 = vector3D44.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D46.add((-1.0d), vector3D48);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D66.subtract(1.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D81 = vector3D79.subtract(vector3D80);
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(vector3D54, vector3D56, vector3D59, vector3D81);
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D22.subtract(vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D86 = new org.apache.commons.math.geometry.Vector3D((-0.42955688895000704d), (-0.1934112408002968d));
        double double87 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D83, vector3D86);
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D21.add(vector3D83);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertNotNull(rotation13);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2.6765958501582725d + "'", double87 == 2.6765958501582725d);
        org.junit.Assert.assertNotNull(vector3D88);
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10.0f, (double) 'a', (double) (short) 100);
        double double6 = rotation5.getQ2();
        double double7 = rotation5.getAngle();
        double[][] doubleArray8 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(doubleArray8, 2.4924377791714627d);
        double double11 = rotation10.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D19.subtract(0.0d, vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D12.subtract(1.0d, vector3D22);
        org.apache.commons.math.geometry.RotationOrder rotationOrder26 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder26.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D28.subtract(0.0d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D31.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D27, vector3D31);
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation(vector3D22, vector3D27);
        org.apache.commons.math.geometry.Rotation rotation37 = rotation36.revert();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(100.0d, (-634.6978979926987d), 98.0d);
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(vector3D41, (double) (-1));
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D44.subtract(1.0d, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.subtract(vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D59.add((-1.0d), vector3D61);
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D41.subtract(vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D69 = rotation37.applyTo(vector3D68);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D72 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder70.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Rotation rotation82 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, 25.06596560241331d, 3.2087642143727657d, 2.0d);
        double[] doubleArray83 = rotation37.getAngles(rotationOrder70);
        org.apache.commons.math.geometry.Vector3D vector3D84 = rotationOrder70.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D85.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotation10.applyTo(vector3D86);
        double double88 = vector3D86.getZ();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.5153978362128364d + "'", double6 == 0.5153978362128364d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 3.1330314046616845d + "'", double7 == 3.1330314046616845d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-0.19341124080029679d) + "'", double11 == (-0.19341124080029679d));
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(rotation37);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-0.0, 0.0, 1.5707963267948963]");
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7062399578631842d, (-0.24445647922771854d), (-57.493324223256394d), 0.37481384288189196d, true);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.junit.Assert.assertNotNull(rotation6);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Throwable[] throwableArray2 = cardanEulerSingularityException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray12 = rotation11.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray12);
        java.lang.Throwable[] throwableArray15 = notARotationMatrixException14.getSuppressed();
        java.lang.Throwable[] throwableArray16 = notARotationMatrixException14.getSuppressed();
        java.lang.Throwable[] throwableArray17 = notARotationMatrixException14.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Object[] objArray21 = cardanEulerSingularityException19.getArguments();
        java.lang.String str22 = cardanEulerSingularityException19.getPattern();
        java.lang.Object[] objArray23 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray24 = cardanEulerSingularityException19.getSuppressed();
        java.lang.String str25 = cardanEulerSingularityException19.getPattern();
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D41 = rotation38.applyTo(vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotation38.getAxis();
        double[][] doubleArray43 = rotation38.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException44 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray43);
        cardanEulerSingularityException19.addSuppressed((java.lang.Throwable) notARotationMatrixException44);
        notARotationMatrixException14.addSuppressed((java.lang.Throwable) cardanEulerSingularityException19);
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) notARotationMatrixException14);
        java.lang.String str48 = notARotationMatrixException14.getPattern();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Euler angles singularity" + "'", str22, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Euler angles singularity" + "'", str25, "Euler angles singularity");
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException4 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray5 = cardanEulerSingularityException4.getArguments();
        java.lang.Throwable[] throwableArray6 = cardanEulerSingularityException4.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.String str10 = cardanEulerSingularityException8.getPattern();
        cardanEulerSingularityException4.addSuppressed((java.lang.Throwable) cardanEulerSingularityException8);
        java.lang.Object[] objArray12 = cardanEulerSingularityException8.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException13 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: Euler angles singularity", objArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException14 = new org.apache.commons.math.geometry.NotARotationMatrixException("XZX", objArray12);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException15 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", objArray12);
        java.lang.Object[] objArray16 = notARotationMatrixException15.getArguments();
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Euler angles singularity" + "'", str10, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double23 = vector3D22.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D22.subtract(0.0d, vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D28 = vector3D20.add((-1.0d), vector3D22);
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(vector3D20, (double) '#');
        org.apache.commons.math.geometry.Vector3D vector3D31 = new org.apache.commons.math.geometry.Vector3D((-0.0d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D2.subtract(0.496669722445646d, vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D34.scalarMultiply(649.9580153489533d);
        double double37 = vector3D36.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D(0.23869349855450123d, (-2.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder42 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D43 = rotationOrder42.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder42, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder42.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D41.subtract(vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D36.add(1.5501807665642404d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D54 = new org.apache.commons.math.geometry.Vector3D(0.28742517866390543d, 5200.0d);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D51, vector3D54);
        double double56 = vector3D55.getDelta();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1.5707963267948966d) + "'", double37 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(rotationOrder42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.8864541477463697d) + "'", double56 == (-0.8864541477463697d));
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.9036922050915068d), 0.6654428555205447d);
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D2.orthogonal();
        double double4 = vector3D3.getDelta();
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.7858778772774819d + "'", double4 == 0.7858778772774819d);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D8 = rotationOrder7.getA1();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder7, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation19 = rotation12.applyInverseTo(rotation18);
        org.apache.commons.math.geometry.Rotation rotation20 = rotation18.revert();
        org.apache.commons.math.geometry.Rotation rotation21 = rotation5.applyInverseTo(rotation20);
        org.apache.commons.math.geometry.RotationOrder rotationOrder22 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str23 = rotationOrder22.toString();
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder22.getA1();
        org.apache.commons.math.geometry.Rotation rotation30 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, Double.NaN, 10.0d, 0.42487699275774343d);
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder22.getA3();
        double[] doubleArray33 = rotation21.getAngles(rotationOrder22);
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder22.getA2();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.8623079947860166d, 1.080456683454306d, (-0.16624968048555705d));
        org.apache.commons.math.geometry.Vector3D vector3D39 = rotationOrder22.getA3();
        org.apache.commons.math.geometry.Rotation rotation43 = new org.apache.commons.math.geometry.Rotation(rotationOrder22, 0.5287508684135855d, (-6.233699021863243E-4d), (-0.22112372634864869d));
        org.apache.commons.math.geometry.Vector3D vector3D44 = rotationOrder22.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.9202635195876083d) + "'", double6 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotation20);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertNotNull(rotationOrder22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ZXY" + "'", str23, "ZXY");
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-3.0113006777231797, 0.6179476270033603, -1.384127546483252]");
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D44);
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D6 = new org.apache.commons.math.geometry.Vector3D((double) 100L, vector3D5);
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (-283.0416032615692d));
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusJ;
        org.apache.commons.math.geometry.Rotation rotation3 = new org.apache.commons.math.geometry.Rotation(vector3D1, (double) (-1L));
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation3.applyTo(vector3D5);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D5.negate();
        org.apache.commons.math.geometry.Vector3D vector3D8 = vector3D7.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D9 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D8);
        double double10 = vector3D9.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D3 = vector3D1.scalarMultiply((-0.19537365596023334d));
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.7620179160984356d, 0.0d, (-0.42955688895000704d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation15 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation15.applyTo(vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D22.negate();
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D23.scalarMultiply(0.15135620392549756d);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D8.subtract(vector3D23);
        double double28 = org.apache.commons.math.geometry.Vector3D.angle(vector3D3, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D23.scalarMultiply((-0.126035424677324d));
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-2.7755575615628914E-17d) + "'", double24 == (-2.7755575615628914E-17d));
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.1460183660255168d + "'", double28 == 2.1460183660255168d);
        org.junit.Assert.assertNotNull(vector3D30);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException1 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray2 = cardanEulerSingularityException1.getArguments();
        java.lang.Object[] objArray3 = cardanEulerSingularityException1.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException5 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray6 = cardanEulerSingularityException5.getArguments();
        java.lang.Object[] objArray7 = cardanEulerSingularityException5.getArguments();
        java.lang.String str8 = cardanEulerSingularityException5.getPattern();
        java.lang.Object[] objArray9 = cardanEulerSingularityException5.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException5.getSuppressed();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException5.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException5);
        java.lang.Throwable[] throwableArray13 = cardanEulerSingularityException1.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException15 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray16 = cardanEulerSingularityException15.getArguments();
        org.apache.commons.math.geometry.Rotation rotation25 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray26 = rotation25.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException27 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException28 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray26);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException31 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray32 = cardanEulerSingularityException31.getArguments();
        java.lang.Throwable[] throwableArray33 = cardanEulerSingularityException31.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException34 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray33);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray37 = cardanEulerSingularityException36.getArguments();
        java.lang.Throwable[] throwableArray38 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException40 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray41 = cardanEulerSingularityException40.getArguments();
        java.lang.String str42 = cardanEulerSingularityException40.getPattern();
        cardanEulerSingularityException36.addSuppressed((java.lang.Throwable) cardanEulerSingularityException40);
        notARotationMatrixException34.addSuppressed((java.lang.Throwable) cardanEulerSingularityException36);
        notARotationMatrixException28.addSuppressed((java.lang.Throwable) notARotationMatrixException34);
        java.lang.Object[] objArray46 = notARotationMatrixException34.getArguments();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException47 = new org.apache.commons.math.geometry.NotARotationMatrixException("", objArray46);
        cardanEulerSingularityException15.addSuppressed((java.lang.Throwable) notARotationMatrixException47);
        java.lang.String str49 = cardanEulerSingularityException15.getPattern();
        java.lang.Throwable[] throwableArray50 = cardanEulerSingularityException15.getSuppressed();
        cardanEulerSingularityException1.addSuppressed((java.lang.Throwable) cardanEulerSingularityException15);
        java.lang.Object[] objArray52 = cardanEulerSingularityException15.getArguments();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Euler angles singularity" + "'", str8, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Euler angles singularity" + "'", str42, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Euler angles singularity" + "'", str49, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        java.lang.String str9 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D10.negate();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D16 = new org.apache.commons.math.geometry.Vector3D(0.7071067811865474d, (double) (byte) 1, 0.3691205271584663d);
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(vector3D12, vector3D16);
        org.apache.commons.math.geometry.RotationOrder rotationOrder18 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Rotation rotation23 = new org.apache.commons.math.geometry.Rotation(rotationOrder18, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder18.getA2();
        java.lang.String str26 = rotationOrder18.toString();
        java.lang.String str27 = rotationOrder18.toString();
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder18.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D28.negate();
        double double30 = vector3D28.getX();
        org.apache.commons.math.geometry.Rotation rotation36 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray37 = rotation36.getMatrix();
        org.apache.commons.math.geometry.Vector3D vector3D38 = rotation36.getAxis();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D28.subtract(vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D40 = rotation17.applyTo(vector3D39);
        org.apache.commons.math.geometry.Rotation rotation42 = new org.apache.commons.math.geometry.Rotation(vector3D40, (-0.42955688895000704d));
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(1.470374083739041d, (-0.29067956475864215d), (-0.7071067811865476d), 1.9088308216461696d, true);
        org.apache.commons.math.geometry.Rotation rotation49 = rotation42.applyTo(rotation48);
        double double50 = rotation48.getQ2();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXY" + "'", str8, "ZXY");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ZXY" + "'", str9, "ZXY");
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(rotationOrder18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXY" + "'", str26, "ZXY");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ZXY" + "'", str27, "ZXY");
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(rotation49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-0.2797242814672428d) + "'", double50 == (-0.2797242814672428d));
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA1();
        java.lang.String str4 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder1.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D5.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder8 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder8.getA1();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(rotationOrder8, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder14, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation19 = rotation13.applyTo(rotation18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder20 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder20.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder20.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotation13.applyInverseTo(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D23.orthogonal();
        double double25 = vector3D24.getY();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D6.add((-0.6551684173807351d), vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = new org.apache.commons.math.geometry.Vector3D(1.0728787707619287d, vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double32 = vector3D31.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D31.subtract(0.0d, vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D29.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double63 = vector3D62.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D59.subtract(0.0d, vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D57.add((-1.0d), vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D66 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D31, (double) 100.0f, vector3D39, (double) (short) -1, vector3D59);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D39.add((-1.0d), vector3D68);
        double double70 = vector3D39.getX();
        double double71 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D27, vector3D39);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "YXZ" + "'", str2, "YXZ");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "YXZ" + "'", str4, "YXZ");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(rotationOrder8);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(rotation19);
        org.junit.Assert.assertNotNull(rotationOrder20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.8846219209894443d + "'", double25 == 0.8846219209894443d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.0d) + "'", double71 == (-0.0d));
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotationOrder25.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D27.subtract(vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D36.subtract(1.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D50 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D49.subtract(vector3D50);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D26, vector3D29, vector3D51);
        double double53 = vector3D51.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D51.scalarMultiply(100.0d);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double57 = vector3D56.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double60 = vector3D59.getX();
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D56.subtract(0.0d, vector3D59);
        double double62 = vector3D59.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D59.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D63.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D51.add(vector3D64);
        org.apache.commons.math.geometry.Rotation rotation67 = new org.apache.commons.math.geometry.Rotation(vector3D65, Double.NaN);
        org.apache.commons.math.geometry.Rotation rotation73 = new org.apache.commons.math.geometry.Rotation(98.0d, (double) 0, 0.5153978362128364d, (double) 0.0f, true);
        org.apache.commons.math.geometry.Rotation rotation74 = rotation67.applyTo(rotation73);
        org.apache.commons.math.geometry.Rotation rotation75 = rotation73.revert();
        double[][] doubleArray76 = rotation73.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation78 = new org.apache.commons.math.geometry.Rotation(doubleArray76, 0.12637150995481888d);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException79 = new org.apache.commons.math.geometry.NotARotationMatrixException("", (java.lang.Object[]) doubleArray76);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 3.141592653589793d + "'", double53 == 3.141592653589793d);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(rotation74);
        org.junit.Assert.assertNotNull(rotation75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(2.406338760102135d, 0.8118542883431961d, 0.7042369761831051d);
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D6, (double) 100.0f, vector3D14, (double) (short) -1, vector3D34);
        double double42 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        double double57 = vector3D54.getDelta();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D6, (double) (byte) 10, vector3D49, (double) (short) -1, vector3D54, (double) ' ', vector3D66);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D66);
        org.apache.commons.math.geometry.RotationOrder rotationOrder73 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str74 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D75 = rotationOrder73.getA1();
        java.lang.String str76 = rotationOrder73.toString();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D78 = rotationOrder73.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D79 = rotationOrder73.getA1();
        double[] doubleArray80 = rotation72.getAngles(rotationOrder73);
        org.apache.commons.math.geometry.Rotation rotation84 = new org.apache.commons.math.geometry.Rotation(rotationOrder73, 0.2590347239999257d, 0.0d, 0.9979079855178695d);
        java.lang.String str85 = rotationOrder73.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(rotationOrder73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "YXZ" + "'", str74, "YXZ");
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "YXZ" + "'", str76, "YXZ");
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, -0.0, -1.5707963267948963]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "YXZ" + "'", str85, "YXZ");
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder6 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder6.getA1();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder6, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation12 = rotation5.applyInverseTo(rotation11);
        double double13 = rotation12.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = vector3D21.subtract(0.0d, vector3D24);
        org.apache.commons.math.geometry.Vector3D vector3D27 = vector3D14.subtract(1.0d, vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder28 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D29 = rotationOrder28.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = vector3D30.subtract(0.0d, vector3D33);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D33.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D29, vector3D33);
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(vector3D24, vector3D29);
        org.apache.commons.math.geometry.Rotation rotation39 = rotation38.revert();
        org.apache.commons.math.geometry.Rotation rotation40 = rotation12.applyTo(rotation39);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str42 = rotationOrder41.toString();
        double[] doubleArray43 = rotation39.getAngles(rotationOrder41);
        java.lang.String str44 = rotationOrder41.toString();
        org.apache.commons.math.geometry.Rotation rotation48 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (-0.02347577466130089d), 3.1382470946270726d, 18.533491989947702d);
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (-919.4168818468384d), 0.45837097592276116d, 1.5707963267948966d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder53 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D54 = rotationOrder53.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder53.getA2();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) (byte) 10, 1.0d, 0.0d);
        org.apache.commons.math.geometry.Rotation rotation63 = new org.apache.commons.math.geometry.Rotation(rotationOrder53, (double) 1.0f, (double) (short) 1, 3.141592653589793d);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation52.applyInverseTo(rotation63);
        org.apache.commons.math.geometry.RotationOrder rotationOrder65 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation69 = new org.apache.commons.math.geometry.Rotation(rotationOrder65, (double) (short) 1, (-1.0d), 98.0d);
        org.apache.commons.math.geometry.Vector3D vector3D70 = rotation69.getAxis();
        org.apache.commons.math.geometry.Rotation rotation76 = new org.apache.commons.math.geometry.Rotation(100.0d, Double.NaN, (double) (short) 0, (double) (byte) 100, true);
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotation76.getAxis();
        double double78 = rotation76.getQ0();
        double double79 = rotation76.getQ0();
        org.apache.commons.math.geometry.Rotation rotation80 = rotation69.applyTo(rotation76);
        double double81 = rotation80.getQ3();
        org.apache.commons.math.geometry.Rotation rotation82 = rotation63.applyInverseTo(rotation80);
        double double83 = rotation63.getAngle();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(rotationOrder6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotation12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder28);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertNotNull(rotation40);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "XYX" + "'", str42, "XYX");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 1.5707963267948963, 0.0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "XYX" + "'", str44, "XYX");
        org.junit.Assert.assertNotNull(rotationOrder53);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation64);
        org.junit.Assert.assertNotNull(rotationOrder65);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(rotation80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2.677747915928636d + "'", double83 == 2.677747915928636d);
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException2 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray3 = cardanEulerSingularityException2.getArguments();
        java.lang.Throwable[] throwableArray4 = cardanEulerSingularityException2.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException5 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray4);
        java.lang.Object[] objArray6 = notARotationMatrixException5.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException8 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray9 = cardanEulerSingularityException8.getArguments();
        java.lang.Throwable[] throwableArray10 = cardanEulerSingularityException8.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException12 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray13 = cardanEulerSingularityException12.getArguments();
        java.lang.String str14 = cardanEulerSingularityException12.getPattern();
        cardanEulerSingularityException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray16 = cardanEulerSingularityException12.getArguments();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException19 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray20 = cardanEulerSingularityException19.getArguments();
        java.lang.Throwable[] throwableArray21 = cardanEulerSingularityException19.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException22 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Euler angles singularity", (java.lang.Object[]) throwableArray21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException24 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray25 = cardanEulerSingularityException24.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException24.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException28 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray29 = cardanEulerSingularityException28.getArguments();
        java.lang.String str30 = cardanEulerSingularityException28.getPattern();
        cardanEulerSingularityException24.addSuppressed((java.lang.Throwable) cardanEulerSingularityException28);
        notARotationMatrixException22.addSuppressed((java.lang.Throwable) cardanEulerSingularityException24);
        cardanEulerSingularityException12.addSuppressed((java.lang.Throwable) notARotationMatrixException22);
        notARotationMatrixException5.addSuppressed((java.lang.Throwable) cardanEulerSingularityException12);
        java.lang.Object[] objArray35 = notARotationMatrixException5.getArguments();
        java.lang.Class<?> wildcardClass36 = objArray35.getClass();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Euler angles singularity" + "'", str14, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Euler angles singularity" + "'", str30, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str2 = rotationOrder1.toString();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (-0.4785186797839096d), 27.47493735326811d, (double) 'a');
        double double7 = rotation6.getQ3();
        org.apache.commons.math.geometry.Rotation rotation8 = rotation6.revert();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder9.getA1();
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Rotation rotation20 = new org.apache.commons.math.geometry.Rotation(rotationOrder15, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation21 = rotation14.applyInverseTo(rotation20);
        double double22 = rotation14.getQ2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder24 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder24.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D29.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D25, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D35.subtract(vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D48.subtract(0.0d, vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D48.subtract(1.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D62 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D63 = vector3D61.subtract(vector3D62);
        org.apache.commons.math.geometry.Vector3D vector3D65 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double66 = vector3D65.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double69 = vector3D68.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.subtract(0.0d, vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D63.add((-1.0d), vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D72 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D37, (double) 100.0f, vector3D45, (double) (short) -1, vector3D65);
        org.apache.commons.math.geometry.Vector3D vector3D73 = vector3D29.subtract(vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D75 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double76 = vector3D75.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double79 = vector3D78.getX();
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D75.subtract(0.0d, vector3D78);
        double double81 = vector3D78.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D78.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D83 = vector3D82.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D84 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D45, (-0.7683919425686428d), vector3D82);
        org.apache.commons.math.geometry.Vector3D vector3D85 = rotation14.applyTo(vector3D45);
        double double86 = rotation14.getQ1();
        org.apache.commons.math.geometry.Rotation rotation87 = rotation8.applyTo(rotation14);
        double[][] doubleArray88 = rotation8.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException89 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: org.apache.commons.math.geometry.NotARotationMatrixException: ", (java.lang.Object[]) doubleArray88);
        org.apache.commons.math.geometry.Rotation rotation91 = new org.apache.commons.math.geometry.Rotation(doubleArray88, 2.164942851390959d);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-0.9202635195876083d) + "'", double7 == (-0.9202635195876083d));
        org.junit.Assert.assertNotNull(rotation8);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(rotation21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-0.7683919425686428d) + "'", double22 == (-0.7683919425686428d));
        org.junit.Assert.assertNotNull(rotationOrder24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1.0d + "'", double76 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.3691205271584663d + "'", double86 == 0.3691205271584663d);
        org.junit.Assert.assertNotNull(rotation87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) '4', 2.0d, (double) (byte) 100);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException7 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: ZXY", (java.lang.Object[]) doubleArray6);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException9 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray10 = cardanEulerSingularityException9.getArguments();
        java.lang.Throwable[] throwableArray11 = cardanEulerSingularityException9.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException13 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray14 = cardanEulerSingularityException13.getArguments();
        java.lang.String str15 = cardanEulerSingularityException13.getPattern();
        cardanEulerSingularityException9.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Object[] objArray17 = cardanEulerSingularityException13.getArguments();
        java.lang.Throwable[] throwableArray18 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Throwable[] throwableArray19 = cardanEulerSingularityException13.getSuppressed();
        java.lang.Object[] objArray20 = cardanEulerSingularityException13.getArguments();
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) cardanEulerSingularityException13);
        java.lang.Throwable[] throwableArray22 = notARotationMatrixException7.getSuppressed();
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException26 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str27 = cardanEulerSingularityException26.getPattern();
        java.lang.String str28 = cardanEulerSingularityException26.getPattern();
        java.lang.Throwable[] throwableArray29 = cardanEulerSingularityException26.getSuppressed();
        java.lang.Throwable[] throwableArray30 = cardanEulerSingularityException26.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException31 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.CardanEulerSingularityException: Cardan angles singularity", (java.lang.Object[]) throwableArray30);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException32 = new org.apache.commons.math.geometry.NotARotationMatrixException("org.apache.commons.math.geometry.NotARotationMatrixException: XYZ", (java.lang.Object[]) throwableArray30);
        notARotationMatrixException7.addSuppressed((java.lang.Throwable) notARotationMatrixException32);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException36 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.String str37 = cardanEulerSingularityException36.getPattern();
        java.lang.String str38 = cardanEulerSingularityException36.getPattern();
        java.lang.Throwable[] throwableArray39 = cardanEulerSingularityException36.getSuppressed();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException40 = new org.apache.commons.math.geometry.NotARotationMatrixException("XYX", (java.lang.Object[]) throwableArray39);
        java.lang.String str41 = notARotationMatrixException40.getPattern();
        java.lang.Object[] objArray42 = notARotationMatrixException40.getArguments();
        java.lang.String str43 = notARotationMatrixException40.getPattern();
        java.lang.String str44 = notARotationMatrixException40.getPattern();
        notARotationMatrixException32.addSuppressed((java.lang.Throwable) notARotationMatrixException40);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Euler angles singularity" + "'", str15, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Euler angles singularity" + "'", str27, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Euler angles singularity" + "'", str28, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Euler angles singularity" + "'", str37, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "XYX" + "'", str41, "XYX");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "XYX" + "'", str43, "XYX");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "XYX" + "'", str44, "XYX");
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        java.lang.String str3 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation11 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-1.4533522819483131d), 24.882865501017502d, (-0.9944340607881093d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Rotation rotation17 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) 10.0f, (double) 'a', (double) (short) 100);
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder12.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder12, (double) '#', 100.0d, (-634.6978979926987d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder23 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D24 = rotationOrder23.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotationOrder23.getA2();
        java.lang.String str26 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder23.getA3();
        org.apache.commons.math.geometry.Rotation rotation31 = new org.apache.commons.math.geometry.Rotation(rotationOrder23, (double) 10, 3.2087642143727657d, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder23.getA1();
        double[] doubleArray33 = rotation22.getAngles(rotationOrder23);
        double[] doubleArray34 = rotation11.getAngles(rotationOrder23);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotationOrder23.getA1();
        java.lang.String str36 = rotationOrder23.toString();
        org.apache.commons.math.geometry.Vector3D vector3D37 = rotationOrder23.getA1();
        java.lang.String str38 = rotationOrder23.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "YXZ" + "'", str1, "YXZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "YXZ" + "'", str3, "YXZ");
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "YXZ" + "'", str6, "YXZ");
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ZYZ" + "'", str13, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(rotationOrder23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ZXZ" + "'", str26, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[2.0132771373071714, 0.530964914873383, 1.4746143592344314]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.822333338026411, 1.4570158022026691, 0.6055302387646877]");
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ZXZ" + "'", str36, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ZXZ" + "'", str38, "ZXZ");
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ2();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D15.subtract(0.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D8.subtract(1.0d, vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D22 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D21.subtract(vector3D22);
        org.apache.commons.math.geometry.Vector3D vector3D25 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double26 = vector3D25.getX();
        org.apache.commons.math.geometry.Vector3D vector3D28 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double29 = vector3D28.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D25.subtract(0.0d, vector3D28);
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D23.add((-1.0d), vector3D25);
        double double32 = vector3D31.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D33 = rotation5.applyTo(vector3D31);
        org.apache.commons.math.geometry.RotationOrder rotationOrder34 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str35 = rotationOrder34.toString();
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotationOrder34.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = vector3D38.subtract(0.0d, vector3D41);
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double49 = vector3D48.getX();
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D45.subtract(0.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D38.subtract(1.0d, vector3D48);
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D53 = vector3D51.subtract(vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double56 = vector3D55.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D55.subtract(0.0d, vector3D58);
        org.apache.commons.math.geometry.Vector3D vector3D61 = vector3D53.add((-1.0d), vector3D55);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D71 = vector3D66.subtract(0.0d, vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D64.subtract(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double74 = vector3D73.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double77 = vector3D76.getX();
        org.apache.commons.math.geometry.Vector3D vector3D78 = vector3D73.subtract(0.0d, vector3D76);
        org.apache.commons.math.geometry.Vector3D vector3D80 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double81 = vector3D80.getX();
        org.apache.commons.math.geometry.Vector3D vector3D83 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double84 = vector3D83.getX();
        org.apache.commons.math.geometry.Vector3D vector3D85 = vector3D80.subtract(0.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D73.subtract(1.0d, vector3D83);
        org.apache.commons.math.geometry.Vector3D vector3D87 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D86.subtract(vector3D87);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D61, vector3D63, vector3D66, vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D90 = vector3D36.add(10.0d, vector3D66);
        double double91 = vector3D66.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D33.add(vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D((-0.9202635195876083d), (double) 100L, (-1.5707963267948966d));
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D33, vector3D96);
        double double98 = rotation97.getQ1();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2.0d + "'", double32 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(rotationOrder34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ZXY" + "'", str35, "ZXY");
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D53);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1.0d + "'", double56 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1.0d + "'", double74 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1.0d + "'", double77 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D78);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.0d + "'", double81 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-0.0010480438701620572d) + "'", double98 == (-0.0010480438701620572d));
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((-0.001575539555759437d), 0.5114629390766603d, (double) (short) 10, 0.0d, false);
        org.apache.commons.math.geometry.Rotation rotation6 = rotation5.revert();
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotation6.getAxis();
        double double8 = vector3D7.getX();
        org.junit.Assert.assertNotNull(rotation6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-0.05107952696855441d) + "'", double8 == (-0.05107952696855441d));
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray7 = rotation6.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException8 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray17 = rotation16.getMatrix();
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException18 = new org.apache.commons.math.geometry.NotARotationMatrixException("Euler angles singularity", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.NotARotationMatrixException notARotationMatrixException19 = new org.apache.commons.math.geometry.NotARotationMatrixException("hi!", (java.lang.Object[]) doubleArray17);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException21 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray22 = cardanEulerSingularityException21.getArguments();
        java.lang.Object[] objArray23 = cardanEulerSingularityException21.getArguments();
        java.lang.String str24 = cardanEulerSingularityException21.getPattern();
        java.lang.Object[] objArray25 = cardanEulerSingularityException21.getArguments();
        java.lang.Throwable[] throwableArray26 = cardanEulerSingularityException21.getSuppressed();
        notARotationMatrixException19.addSuppressed((java.lang.Throwable) cardanEulerSingularityException21);
        org.apache.commons.math.geometry.CardanEulerSingularityException cardanEulerSingularityException29 = new org.apache.commons.math.geometry.CardanEulerSingularityException(false);
        java.lang.Object[] objArray30 = cardanEulerSingularityException29.getArguments();
        java.lang.Object[] objArray31 = cardanEulerSingularityException29.getArguments();
        java.lang.String str32 = cardanEulerSingularityException29.getPattern();
        java.lang.Object[] objArray33 = cardanEulerSingularityException29.getArguments();
        java.lang.Throwable[] throwableArray34 = cardanEulerSingularityException29.getSuppressed();
        java.lang.Throwable[] throwableArray35 = cardanEulerSingularityException29.getSuppressed();
        cardanEulerSingularityException21.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        notARotationMatrixException8.addSuppressed((java.lang.Throwable) cardanEulerSingularityException29);
        java.lang.String str38 = cardanEulerSingularityException29.getPattern();
        java.lang.String str39 = cardanEulerSingularityException29.getPattern();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Euler angles singularity" + "'", str24, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Euler angles singularity" + "'", str32, "Euler angles singularity");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Euler angles singularity" + "'", str38, "Euler angles singularity");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Euler angles singularity" + "'", str39, "Euler angles singularity");
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.6242558681478626d, (-0.9714040953537869d), 0.7423983938032201d, (-0.8726264275373528d), false);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D((double) (short) 10, (double) (byte) 1, (double) (byte) -1);
        double double4 = vector3D3.getDelta();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-0.09917726107940238d) + "'", double4 == (-0.09917726107940238d));
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D0.subtract(1.0d, vector3D10);
        org.apache.commons.math.geometry.RotationOrder rotationOrder14 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder14.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double20 = vector3D19.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = vector3D16.subtract(0.0d, vector3D19);
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D19.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D23 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D15, vector3D19);
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(vector3D10, vector3D15);
        org.apache.commons.math.geometry.RotationOrder rotationOrder25 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation29 = new org.apache.commons.math.geometry.Rotation(rotationOrder25, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.XYX;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) 1, (double) (byte) 10, (double) (byte) 0);
        double[] doubleArray35 = rotation29.getAngles(rotationOrder30);
        org.apache.commons.math.geometry.Rotation rotation36 = rotation24.applyInverseTo(rotation29);
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Rotation rotation62 = new org.apache.commons.math.geometry.Rotation(vector3D60, (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation63 = rotation29.applyTo(rotation62);
        org.apache.commons.math.geometry.Rotation rotation64 = rotation63.revert();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(rotationOrder25);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-2.141592653589793, 2.566370614359173, 3.141592653589793]");
        org.junit.Assert.assertNotNull(rotation36);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(rotation64);
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.5137889913078371d, 1.1900368958131755d, (-0.08794413861279575d), (-0.20431139676264087d), true);
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotation5.getAxis();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(vector3D6, (-2.78032853728264E-4d));
        org.junit.Assert.assertNotNull(vector3D6);
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double1 = vector3D0.getX();
        org.apache.commons.math.geometry.Vector3D vector3D3 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double4 = vector3D3.getX();
        org.apache.commons.math.geometry.Vector3D vector3D5 = vector3D0.subtract(0.0d, vector3D3);
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D3.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder31 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D32 = rotationOrder31.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D33 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double34 = vector3D33.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D38 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double39 = vector3D38.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D35.subtract(0.0d, vector3D38);
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D33.subtract(vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D45 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double46 = vector3D45.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D42.subtract(0.0d, vector3D45);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D42.subtract(1.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D56 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D57 = vector3D55.subtract(vector3D56);
        org.apache.commons.math.geometry.Rotation rotation58 = new org.apache.commons.math.geometry.Rotation(vector3D30, vector3D32, vector3D35, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D57.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D6, vector3D59);
        org.apache.commons.math.geometry.RotationOrder rotationOrder62 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D63 = rotationOrder62.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotationOrder62.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D6.subtract((double) 0, vector3D64);
        double double66 = vector3D65.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D69 = new org.apache.commons.math.geometry.Vector3D((-634.6978979926987d), (double) 1L);
        org.apache.commons.math.geometry.Vector3D vector3D70 = vector3D65.add(vector3D69);
        double double71 = vector3D69.getZ();
        double double72 = vector3D69.getAlpha();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 1.0d + "'", double1 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(rotationOrder31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(rotationOrder62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.8414709848078965d + "'", double71 == 0.8414709848078965d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.09618196756046529d) + "'", double72 == (-0.09618196756046529d));
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder1, (double) 100, (double) (short) 10, (double) 10L);
        double double6 = rotation5.getQ3();
        org.apache.commons.math.geometry.RotationOrder rotationOrder7 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str8 = rotationOrder7.toString();
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D10 = rotationOrder7.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder7.getA3();
        double[] doubleArray12 = rotation5.getAngles(rotationOrder7);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder7.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str16 = rotationOrder15.toString();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder15.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = new org.apache.commons.math.geometry.Vector3D((-0.8412192543248603d), 3.1406380039107304d);
        double double24 = vector3D23.getX();
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D19.add((-0.8659616593396997d), vector3D23);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA2();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D31 = rotationOrder30.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D35.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D31, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D41 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double42 = vector3D41.getX();
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double44 = vector3D43.getX();
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D48 = vector3D43.subtract(0.0d, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D41.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D61 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double62 = vector3D61.getX();
        org.apache.commons.math.geometry.Vector3D vector3D64 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double65 = vector3D64.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D61.subtract(0.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = vector3D54.subtract(1.0d, vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D68 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D67.subtract(vector3D68);
        org.apache.commons.math.geometry.Vector3D vector3D71 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double72 = vector3D71.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D71.subtract(0.0d, vector3D74);
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D69.add((-1.0d), vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D78 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D43, (double) 100.0f, vector3D51, (double) (short) -1, vector3D71);
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D35.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double82 = vector3D81.getX();
        org.apache.commons.math.geometry.Vector3D vector3D84 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double85 = vector3D84.getX();
        org.apache.commons.math.geometry.Vector3D vector3D86 = vector3D81.subtract(0.0d, vector3D84);
        double double87 = vector3D84.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D88 = vector3D84.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D89 = vector3D88.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) (short) -1, vector3D51, (-0.7683919425686428d), vector3D88);
        org.apache.commons.math.geometry.Vector3D vector3D91 = vector3D28.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D92 = vector3D51.negate();
        org.apache.commons.math.geometry.Vector3D vector3D93 = new org.apache.commons.math.geometry.Vector3D(0.9553166181245093d, vector3D13, (double) 1L, vector3D23, 1.1229671256899891d, vector3D92);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.8662089827552298d) + "'", double6 == (-0.8662089827552298d));
        org.junit.Assert.assertNotNull(rotationOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "XZX" + "'", str8, "XZX");
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-0.5911320301150214, 2.1817925909340987, -1.025435474584856]");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "XZX" + "'", str16, "XZX");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-0.6665541168688351d) + "'", double24 == (-0.6665541168688351d));
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D38);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1.0d + "'", double72 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1.0d + "'", double82 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D88);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D((-0.6665200360546983d), (double) 1L);
        org.apache.commons.math.geometry.RotationOrder rotationOrder3 = org.apache.commons.math.geometry.RotationOrder.XYZ;
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder3.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder3, 1.5707963267948966d, (-1.0d), (double) ' ');
        org.apache.commons.math.geometry.Rotation rotation9 = rotation8.revert();
        double double10 = rotation9.getQ3();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotation9.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder12 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str13 = rotationOrder12.toString();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder12.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder12.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder12.getA2();
        double[] doubleArray18 = rotation9.getAngles(rotationOrder12);
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str20 = rotationOrder19.toString();
        org.apache.commons.math.geometry.Vector3D vector3D21 = rotationOrder19.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D23 = rotationOrder19.getA2();
        double double24 = vector3D23.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D25 = rotation9.applyInverseTo(vector3D23);
        double double26 = org.apache.commons.math.geometry.Vector3D.angle(vector3D2, vector3D23);
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D((double) (short) 1, (-0.0d));
        double double30 = vector3D29.getAlpha();
        double double31 = vector3D29.getY();
        org.apache.commons.math.geometry.Vector3D vector3D35 = new org.apache.commons.math.geometry.Vector3D((-0.8348312433510422d), 0.0d, 2.060217686612772d);
        org.apache.commons.math.geometry.Vector3D vector3D36 = vector3D29.add(vector3D35);
        org.apache.commons.math.geometry.Rotation rotation37 = new org.apache.commons.math.geometry.Rotation(vector3D23, vector3D36);
        org.apache.commons.math.geometry.Vector3D vector3D38 = vector3D23.normalize();
        org.junit.Assert.assertNotNull(rotationOrder3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.14599455657272695d) + "'", double10 == (-0.14599455657272695d));
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(rotationOrder12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "XZX" + "'", str13, "XZX");
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.911089704458946, 1.1032102335428604, 0.6658592074878087]");
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "XZX" + "'", str20, "XZX");
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.5707963267948967d + "'", double26 == 0.5707963267948967d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.8414709848078965d + "'", double31 == 0.8414709848078965d);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertNotNull(vector3D38);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        org.apache.commons.math.geometry.Vector3D vector3D0 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D2 = vector3D0.scalarMultiply((double) 1);
        double double3 = vector3D2.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D2.negate();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        double double12 = vector3D9.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D9.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder15 = org.apache.commons.math.geometry.RotationOrder.XZY;
        org.apache.commons.math.geometry.Vector3D vector3D16 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder15.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D14.add(vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D14.scalarMultiply(27.47493735326811d);
        double double21 = vector3D20.getDelta();
        double double22 = vector3D20.getY();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D2.add((-0.5373843183446426d), vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D20.negate();
        org.apache.commons.math.geometry.Vector3D vector3D28 = new org.apache.commons.math.geometry.Vector3D((-0.5033082423383954d), 0.23869349855450123d, (-378.71766086458643d));
        double double29 = vector3D28.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D24.add(vector3D28);
        double double31 = vector3D30.getY();
        org.junit.Assert.assertNotNull(vector3D0);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-378.71766086458643d) + "'", double29 == (-378.71766086458643d));
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.23869349855450123d + "'", double31 == 0.23869349855450123d);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(2.3391267197924392d, 0.7839109005632345d);
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        org.apache.commons.math.geometry.Rotation rotation4 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (byte) 0, 25.06596560241331d, 100.4491529857595d);
        org.apache.commons.math.geometry.Vector3D vector3D5 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double6 = vector3D5.getX();
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D5.subtract(0.0d, vector3D8);
        org.apache.commons.math.geometry.Vector3D vector3D12 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double13 = vector3D12.getX();
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double16 = vector3D15.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = vector3D12.subtract(0.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = vector3D5.subtract(1.0d, vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D19 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D18.subtract(vector3D19);
        double double21 = vector3D20.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D22 = rotation4.applyInverseTo(vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D31 = vector3D26.subtract(0.0d, vector3D29);
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D24.subtract(vector3D26);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D40 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double41 = vector3D40.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D37.subtract(0.0d, vector3D40);
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D50 = vector3D37.subtract(1.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D50.subtract(vector3D51);
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D57 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double58 = vector3D57.getX();
        org.apache.commons.math.geometry.Vector3D vector3D59 = vector3D54.subtract(0.0d, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D60 = vector3D52.add((-1.0d), vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D61 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D26, (double) 100.0f, vector3D34, (double) (short) -1, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D62 = vector3D54.orthogonal();
        double double63 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D22, vector3D54);
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D54.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D54.subtract(vector3D65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D50);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D59);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-0.9944340607881093d) + "'", double63 == (-0.9944340607881093d));
        org.junit.Assert.assertNotNull(vector3D64);
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D8 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double9 = vector3D8.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double12 = vector3D11.getX();
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D8.subtract(0.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D1.subtract(1.0d, vector3D11);
        org.apache.commons.math.geometry.Vector3D vector3D15 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D16 = vector3D14.subtract(vector3D15);
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.add((-1.0d), vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D25 = vector3D24.negate();
        double double26 = vector3D24.getX();
        double double27 = vector3D24.getX();
        org.apache.commons.math.geometry.RotationOrder rotationOrder30 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation34 = new org.apache.commons.math.geometry.Rotation(rotationOrder30, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation40 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder41 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D42 = rotationOrder41.getA1();
        org.apache.commons.math.geometry.Rotation rotation46 = new org.apache.commons.math.geometry.Rotation(rotationOrder41, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder47 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D48 = rotationOrder47.getA1();
        org.apache.commons.math.geometry.Rotation rotation52 = new org.apache.commons.math.geometry.Rotation(rotationOrder47, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation53 = rotation46.applyInverseTo(rotation52);
        org.apache.commons.math.geometry.Rotation rotation54 = rotation40.applyTo(rotation52);
        org.apache.commons.math.geometry.RotationOrder rotationOrder55 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D56 = rotationOrder55.getA1();
        org.apache.commons.math.geometry.Rotation rotation60 = new org.apache.commons.math.geometry.Rotation(rotationOrder55, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Rotation rotation66 = new org.apache.commons.math.geometry.Rotation(rotationOrder61, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation67 = rotation60.applyInverseTo(rotation66);
        double double68 = rotation67.getQ2();
        org.apache.commons.math.geometry.Rotation rotation69 = rotation40.applyInverseTo(rotation67);
        org.apache.commons.math.geometry.RotationOrder rotationOrder70 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D71 = rotationOrder70.getA1();
        org.apache.commons.math.geometry.Rotation rotation75 = new org.apache.commons.math.geometry.Rotation(rotationOrder70, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder76 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        org.apache.commons.math.geometry.Rotation rotation80 = new org.apache.commons.math.geometry.Rotation(rotationOrder76, (double) (short) -1, (double) 0.0f, (double) 10L);
        org.apache.commons.math.geometry.Rotation rotation81 = rotation75.applyTo(rotation80);
        org.apache.commons.math.geometry.Rotation rotation82 = rotation40.applyTo(rotation81);
        org.apache.commons.math.geometry.Rotation rotation83 = rotation34.applyInverseTo(rotation81);
        double double84 = rotation34.getQ1();
        org.apache.commons.math.geometry.RotationOrder rotationOrder85 = org.apache.commons.math.geometry.RotationOrder.XZX;
        java.lang.String str86 = rotationOrder85.toString();
        org.apache.commons.math.geometry.Vector3D vector3D87 = rotationOrder85.getA3();
        double[] doubleArray88 = rotation34.getAngles(rotationOrder85);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder85.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D90 = new org.apache.commons.math.geometry.Vector3D((double) (byte) 0, vector3D89);
        org.apache.commons.math.geometry.Vector3D vector3D91 = new org.apache.commons.math.geometry.Vector3D(0.9166535214993772d, vector3D24, 0.42502526448939937d, vector3D90);
        double double92 = vector3D90.getX();
        double double93 = vector3D90.getY();
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-2.0d) + "'", double26 == (-2.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-2.0d) + "'", double27 == (-2.0d));
        org.junit.Assert.assertNotNull(rotationOrder30);
        org.junit.Assert.assertNotNull(rotationOrder41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(rotationOrder47);
        org.junit.Assert.assertNotNull(vector3D48);
        org.junit.Assert.assertNotNull(rotation53);
        org.junit.Assert.assertNotNull(rotation54);
        org.junit.Assert.assertNotNull(rotationOrder55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(rotation67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(rotation69);
        org.junit.Assert.assertNotNull(rotationOrder70);
        org.junit.Assert.assertNotNull(vector3D71);
        org.junit.Assert.assertNotNull(rotationOrder76);
        org.junit.Assert.assertNotNull(rotation81);
        org.junit.Assert.assertNotNull(rotation82);
        org.junit.Assert.assertNotNull(rotation83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-0.45973278686101987d) + "'", double84 == (-0.45973278686101987d));
        org.junit.Assert.assertNotNull(rotationOrder85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "XZX" + "'", str86, "XZX");
        org.junit.Assert.assertNotNull(vector3D87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-2.227294405064556, 2.0413190668629926, -1.906858042085361]");
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(0.18486421827459873d, (-1.4150502197785468d));
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7062399578631842d, (-0.66826608731653d), 44.73549720146294d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = new org.apache.commons.math.geometry.Vector3D(0.20776853027692543d, 20.0d);
        org.apache.commons.math.geometry.Vector3D vector3D14 = vector3D9.subtract((-495.9743622439995d), vector3D13);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D14);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.apache.commons.math.geometry.RotationOrder rotationOrder1 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder1.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder1.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = vector3D3.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D4.scalarMultiply(0.005259088864518715d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.RotationOrder rotationOrder9 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str10 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder9.getA3();
        java.lang.String str12 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, (double) 100L, 0.5114629390766603d, (-2.0d));
        java.lang.String str17 = rotationOrder9.toString();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder9.getA2();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 100.4491529857595d, 25.06596560241331d, (double) 'a');
        org.apache.commons.math.geometry.Rotation rotation26 = new org.apache.commons.math.geometry.Rotation(rotationOrder9, 2.0678198605632665d, 0.38468101661851206d, (-0.16624968048555705d));
        org.apache.commons.math.geometry.Vector3D vector3D27 = rotationOrder9.getA3();
        double double28 = vector3D27.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D29 = new org.apache.commons.math.geometry.Vector3D(0.2996643961824783d, vector3D7, (-0.5781899779970769d), vector3D27);
        org.junit.Assert.assertNotNull(rotationOrder1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(rotationOrder9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ZXY" + "'", str10, "ZXY");
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXY" + "'", str12, "ZXY");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ZXY" + "'", str17, "ZXY");
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder13 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder13.getA1();
        org.apache.commons.math.geometry.Rotation rotation18 = new org.apache.commons.math.geometry.Rotation(rotationOrder13, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder19 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D20 = rotationOrder19.getA1();
        org.apache.commons.math.geometry.Rotation rotation24 = new org.apache.commons.math.geometry.Rotation(rotationOrder19, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation25 = rotation18.applyInverseTo(rotation24);
        org.apache.commons.math.geometry.Rotation rotation26 = rotation12.applyTo(rotation24);
        org.apache.commons.math.geometry.RotationOrder rotationOrder27 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D28 = rotationOrder27.getA1();
        org.apache.commons.math.geometry.Rotation rotation32 = new org.apache.commons.math.geometry.Rotation(rotationOrder27, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder33 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D34 = rotationOrder33.getA1();
        org.apache.commons.math.geometry.Rotation rotation38 = new org.apache.commons.math.geometry.Rotation(rotationOrder33, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation39 = rotation32.applyInverseTo(rotation38);
        double double40 = rotation39.getQ2();
        org.apache.commons.math.geometry.Rotation rotation41 = rotation12.applyInverseTo(rotation39);
        org.apache.commons.math.geometry.Rotation rotation47 = new org.apache.commons.math.geometry.Rotation((double) 1L, (double) ' ', (double) 1, (double) 0L, false);
        org.apache.commons.math.geometry.RotationOrder rotationOrder48 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D49 = rotationOrder48.getA1();
        org.apache.commons.math.geometry.Rotation rotation53 = new org.apache.commons.math.geometry.Rotation(rotationOrder48, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.RotationOrder rotationOrder54 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D55 = rotationOrder54.getA1();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(rotationOrder54, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Rotation rotation60 = rotation53.applyInverseTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation61 = rotation47.applyTo(rotation59);
        org.apache.commons.math.geometry.Rotation rotation62 = rotation12.applyInverseTo(rotation61);
        org.apache.commons.math.geometry.Rotation rotation63 = rotation5.applyTo(rotation61);
        org.apache.commons.math.geometry.Vector3D vector3D64 = rotation61.getAxis();
        double double65 = vector3D64.getZ();
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D64.negate();
        org.apache.commons.math.geometry.Vector3D vector3D67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D64.add(vector3D67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(rotationOrder13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(rotationOrder19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(rotation25);
        org.junit.Assert.assertNotNull(rotation26);
        org.junit.Assert.assertNotNull(rotationOrder27);
        org.junit.Assert.assertNotNull(vector3D28);
        org.junit.Assert.assertNotNull(rotationOrder33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(rotation39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(rotation41);
        org.junit.Assert.assertNotNull(rotationOrder48);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(rotationOrder54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotation60);
        org.junit.Assert.assertNotNull(rotation61);
        org.junit.Assert.assertNotNull(rotation62);
        org.junit.Assert.assertNotNull(rotation63);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.8286204267864343d + "'", double65 == 0.8286204267864343d);
        org.junit.Assert.assertNotNull(vector3D66);
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZYZ;
        java.lang.String str1 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D4 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 100.0f, 10.0d, 0.10830291305827339d);
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.5764447261520099d), 0.0d, (-0.1056478979494711d));
        double[][] doubleArray13 = rotation12.getMatrix();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ZYZ" + "'", str1, "ZYZ");
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertNotNull(doubleArray13);
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(54.54841155384128d, 0.3849691255605494d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder4 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder4.getA2();
        java.lang.String str12 = rotationOrder4.toString();
        org.apache.commons.math.geometry.Rotation rotation16 = new org.apache.commons.math.geometry.Rotation(rotationOrder4, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D17 = rotationOrder4.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D18 = rotationOrder4.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D19 = rotationOrder4.getA3();
        double double20 = vector3D19.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D21 = new org.apache.commons.math.geometry.Vector3D(0.41956834513335173d, vector3D19);
        double double22 = vector3D21.getX();
        double double23 = org.apache.commons.math.geometry.Vector3D.dotProduct(vector3D2, vector3D21);
        org.junit.Assert.assertNotNull(rotationOrder4);
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ZXZ" + "'", str12, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.15756071974081798d + "'", double23 == 0.15756071974081798d);
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) (short) 10, (-10.53200198742562d), 2.23606797749979d);
        org.apache.commons.math.geometry.Vector3D vector3D7 = rotationOrder0.getA2();
        java.lang.String str8 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation12 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-0.1934112408002968d), (-0.45973278686101987d), 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D14 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA1();
        java.lang.String str16 = rotationOrder0.toString();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ZXZ" + "'", str8, "ZXZ");
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertNotNull(vector3D15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ZXZ" + "'", str16, "ZXZ");
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (double) 10, (double) (short) 10, (-1.0d));
        org.apache.commons.math.geometry.Vector3D vector3D6 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 2.0678198605632665d, (double) (byte) 0, (double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D11 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D12 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D13 = rotationOrder0.getA2();
        java.lang.String str14 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D15 = rotationOrder0.getA3();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ZXY" + "'", str14, "ZXY");
        org.junit.Assert.assertNotNull(vector3D15);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZY;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double7 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double10 = vector3D9.getX();
        org.apache.commons.math.geometry.Vector3D vector3D11 = vector3D6.subtract(0.0d, vector3D9);
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D4.subtract(vector3D6);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D20 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double21 = vector3D20.getX();
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D17.subtract(0.0d, vector3D20);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D17.subtract(1.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D31 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D30.subtract(vector3D31);
        org.apache.commons.math.geometry.Vector3D vector3D34 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double35 = vector3D34.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double38 = vector3D37.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = vector3D34.subtract(0.0d, vector3D37);
        org.apache.commons.math.geometry.Vector3D vector3D40 = vector3D32.add((-1.0d), vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D41 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D6, (double) 100.0f, vector3D14, (double) (short) -1, vector3D34);
        double double42 = vector3D6.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double45 = vector3D44.getX();
        org.apache.commons.math.geometry.Vector3D vector3D47 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double48 = vector3D47.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = vector3D44.subtract(0.0d, vector3D47);
        org.apache.commons.math.geometry.Vector3D vector3D51 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double52 = vector3D51.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double55 = vector3D54.getX();
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D51.subtract(0.0d, vector3D54);
        double double57 = vector3D54.getDelta();
        org.apache.commons.math.geometry.Rotation rotation59 = new org.apache.commons.math.geometry.Rotation(vector3D54, 2.0d);
        org.apache.commons.math.geometry.RotationOrder rotationOrder61 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder61.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D66 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double67 = vector3D66.getX();
        org.apache.commons.math.geometry.Vector3D vector3D68 = vector3D63.subtract(0.0d, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D69 = vector3D66.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D62, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D71 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D6, (double) (byte) 10, vector3D49, (double) (short) -1, vector3D54, (double) ' ', vector3D66);
        org.apache.commons.math.geometry.Rotation rotation72 = new org.apache.commons.math.geometry.Rotation(vector3D1, vector3D66);
        org.apache.commons.math.geometry.Vector3D vector3D73 = rotation72.getAxis();
        org.apache.commons.math.geometry.RotationOrder rotationOrder74 = org.apache.commons.math.geometry.RotationOrder.YXZ;
        java.lang.String str75 = rotationOrder74.toString();
        org.apache.commons.math.geometry.Vector3D vector3D76 = rotationOrder74.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D77 = rotationOrder74.getA2();
        org.apache.commons.math.geometry.Rotation rotation81 = new org.apache.commons.math.geometry.Rotation(rotationOrder74, 0.0952905926857031d, (double) 10.0f, (-406.7116193600549d));
        double[] doubleArray82 = rotation72.getAngles(rotationOrder74);
        double[][] doubleArray83 = rotation72.getMatrix();
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D11);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertNotNull(vector3D31);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertNotNull(vector3D40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0d + "'", double45 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(rotationOrder61);
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 1.0d + "'", double67 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D68);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertNotNull(vector3D73);
        org.junit.Assert.assertNotNull(rotationOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "YXZ" + "'", str75, "YXZ");
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0, -0.0, -1.5707963267948963]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.YZX;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D2 = rotationOrder0.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA1();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(vector3D2);
        org.junit.Assert.assertNotNull(vector3D3);
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.7212688287676877d, 2.61062773871641d, 0.29670794249355786d, (-0.04104628521447248d), true);
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        org.apache.commons.math.geometry.Vector3D vector3D2 = new org.apache.commons.math.geometry.Vector3D(54.54841155384128d, 0.0d);
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.apache.commons.math.geometry.Vector3D vector3D1 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double2 = vector3D1.getX();
        org.apache.commons.math.geometry.Vector3D vector3D4 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double5 = vector3D4.getX();
        org.apache.commons.math.geometry.Vector3D vector3D6 = vector3D1.subtract(0.0d, vector3D4);
        org.apache.commons.math.geometry.Vector3D vector3D7 = vector3D4.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D8 = new org.apache.commons.math.geometry.Vector3D(0.0d, vector3D7);
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusK;
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D10.scalarMultiply((double) 1);
        org.apache.commons.math.geometry.Vector3D vector3D13 = vector3D7.subtract((double) 0, vector3D12);
        double double14 = vector3D13.getAlpha();
        org.apache.commons.math.geometry.Vector3D vector3D16 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double17 = vector3D16.getX();
        org.apache.commons.math.geometry.Vector3D vector3D18 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double19 = vector3D18.getX();
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double22 = vector3D21.getX();
        org.apache.commons.math.geometry.Vector3D vector3D23 = vector3D18.subtract(0.0d, vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = vector3D16.subtract(vector3D18);
        org.apache.commons.math.geometry.Vector3D vector3D26 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double27 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double30 = vector3D29.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D29.subtract(0.0d, vector3D32);
        org.apache.commons.math.geometry.Vector3D vector3D36 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double37 = vector3D36.getX();
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D41 = vector3D36.subtract(0.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D42 = vector3D29.subtract(1.0d, vector3D39);
        org.apache.commons.math.geometry.Vector3D vector3D43 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D42.subtract(vector3D43);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double47 = vector3D46.getX();
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D51 = vector3D46.subtract(0.0d, vector3D49);
        org.apache.commons.math.geometry.Vector3D vector3D52 = vector3D44.add((-1.0d), vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D53 = new org.apache.commons.math.geometry.Vector3D((double) (byte) -1, vector3D18, (double) 100.0f, vector3D26, (double) (short) -1, vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D55 = org.apache.commons.math.geometry.Vector3D.minusK;
        org.apache.commons.math.geometry.Vector3D vector3D56 = vector3D26.add((-1.0d), vector3D55);
        double double57 = vector3D26.getX();
        org.apache.commons.math.geometry.Vector3D vector3D58 = vector3D26.negate();
        org.apache.commons.math.geometry.RotationOrder rotationOrder60 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        java.lang.String str61 = rotationOrder60.toString();
        org.apache.commons.math.geometry.Vector3D vector3D62 = rotationOrder60.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D64 = vector3D62.scalarMultiply((double) 100L);
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D26.subtract((-0.0d), vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D13.subtract(vector3D64);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D69 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double70 = vector3D69.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double73 = vector3D72.getX();
        org.apache.commons.math.geometry.Vector3D vector3D74 = vector3D69.subtract(0.0d, vector3D72);
        org.apache.commons.math.geometry.Vector3D vector3D75 = vector3D67.subtract(vector3D69);
        org.apache.commons.math.geometry.Vector3D vector3D76 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.Vector3D vector3D77 = vector3D67.negate();
        org.apache.commons.math.geometry.Rotation rotation79 = new org.apache.commons.math.geometry.Rotation(vector3D67, (-2.7755575615628914E-17d));
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.orthogonal();
        double double81 = org.apache.commons.math.geometry.Vector3D.angle(vector3D66, vector3D67);
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D67.orthogonal();
        org.apache.commons.math.geometry.RotationOrder rotationOrder84 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Rotation rotation88 = new org.apache.commons.math.geometry.Rotation(rotationOrder84, (double) 100, (double) (short) 10, (double) 10L);
        org.apache.commons.math.geometry.Vector3D vector3D89 = rotationOrder84.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D90 = rotationOrder84.getA3();
        org.apache.commons.math.geometry.Vector3D vector3D91 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D92 = rotationOrder84.getA2();
        org.apache.commons.math.geometry.Vector3D vector3D93 = vector3D67.add(100.00150912700792d, vector3D92);
        org.apache.commons.math.geometry.Vector3D vector3D96 = new org.apache.commons.math.geometry.Vector3D(0.8605691650229957d, 2.6575295970997246d);
        org.apache.commons.math.geometry.Rotation rotation97 = new org.apache.commons.math.geometry.Rotation(vector3D67, vector3D96);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D6);
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D23);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D41);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertNotNull(vector3D43);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 1.0d + "'", double47 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D51);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(vector3D56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertNotNull(rotationOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ZXY" + "'", str61, "ZXY");
        org.junit.Assert.assertNotNull(vector3D62);
        org.junit.Assert.assertNotNull(vector3D64);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 1.0d + "'", double70 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1.0d + "'", double73 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertNotNull(vector3D75);
        org.junit.Assert.assertNotNull(vector3D76);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1.5607966601082315d + "'", double81 == 1.5607966601082315d);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertNotNull(rotationOrder84);
        org.junit.Assert.assertNotNull(vector3D89);
        org.junit.Assert.assertNotNull(vector3D90);
        org.junit.Assert.assertNotNull(vector3D91);
        org.junit.Assert.assertNotNull(vector3D92);
        org.junit.Assert.assertNotNull(vector3D93);
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.XYX;
        java.lang.String str1 = rotationOrder0.toString();
        java.lang.String str2 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D3 = rotationOrder0.getA3();
        java.lang.String str4 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Vector3D vector3D5 = rotationOrder0.getA1();
        java.lang.String str6 = rotationOrder0.toString();
        org.apache.commons.math.geometry.Rotation rotation10 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, (-3.0494479105138855E-17d), 0.9999500037496876d, 3.2087642143727657d);
        org.apache.commons.math.geometry.Rotation rotation14 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 10.03353735021304d, (-6.233699021863243E-4d), 2.127525943335012d);
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "XYX" + "'", str1, "XYX");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "XYX" + "'", str2, "XYX");
        org.junit.Assert.assertNotNull(vector3D3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "XYX" + "'", str4, "XYX");
        org.junit.Assert.assertNotNull(vector3D5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "XYX" + "'", str6, "XYX");
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.apache.commons.math.geometry.RotationOrder rotationOrder0 = org.apache.commons.math.geometry.RotationOrder.ZXZ;
        org.apache.commons.math.geometry.Vector3D vector3D1 = rotationOrder0.getA1();
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(rotationOrder0, 0.7071067811865476d, (-1.0d), (double) ' ');
        double[][] doubleArray6 = rotation5.getMatrix();
        org.apache.commons.math.geometry.Rotation rotation8 = new org.apache.commons.math.geometry.Rotation(doubleArray6, 0.7675707508815894d);
        org.apache.commons.math.geometry.Vector3D vector3D9 = org.apache.commons.math.geometry.Vector3D.minusJ;
        org.apache.commons.math.geometry.Vector3D vector3D10 = vector3D9.normalize();
        double double11 = vector3D9.getAlpha();
        org.apache.commons.math.geometry.Rotation rotation13 = new org.apache.commons.math.geometry.Rotation(vector3D9, (double) 10.0f);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        double double20 = vector3D17.getDelta();
        org.apache.commons.math.geometry.Rotation rotation22 = new org.apache.commons.math.geometry.Rotation(vector3D17, 2.0d);
        org.apache.commons.math.geometry.Vector3D vector3D25 = new org.apache.commons.math.geometry.Vector3D((double) ' ', 0.0d);
        org.apache.commons.math.geometry.Vector3D vector3D26 = rotation22.applyTo(vector3D25);
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D30 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double31 = vector3D30.getX();
        org.apache.commons.math.geometry.Vector3D vector3D32 = vector3D27.subtract(0.0d, vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D33 = vector3D30.normalize();
        org.apache.commons.math.geometry.Vector3D vector3D34 = vector3D26.subtract(vector3D30);
        org.apache.commons.math.geometry.Vector3D vector3D35 = rotation13.applyInverseTo(vector3D34);
        org.apache.commons.math.geometry.Vector3D vector3D36 = rotation8.applyTo(vector3D35);
        double double37 = vector3D35.getNorm();
        org.junit.Assert.assertNotNull(rotationOrder0);
        org.junit.Assert.assertNotNull(vector3D1);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(vector3D9);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.5707963267948966d) + "'", double11 == (-1.5707963267948966d));
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(vector3D26);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertNotNull(vector3D33);
        org.junit.Assert.assertNotNull(vector3D34);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertNotNull(vector3D36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.5758066333301305d + "'", double37 == 0.5758066333301305d);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.apache.commons.math.geometry.Vector3D vector3D3 = new org.apache.commons.math.geometry.Vector3D(0.0d, 3.1317571081930495d, (-0.3966058266990962d));
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.apache.commons.math.geometry.Rotation rotation5 = new org.apache.commons.math.geometry.Rotation(0.15135620392549756d, 1.580316067234769d, (double) ' ', Double.NaN, true);
        double[][] doubleArray6 = rotation5.getMatrix();
        double double7 = rotation5.getQ1();
        double double8 = rotation5.getQ2();
        org.apache.commons.math.geometry.Rotation rotation9 = rotation5.revert();
        double double10 = rotation5.getQ2();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue(Double.isNaN(double8));
        org.junit.Assert.assertNotNull(rotation9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        org.apache.commons.math.geometry.Rotation rotation6 = new org.apache.commons.math.geometry.Rotation(0.26237485370392877d, (-0.14599455657272695d), 0.23869349855450123d, 0.42487699275774343d, true);
        org.apache.commons.math.geometry.Vector3D vector3D7 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double8 = vector3D7.getX();
        org.apache.commons.math.geometry.Vector3D vector3D10 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double11 = vector3D10.getX();
        org.apache.commons.math.geometry.Vector3D vector3D12 = vector3D7.subtract(0.0d, vector3D10);
        org.apache.commons.math.geometry.Vector3D vector3D14 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double15 = vector3D14.getX();
        org.apache.commons.math.geometry.Vector3D vector3D17 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double18 = vector3D17.getX();
        org.apache.commons.math.geometry.Vector3D vector3D19 = vector3D14.subtract(0.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D20 = vector3D7.subtract(1.0d, vector3D17);
        org.apache.commons.math.geometry.Vector3D vector3D21 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D22 = vector3D20.subtract(vector3D21);
        org.apache.commons.math.geometry.Vector3D vector3D24 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double25 = vector3D24.getX();
        org.apache.commons.math.geometry.Vector3D vector3D27 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double28 = vector3D27.getX();
        org.apache.commons.math.geometry.Vector3D vector3D29 = vector3D24.subtract(0.0d, vector3D27);
        org.apache.commons.math.geometry.Vector3D vector3D30 = vector3D22.add((-1.0d), vector3D24);
        double double31 = vector3D30.getNorm();
        org.apache.commons.math.geometry.Vector3D vector3D32 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double33 = vector3D32.getX();
        org.apache.commons.math.geometry.Vector3D vector3D35 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double36 = vector3D35.getX();
        org.apache.commons.math.geometry.Vector3D vector3D37 = vector3D32.subtract(0.0d, vector3D35);
        org.apache.commons.math.geometry.Vector3D vector3D39 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double40 = vector3D39.getX();
        org.apache.commons.math.geometry.Vector3D vector3D42 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double43 = vector3D42.getX();
        org.apache.commons.math.geometry.Vector3D vector3D44 = vector3D39.subtract(0.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D45 = vector3D32.subtract(1.0d, vector3D42);
        org.apache.commons.math.geometry.Vector3D vector3D46 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D47 = vector3D45.subtract(vector3D46);
        org.apache.commons.math.geometry.Vector3D vector3D49 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double50 = vector3D49.getX();
        org.apache.commons.math.geometry.Vector3D vector3D52 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double53 = vector3D52.getX();
        org.apache.commons.math.geometry.Vector3D vector3D54 = vector3D49.subtract(0.0d, vector3D52);
        org.apache.commons.math.geometry.Vector3D vector3D55 = vector3D47.add((-1.0d), vector3D49);
        org.apache.commons.math.geometry.RotationOrder rotationOrder56 = org.apache.commons.math.geometry.RotationOrder.ZXY;
        org.apache.commons.math.geometry.Vector3D vector3D57 = rotationOrder56.getA1();
        org.apache.commons.math.geometry.Vector3D vector3D58 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double59 = vector3D58.getX();
        org.apache.commons.math.geometry.Vector3D vector3D60 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double61 = vector3D60.getX();
        org.apache.commons.math.geometry.Vector3D vector3D63 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double64 = vector3D63.getX();
        org.apache.commons.math.geometry.Vector3D vector3D65 = vector3D60.subtract(0.0d, vector3D63);
        org.apache.commons.math.geometry.Vector3D vector3D66 = vector3D58.subtract(vector3D60);
        org.apache.commons.math.geometry.Vector3D vector3D67 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double68 = vector3D67.getX();
        org.apache.commons.math.geometry.Vector3D vector3D70 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double71 = vector3D70.getX();
        org.apache.commons.math.geometry.Vector3D vector3D72 = vector3D67.subtract(0.0d, vector3D70);
        org.apache.commons.math.geometry.Vector3D vector3D74 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double75 = vector3D74.getX();
        org.apache.commons.math.geometry.Vector3D vector3D77 = org.apache.commons.math.geometry.Vector3D.plusI;
        double double78 = vector3D77.getX();
        org.apache.commons.math.geometry.Vector3D vector3D79 = vector3D74.subtract(0.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D80 = vector3D67.subtract(1.0d, vector3D77);
        org.apache.commons.math.geometry.Vector3D vector3D81 = org.apache.commons.math.geometry.Vector3D.plusI;
        org.apache.commons.math.geometry.Vector3D vector3D82 = vector3D80.subtract(vector3D81);
        org.apache.commons.math.geometry.Rotation rotation83 = new org.apache.commons.math.geometry.Rotation(vector3D55, vector3D57, vector3D60, vector3D82);
        double double84 = vector3D57.getDelta();
        org.apache.commons.math.geometry.Vector3D vector3D85 = org.apache.commons.math.geometry.Vector3D.crossProduct(vector3D30, vector3D57);
        org.apache.commons.math.geometry.Vector3D vector3D86 = rotation6.applyTo(vector3D85);
        org.apache.commons.math.geometry.Vector3D vector3D87 = new org.apache.commons.math.geometry.Vector3D(0.24893698743024015d, vector3D86);
        org.apache.commons.math.geometry.Rotation rotation89 = new org.apache.commons.math.geometry.Rotation(vector3D86, (-1024.0d));
        org.junit.Assert.assertNotNull(vector3D7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D12);
        org.junit.Assert.assertNotNull(vector3D14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D19);
        org.junit.Assert.assertNotNull(vector3D20);
        org.junit.Assert.assertNotNull(vector3D21);
        org.junit.Assert.assertNotNull(vector3D22);
        org.junit.Assert.assertNotNull(vector3D24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D29);
        org.junit.Assert.assertNotNull(vector3D30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.0d + "'", double31 == 2.0d);
        org.junit.Assert.assertNotNull(vector3D32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D37);
        org.junit.Assert.assertNotNull(vector3D39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D44);
        org.junit.Assert.assertNotNull(vector3D45);
        org.junit.Assert.assertNotNull(vector3D46);
        org.junit.Assert.assertNotNull(vector3D47);
        org.junit.Assert.assertNotNull(vector3D49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0d + "'", double50 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D54);
        org.junit.Assert.assertNotNull(vector3D55);
        org.junit.Assert.assertNotNull(rotationOrder56);
        org.junit.Assert.assertNotNull(vector3D57);
        org.junit.Assert.assertNotNull(vector3D58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1.0d + "'", double61 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D65);
        org.junit.Assert.assertNotNull(vector3D66);
        org.junit.Assert.assertNotNull(vector3D67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D72);
        org.junit.Assert.assertNotNull(vector3D74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1.0d + "'", double75 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0d + "'", double78 == 1.0d);
        org.junit.Assert.assertNotNull(vector3D79);
        org.junit.Assert.assertNotNull(vector3D80);
        org.junit.Assert.assertNotNull(vector3D81);
        org.junit.Assert.assertNotNull(vector3D82);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.5707963267948966d + "'", double84 == 1.5707963267948966d);
        org.junit.Assert.assertNotNull(vector3D85);
        org.junit.Assert.assertNotNull(vector3D86);
    }
}

